{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\taskhandle.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\taskhandle.vue","mtime":1684246187967},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgJ0Avc3RhdGljRGljdC9mbG93U3RhdGljRGljdC5qcycNCmltcG9ydCAqIGFzIGFwaSBmcm9tICdAL2FwaS9xdWFsaXR5Jw0KZXhwb3J0IGRlZmF1bHQgew0KICBwcm9wczogWyd0YXNrSW5mbyddLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBmb3JtRGF0YTogew0KICAgICAgICBhcHByb3ZhbFR5cGU6ICdhZ3JlZScsDQogICAgICAgIGNvbW1lbnQ6ICcnLA0KICAgICAgICBkZWxlZ2F0ZUFzc2dpbmVlOiAnJw0KICAgICAgfSwNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIGNvbW1lbnQ6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7floavlhpnlrqHmibnmhI/op4EnLA0KICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9LA0KICAgICAgb3BlcmF0aW9uTGlzdDogW10sDQoNCiAgICAgIHVzZXJPcHRpb25zOiBbXSwNCiAgICAgIGF1ZGl0VXNlcjogW10sDQogICAgICBjb3B5VXNlclZpc2libGU6IGZhbHNlDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkge30sDQogIGNvbXB1dGVkOiB7DQogICAgZmxvd09wZXJhdGlvbkxpc3QoKSB7DQogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLm9wZXJhdGlvbkxpc3QpKSB7DQogICAgICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbkxpc3QubWFwKGl0ZW0gPT4gew0KICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT09IHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLk1VTFRJX1NJR04gJiYgaXRlbS5tdWx0aVNpZ25Bc3NpZ25lZSAhPSBudWxsKSB7DQogICAgICAgICAgICBsZXQgbXVsdGlTaWduQXNzaWduZWUgPSB7DQogICAgICAgICAgICAgIC4uLml0ZW0ubXVsdGlTaWduQXNzaWduZWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIG11bHRpU2lnbkFzc2lnbmVlLmFzc2lnbmVlTGlzdCA9IGl0ZW0ubXVsdGlTaWduQXNzaWduZWUuYXNzaWduZWVMaXN0DQogICAgICAgICAgICAgID8gbXVsdGlTaWduQXNzaWduZWUuYXNzaWduZWVMaXN0LnNwbGl0KCcsJykNCiAgICAgICAgICAgICAgOiB1bmRlZmluZWQNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgIC4uLml0ZW0sDQogICAgICAgICAgICAgIG11bHRpU2lnbkFzc2lnbmVlDQogICAgICAgICAgICB9DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgIC4uLml0ZW0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gW10NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7fSwNCiAgbWV0aG9kczogew0KICAgIGluaXREYXRhKCkgew0KICAgICAgdGhpcy5nZXRDb3B5VXNlckJ5Rmxvd0tleSgpDQoNCiAgICAgIGFwaQ0KICAgICAgICAudmlld1J1bnRpbWVUYXNrSW5mbyh7DQogICAgICAgICAgcHJvY2Vzc0RlZmluaXRpb25JZDogdGhpcy50YXNrSW5mb1sncHJvY2Vzc0RlZmluaXRpb25JZCddLA0KICAgICAgICAgIHByb2Nlc3NJbnN0YW5jZUlkOiB0aGlzLnRhc2tJbmZvWydwcm9jZXNzSW5zdGFuY2VJZCddLA0KICAgICAgICAgIHRhc2tJZDogdGhpcy50YXNrSW5mb1sndGFza0lkJ10NCiAgICAgICAgfSkNCiAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICB0aGlzLm9wZXJhdGlvbkxpc3QgPSAocmVzLmRhdGEub3BlcmF0aW9uTGlzdCB8fCBbXSkuZmlsdGVyKGl0ZW0gPT4gew0KICAgICAgICAgICAgcmV0dXJuICgNCiAgICAgICAgICAgICAgaXRlbS50eXBlICE9PSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5DT19TSUdOICYmIGl0ZW0udHlwZSAhPT0gdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuUkVWT0tFDQogICAgICAgICAgICApDQogICAgICAgICAgfSkNCiAgICAgICAgfSkNCiAgICB9LA0KICAgIGdldENvcHlVc2VyQnlGbG93S2V5KCkgew0KICAgICAgYXBpLmdldENvcHlVc2VyQnlGbG93S2V5KHsNCiAgICAgICAgICBlbnRyeUtleTogdGhpcy50YXNrSW5mb1snZW50cnlLZXknXSwNCiAgICAgICAgICBmbG93S2V5OiB0aGlzLnRhc2tJbmZvWydmbG93S2V5J10sDQoJCQlidWlsZFNlY3Rpb246IHRoaXMuJHN0b3JlLmdldHRlcnMuY3VycmVudEJpYW9EdWFuLmlkIHx8IDMsDQoJCQlwcm9qZWN0SWQ6IHRoaXMuJHN0b3JlLmdldHRlcnMuY3VyUHJvamVjdC5pZCB8fCAyDQogICAgICAgIC8vICAgYnVpbGRTZWN0aW9uOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnByb2plY3QuaWQsDQogICAgICAgIC8vICAgcHJvamVjdElkOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnByb2plY3RbJ3BhcmVudGlkJ10gfHwgMg0KICAgICAgICB9KQ0KICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgIGxldCBkYXRhID0gcmVzLmRhdGEgfHwge30NCiAgICAgICAgICB0aGlzLnVzZXJPcHRpb25zID0gZGF0YS5jb3B5VXNlckluZm8gfHwgW10NCiAgICAgICAgICB0aGlzLmNvcHlVc2VyVmlzaWJsZSA9IHRoaXMudXNlck9wdGlvbnMubGVuZ3RoID8gdHJ1ZSA6IGZhbHNlDQogICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKQ0KICAgICAgICB9KQ0KICAgIH0sDQogICAgYWdyZWVUYXNrKCkgew0KICAgICAgYXBpDQogICAgICAgIC5zdWJtaXRVc2VyVGFzayh7DQogICAgICAgICAgY29weURhdGE6IHt9LA0KICAgICAgICAgIGZsb3dUYXNrQ29tbWVudER0bzogdGhpcy5mb3JtRGF0YSwNCiAgICAgICAgICBtYXN0ZXJEYXRhOiB7fSwNCiAgICAgICAgICBwcm9jZXNzSW5zdGFuY2VJZDogdGhpcy50YXNrSW5mby5wcm9jZXNzSW5zdGFuY2VJZCwNCiAgICAgICAgICBzbGF2ZURhdGE6IHt9LA0KICAgICAgICAgIHRhc2tJZDogdGhpcy50YXNrSW5mby50YXNrSWQsDQogICAgICAgICAgdGFza1ZhcmlhYmxlRGF0YToge30NCiAgICAgICAgfSkNCiAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpDQogICAgICAgIH0pDQogICAgfSwNCiAgICB0cmFuc2ZlclRhc2soKSB7fSwNCiAgICByZWplY3RUYXNrKCkge30sDQogICAgZ2V0QnV0dG9uVHlwZSh0eXBlKSB7DQogICAgICBzd2l0Y2ggKHR5cGUpIHsNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5BR1JFRToNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5UUkFOU0ZFUjoNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5DT19TSUdOOg0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLk1VTFRJX0FHUkVFOg0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLk1VTFRJX1NJR046DQogICAgICAgIGNhc2UgdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuU0VUX0FTU0lHTkVFOg0KICAgICAgICAgIHJldHVybiAncHJpbWFyeScNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5TQVZFOg0KICAgICAgICAgIHJldHVybiAnc3VjY2VzcycNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5SRUZVU0U6DQogICAgICAgIGNhc2UgdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuUEFSQUxMRUxfUkVGVVNFOg0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLk1VTFRJX1JFRlVTRToNCiAgICAgICAgICByZXR1cm4gJ2RlZmF1bHQnDQogICAgICAgIGNhc2UgdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuUkVKRUNUOg0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLlJFSkVDVF9UT19TVEFSVDoNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5SRVZPS0U6DQogICAgICAgICAgcmV0dXJuICdkYW5nZXInDQogICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgcmV0dXJuICdkZWZhdWx0Jw0KICAgICAgfQ0KICAgIH0sDQogICAgZ2V0T3BlcmF0aW9uVGFnVHlwZSh0eXBlKSB7DQogICAgICBzd2l0Y2ggKHR5cGUpIHsNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5BR1JFRToNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5NVUxUSV9BR1JFRToNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5TRVRfQVNTSUdORUU6DQogICAgICAgICAgcmV0dXJuICdzdWNjZXNzJw0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLlJFRlVTRToNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5QQVJBTExFTF9SRUZVU0U6DQogICAgICAgIGNhc2UgdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuTVVMVElfUkVGVVNFOg0KICAgICAgICAgIHJldHVybiAnd2FybmluZycNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5TVE9QOg0KICAgICAgICBjYXNlIHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLlJFSkVDVDoNCiAgICAgICAgY2FzZSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5SRUpFQ1RfVE9fU1RBUlQ6DQogICAgICAgIGNhc2UgdGhpcy5TeXNGbG93VGFza09wZXJhdGlvblR5cGUuUkVWT0tFOg0KICAgICAgICAgIHJldHVybiAnZGFuZ2VyJw0KICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgIHJldHVybiAncHJpbWFyeScNCiAgICAgIH0NCiAgICB9LA0KICAgIC8qKg0KICAgICAqIOa1geeoi+aTjeS9nA0KICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcGVyYXRpb24g5rWB56iL5pON5L2cDQogICAgICovDQogICAgaGFuZGxlck9wZXJhdGlvbihvcGVyYXRpb24pIHsNCiAgICAgIHRoaXMuZm9ybURhdGEuYXBwcm92YWxUeXBlID0gb3BlcmF0aW9uLnR5cGUNCiAgICAgIC8vIOWKoOetvuaTjeS9nA0KICAgICAgLy8gaWYgKG9wZXJhdGlvbi50eXBlID09PSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5DT19TSUdOKSB7DQogICAgICAvLyAJdGhpcy5zdWJtaXRDb25zaWduKChyZXMgfHwge30pLmFzc2lnbmVlKS50aGVuKHJlcyA9PiB7DQogICAgICAvLyAJCXRoaXMuaGFuZGxlckNsb3NlKCk7DQogICAgICAvLyAJfSkuY2F0Y2goZSA9PiB7fSk7DQogICAgICAvLyAJcmV0dXJuOw0KICAgICAgLy8gfQ0KICAgICAgLy8g6amz5Zue5pON5L2cDQogICAgICBpZiAob3BlcmF0aW9uLnR5cGUgPT09IHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLlJFSkVDVCkgew0KICAgICAgICBhcGkNCiAgICAgICAgICAucmVqZWN0UnVudGltZVRhc2soew0KICAgICAgICAgICAgcHJvY2Vzc0luc3RhbmNlSWQ6IHRoaXMudGFza0luZm8ucHJvY2Vzc0luc3RhbmNlSWQsDQogICAgICAgICAgICB0YXNrSWQ6IHRoaXMudGFza0luZm8udGFza0lkLA0KICAgICAgICAgICAgY29tbWVudDogdGhpcy5mb3JtRGF0YS5jb21tZW50DQogICAgICAgICAgfSkNCiAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgdGhpcy5oYW5kbGVyQ2xvc2UoKQ0KICAgICAgICAgIH0pDQogICAgICAgICAgLmNhdGNoKGUgPT4ge30pDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgLy8g6amz5Zue5Yiw6LW354K5DQogICAgICBpZiAob3BlcmF0aW9uLnR5cGUgPT09IHRoaXMuU3lzRmxvd1Rhc2tPcGVyYXRpb25UeXBlLlJFSkVDVF9UT19TVEFSVCkgew0KICAgICAgICBhcGkNCiAgICAgICAgICAucmVqZWN0VG9TdGFydFVzZXJUYXNrKHsNCiAgICAgICAgICAgIHByb2Nlc3NJbnN0YW5jZUlkOiB0aGlzLnRhc2tJbmZvLnByb2Nlc3NJbnN0YW5jZUlkLA0KICAgICAgICAgICAgdGFza0lkOiB0aGlzLnRhc2tJbmZvLnRhc2tJZCwNCiAgICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuZm9ybURhdGEuY29tbWVudA0KICAgICAgICAgIH0pDQogICAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgIHRoaXMuaGFuZGxlckNsb3NlKCkNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlID0+IHt9KQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIC8vIOaSpOmUgOaTjeS9nA0KICAgICAgaWYgKG9wZXJhdGlvbi50eXBlID09PSB0aGlzLlN5c0Zsb3dUYXNrT3BlcmF0aW9uVHlwZS5SRVZPS0UpIHsNCiAgICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm5pKk6ZSA5q2k5Lu75Yqh77yfJykNCiAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgYXBpDQogICAgICAgICAgICAgIC5yZXZva2VIaXN0b3JpY1Rhc2soew0KICAgICAgICAgICAgICAgIHBwcm9jZXNzSW5zdGFuY2VJZDogdGhpcy50YXNrSW5mby5wcm9jZXNzSW5zdGFuY2VJZCwNCiAgICAgICAgICAgICAgICB0YXNrSWQ6IHRoaXMudGFza0luZm8udGFza0lkLA0KICAgICAgICAgICAgICAgIGNvbW1lbnQ6ICfku7vliqHlpITnkIbkurrmkqTplIDku7vliqEnDQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVyQ2xvc2UoKQ0KICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7fSkNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlID0+IHt9KQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCg0KICAgICAgbGV0IGNvcHRkYXRhID0ge30NCiAgICAgIGlmICh0aGlzLmF1ZGl0VXNlci5sZW5ndGgpIHsNCiAgICAgICAgY29wdGRhdGEgPSB7DQogICAgICAgICAgdXNlcjogdGhpcy5hdWRpdFVzZXIuam9pbignLCcpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIGFwaQ0KICAgICAgICAuc3VibWl0VXNlclRhc2soew0KICAgICAgICAgIGNvcHlEYXRhOiBjb3B0ZGF0YSwNCiAgICAgICAgICBmbG93VGFza0NvbW1lbnREdG86IHRoaXMuZm9ybURhdGEsDQogICAgICAgICAgbWFzdGVyRGF0YToge30sDQogICAgICAgICAgcHJvY2Vzc0luc3RhbmNlSWQ6IHRoaXMudGFza0luZm8ucHJvY2Vzc0luc3RhbmNlSWQsDQogICAgICAgICAgc2xhdmVEYXRhOiB7fSwNCiAgICAgICAgICB0YXNrSWQ6IHRoaXMudGFza0luZm8udGFza0lkLA0KICAgICAgICAgIHRhc2tWYXJpYWJsZURhdGE6IHt9DQogICAgICAgIH0pDQogICAgICAgIC50aGVuKHJlcyA9PiB7DQogICAgICAgICAgdGhpcy5oYW5kbGVyQ2xvc2UoKQ0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5o+Q5Lqk5oiQ5Yqf77yBJykNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGUgPT4ge30pDQogICAgfSwNCiAgICBoYW5kbGVyQ2xvc2UoKSB7DQogICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["taskhandle.vue"],"names":[],"mappingsfile":"taskhandle.vue","sourceRoot":"src/views/common","sourcesContent":["<template>\r\n  <div class=\"handle-bg\">\r\n    <el-form ref=\"ruleform\" label-width=\"80px\" :rules=\"rules\" :model=\"formData\">\r\n      <div class=\"form-block\">\r\n        <div class=\"form-block-title\">\r\n          <div class=\"title-bar\"></div>\r\n          <strong>审核</strong>\r\n        </div>\r\n        <div class=\"block-line\">\r\n          <div class=\"block-item\">\r\n            <div class=\"block-item-label\">审批意见</div>\r\n            <div class=\"block-item-value\">\r\n              <el-form-item prop=\"comment\">\r\n                <el-input v-model=\"formData.comment\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入审批意见\"> </el-input>\r\n              </el-form-item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"block-line\" v-if=\"copyUserVisible\">\r\n          <div class=\"block-item\">\r\n            <div class=\"block-item-label\">抄送</div>\r\n            <div class=\"block-item-value\">\r\n              <el-form-item prop=\"qualityCheckUser\">\r\n                <el-select placeholder=\"请选择\" multiple v-model=\"auditUser\">\r\n                  <el-option\r\n                    v-for=\"(item, index) in userOptions\"\r\n                    :key=\"index\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.username\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-block\" style=\"text-align: center\">\r\n        <!-- <el-button @click=\"agreeTask\" size=\"small\" type=\"primary\">同意</el-button>\r\n\t\t\t\t<el-button @click=\"transferTask\" size=\"small\" type=\"primary\">转办</el-button>\r\n\t\t\t\t<el-button @click=\"rejectTask\" size=\"small\" type=\"primary\">驳回</el-button> -->\r\n\r\n        <el-button\r\n          v-for=\"(operation, index) in flowOperationList\"\r\n          :key=\"index\"\r\n          size=\"small\"\r\n          :type=\"getButtonType(operation.type) || 'primary'\"\r\n          :plain=\"operation.plain || false\"\r\n          @click=\"handlerOperation(operation)\"\r\n        >\r\n          &nbsp;&nbsp;&nbsp;&nbsp;{{ operation.label }} &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/staticDict/flowStaticDict.js'\r\nimport * as api from '@/api/quality'\r\nexport default {\r\n  props: ['taskInfo'],\r\n  data() {\r\n    return {\r\n      formData: {\r\n        approvalType: 'agree',\r\n        comment: '',\r\n        delegateAssginee: ''\r\n      },\r\n      rules: {\r\n        comment: [\r\n          {\r\n            required: true,\r\n            message: '请填写审批意见',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      operationList: [],\r\n\r\n      userOptions: [],\r\n      auditUser: [],\r\n      copyUserVisible: false\r\n    }\r\n  },\r\n  created() {},\r\n  computed: {\r\n    flowOperationList() {\r\n      if (Array.isArray(this.operationList)) {\r\n        return this.operationList.map(item => {\r\n          if (item.type === this.SysFlowTaskOperationType.MULTI_SIGN && item.multiSignAssignee != null) {\r\n            let multiSignAssignee = {\r\n              ...item.multiSignAssignee\r\n            }\r\n            multiSignAssignee.assigneeList = item.multiSignAssignee.assigneeList\r\n              ? multiSignAssignee.assigneeList.split(',')\r\n              : undefined\r\n            return {\r\n              ...item,\r\n              multiSignAssignee\r\n            }\r\n          } else {\r\n            return {\r\n              ...item\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    initData() {\r\n      this.getCopyUserByFlowKey()\r\n\r\n      api\r\n        .viewRuntimeTaskInfo({\r\n          processDefinitionId: this.taskInfo['processDefinitionId'],\r\n          processInstanceId: this.taskInfo['processInstanceId'],\r\n          taskId: this.taskInfo['taskId']\r\n        })\r\n        .then(res => {\r\n          this.operationList = (res.data.operationList || []).filter(item => {\r\n            return (\r\n              item.type !== this.SysFlowTaskOperationType.CO_SIGN && item.type !== this.SysFlowTaskOperationType.REVOKE\r\n            )\r\n          })\r\n        })\r\n    },\r\n    getCopyUserByFlowKey() {\r\n      api.getCopyUserByFlowKey({\r\n          entryKey: this.taskInfo['entryKey'],\r\n          flowKey: this.taskInfo['flowKey'],\r\n\t\t\tbuildSection: this.$store.getters.currentBiaoDuan.id || 3,\r\n\t\t\tprojectId: this.$store.getters.curProject.id || 2\r\n        //   buildSection: this.$store.getters.project.id,\r\n        //   projectId: this.$store.getters.project['parentid'] || 2\r\n        })\r\n        .then(res => {\r\n          let data = res.data || {}\r\n          this.userOptions = data.copyUserInfo || []\r\n          this.copyUserVisible = this.userOptions.length ? true : false\r\n          this.$forceUpdate()\r\n        })\r\n    },\r\n    agreeTask() {\r\n      api\r\n        .submitUserTask({\r\n          copyData: {},\r\n          flowTaskCommentDto: this.formData,\r\n          masterData: {},\r\n          processInstanceId: this.taskInfo.processInstanceId,\r\n          slaveData: {},\r\n          taskId: this.taskInfo.taskId,\r\n          taskVariableData: {}\r\n        })\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n    },\r\n    transferTask() {},\r\n    rejectTask() {},\r\n    getButtonType(type) {\r\n      switch (type) {\r\n        case this.SysFlowTaskOperationType.AGREE:\r\n        case this.SysFlowTaskOperationType.TRANSFER:\r\n        case this.SysFlowTaskOperationType.CO_SIGN:\r\n        case this.SysFlowTaskOperationType.MULTI_AGREE:\r\n        case this.SysFlowTaskOperationType.MULTI_SIGN:\r\n        case this.SysFlowTaskOperationType.SET_ASSIGNEE:\r\n          return 'primary'\r\n        case this.SysFlowTaskOperationType.SAVE:\r\n          return 'success'\r\n        case this.SysFlowTaskOperationType.REFUSE:\r\n        case this.SysFlowTaskOperationType.PARALLEL_REFUSE:\r\n        case this.SysFlowTaskOperationType.MULTI_REFUSE:\r\n          return 'default'\r\n        case this.SysFlowTaskOperationType.REJECT:\r\n        case this.SysFlowTaskOperationType.REJECT_TO_START:\r\n        case this.SysFlowTaskOperationType.REVOKE:\r\n          return 'danger'\r\n        default:\r\n          return 'default'\r\n      }\r\n    },\r\n    getOperationTagType(type) {\r\n      switch (type) {\r\n        case this.SysFlowTaskOperationType.AGREE:\r\n        case this.SysFlowTaskOperationType.MULTI_AGREE:\r\n        case this.SysFlowTaskOperationType.SET_ASSIGNEE:\r\n          return 'success'\r\n        case this.SysFlowTaskOperationType.REFUSE:\r\n        case this.SysFlowTaskOperationType.PARALLEL_REFUSE:\r\n        case this.SysFlowTaskOperationType.MULTI_REFUSE:\r\n          return 'warning'\r\n        case this.SysFlowTaskOperationType.STOP:\r\n        case this.SysFlowTaskOperationType.REJECT:\r\n        case this.SysFlowTaskOperationType.REJECT_TO_START:\r\n        case this.SysFlowTaskOperationType.REVOKE:\r\n          return 'danger'\r\n        default:\r\n          return 'primary'\r\n      }\r\n    },\r\n    /**\r\n     * 流程操作\r\n     * @param {Object} operation 流程操作\r\n     */\r\n    handlerOperation(operation) {\r\n      this.formData.approvalType = operation.type\r\n      // 加签操作\r\n      // if (operation.type === this.SysFlowTaskOperationType.CO_SIGN) {\r\n      // \tthis.submitConsign((res || {}).assignee).then(res => {\r\n      // \t\tthis.handlerClose();\r\n      // \t}).catch(e => {});\r\n      // \treturn;\r\n      // }\r\n      // 驳回操作\r\n      if (operation.type === this.SysFlowTaskOperationType.REJECT) {\r\n        api\r\n          .rejectRuntimeTask({\r\n            processInstanceId: this.taskInfo.processInstanceId,\r\n            taskId: this.taskInfo.taskId,\r\n            comment: this.formData.comment\r\n          })\r\n          .then(res => {\r\n            this.handlerClose()\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n      // 驳回到起点\r\n      if (operation.type === this.SysFlowTaskOperationType.REJECT_TO_START) {\r\n        api\r\n          .rejectToStartUserTask({\r\n            processInstanceId: this.taskInfo.processInstanceId,\r\n            taskId: this.taskInfo.taskId,\r\n            comment: this.formData.comment\r\n          })\r\n          .then(res => {\r\n            this.handlerClose()\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n      // 撤销操作\r\n      if (operation.type === this.SysFlowTaskOperationType.REVOKE) {\r\n        this.$confirm('是否撤销此任务？')\r\n          .then(res => {\r\n            api\r\n              .revokeHistoricTask({\r\n                pprocessInstanceId: this.taskInfo.processInstanceId,\r\n                taskId: this.taskInfo.taskId,\r\n                comment: '任务处理人撤销任务'\r\n              })\r\n              .then(res => {\r\n                this.handlerClose()\r\n              })\r\n              .catch(e => {})\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n\r\n      let coptdata = {}\r\n      if (this.auditUser.length) {\r\n        coptdata = {\r\n          user: this.auditUser.join(',')\r\n        }\r\n      }\r\n      api\r\n        .submitUserTask({\r\n          copyData: coptdata,\r\n          flowTaskCommentDto: this.formData,\r\n          masterData: {},\r\n          processInstanceId: this.taskInfo.processInstanceId,\r\n          slaveData: {},\r\n          taskId: this.taskInfo.taskId,\r\n          taskVariableData: {}\r\n        })\r\n        .then(res => {\r\n          this.handlerClose()\r\n          this.$message.success('提交成功！')\r\n        })\r\n        .catch(e => {})\r\n    },\r\n    handlerClose() {\r\n      this.$router.go(-1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t@import \"@/assets/css/dialog.scss\";\r\n\t.handle-bg{\r\n\t\twidth: 100% !important;\r\n\t\tbackground: #ffffff00 !important;\r\n\t}\r\n</style>\r\n"]}]}