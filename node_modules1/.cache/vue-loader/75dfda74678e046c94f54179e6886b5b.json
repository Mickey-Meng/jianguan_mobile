{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\Cumulative.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\Cumulative.vue","mtime":1684246187876},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cumulative.vue"],"names":[],"mappingsfile":"Cumulative.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"condition\">\r\n      <div class=\"\" style=\"float: left;\r\n    margin-left: 0.26667rem;\r\n    width: 3.2rem;\r\n    background-color: #1989fa;\r\n    color: white;\r\n    position: relative;\r\n    border: 0.02667rem solid #1989fa;\r\n    border-radius: 0.13333rem;\r\n    height: 0.69333rem;\r\n    line-height: 0.69333rem;\">\r\n        <!-- <span> {{ this.type }} </span> -->\r\n        进度总览\r\n      </div>\r\n    </div>\r\n    <common-chart v-if=\"showChart\" :options=\"options\" className=\"echart\"></common-chart>\r\n    <div class=\"no-data\" v-if=\"!showChart\">\r\n      <span>无数据！</span>\r\n    </div>\r\n    <div class=\"condition\">\r\n      <div class=\"\" style=\"float: left;\r\n    margin-left: 0.26667rem;\r\n    width: 3.2rem;\r\n    background-color: #1989fa;\r\n    color: white;\r\n    position: relative;\r\n    border: 0.02667rem solid #1989fa;\r\n    border-radius: 0.13333rem;\r\n    height: 0.69333rem;\r\n    line-height: 0.69333rem;\">\r\n        <span> 项目统计</span>\r\n      </div>\r\n      <div\r\n        class=\"span-container\"\r\n        style=\"\r\n          float: right;\r\n          margin-right: 10px;\r\n          background-color: transparent;\r\n          color: #000000;\r\n          border: 0.02667rem solid #1989fa;\r\n        \"\r\n      >\r\n        <span @click=\"show = true\">{{ type }}</span>\r\n      </div>\r\n    </div>\r\n    <common-chart v-if=\"showCountChart\" :options=\"countOptions\" className=\"echart\" ref=\"countChart\"></common-chart>\r\n    <div class=\"no-data\" v-if=\"!showCountChart\">\r\n      <span>无数据！</span>\r\n    </div>\r\n    <common-chart v-if=\"showCompRateChart\" :options=\"compRateOptions\" className=\"echart\"></common-chart>\r\n    <div class=\"no-data\" v-if=\"!showCompRateChart\">\r\n      <span>无数据！</span>\r\n    </div>\r\n    <van-action-sheet v-model=\"show\" :actions=\"topData\" @select=\"typeChange\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport CommonChart from '@/components/echarts/CommonChart'\r\nimport {\r\n  getCountIncresConponent,\r\n  getCountConponent,\r\n  getCountIncresConponentGroupGq,\r\n  getGqFirst,\r\n  getpjFirst\r\n} from '@/api/project.js'\r\nimport { lineOffset } from '@turf/turf'\r\nexport default {\r\n  components: {\r\n    CommonChart\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentProject', 'currentBiaoDuan'])\r\n  },\r\n  watch: {\r\n    currentProject: function(value) {\r\n      this.getData(value)\r\n    },\r\n    currentBiaoDuan: function(value) {\r\n      this.getData()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      echartId: 'cumulative',\r\n      type: '',\r\n      show: false,\r\n      myChart: null,\r\n      xAxisData: [],\r\n      chartData: [],\r\n      options: null,\r\n      showChart: false,\r\n\r\n      showCountChart: false,\r\n      countOptions: null,\r\n      xAxisCountData: [],\r\n      chartCountData: [],\r\n      topData: [],\r\n\r\n      showCompRateChart: false,\r\n      compRateOptions: null,\r\n      yAxisCompRateData: [],\r\n      series0CompRateData: [100, 100, 100],\r\n      series1CompRateData: [0, 0, 0]\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    getData() {\r\n      // getCountIncresConponent({ projectCode: this.currentProject.value, type: this.timeType.value, conponentType: 'all' }).then(data => {\r\n      //   this.updateChart(data)\r\n      // })\r\n\r\n      // getCountConponent({ projectCode: this.currentProject.value, type: this.timeType.value, conponentType: 'all' }).then(data => {\r\n      //   this.updateCountChart(data)\r\n      // })\r\n      getCountIncresConponentGroupGq({\r\n        projectId: this.$store.state.currentBiaoDuan.id,\r\n        type: this.currentProject.value\r\n      }).then(data => {\r\n        this.updateChart(data)\r\n      })\r\n\r\n      getGqFirst({\r\n        projectId: this.$store.state.currentBiaoDuan.id,\r\n        type: this.currentProject.value\r\n      }).then(data => {\r\n        this.updateCountChart(data)\r\n      })\r\n    },\r\n    updateChart(data) {\r\n      this.xAxisData = []\r\n      this.chartData = []\r\n      // data.forEach(item => {\r\n      //   this.xAxisData.push(item.name)\r\n      //   this.chartData.push(item.count)\r\n      // })\r\n      let x = []\r\n      let series = []\r\n      let o = []\r\n      if (Object.keys(data)?.length > 0) {\r\n        o = data[Object.keys(data)[0]]\r\n        o.reverse()\r\n        o.forEach(item => {\r\n          console.log(item.name)\r\n          x.push(item.name)\r\n        })\r\n      }\r\n\r\n      for (let i in data) {\r\n        let num = []\r\n        let lists = data[i]\r\n        lists.reverse()\r\n        if (lists && lists.length > 0) {\r\n          lists.forEach(result => {\r\n            num.push(result.number)\r\n          })\r\n        }\r\n        let obj = {\r\n          name: i,\r\n          type: 'line',\r\n          data: num,\r\n          symbolSize: 1,\r\n          symbol: 'circle',\r\n          smooth: true,\r\n          yAxisIndex: 0,\r\n          showSymbol: false,\r\n          lineStyle: {\r\n            width: 2\r\n            // color: \"#00DAFF\",\r\n          }\r\n        }\r\n        series.push(obj)\r\n      }\r\n      this.chartData = series\r\n      this.xAxisData = x\r\n      this.drawChart()\r\n    },\r\n    updateCountChart(data) {\r\n      let option = {\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '15%',\r\n          containLabel: true\r\n        },\r\n        tooltip: {},\r\n        dataZoom: [\r\n          {\r\n            id: 'dataZoomX',\r\n            type: 'slider',\r\n            backgroundColor: '#F2F5F9',\r\n            fillerColor: '#BFCCE3',\r\n            showDataShadow: false,\r\n            height: 13,\r\n            handleSize: 22,\r\n            right: 60,\r\n            left: 60,\r\n            bottom: 10,\r\n            start: 0,\r\n            end: 45,\r\n            handleSize: '150%', // 手柄大小\r\n            borderColor: 'none',\r\n            handleIcon:\r\n              // \"M0,0 v9.7h5 v-9.7h-5 Z\", // 画一个长方形\r\n              'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5M36.9,35.8h-1.3z M27.8,35.8 h-1.3H27L27.8,35.8L27.8,35.8z', // 画一个圆形\r\n            handleStyle: {\r\n              color: '#BFCCE3',\r\n              global: true, // 缺省为 false\r\n              shadowBlur: 6,\r\n              shadowColor: 'rgba(123, 154, 204, 0.5)',\r\n              shadowOffsetX: 0, // 阴影偏移x轴多少\r\n              shadowOffsetY: 0 // 阴影偏移y轴多少\r\n            }\r\n          }\r\n        ],\r\n        yAxis: {\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#363e83'\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#363e83 '\r\n            }\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: '#000000',\r\n              fontWeight: 'normal',\r\n              fontSize: '12'\r\n            }\r\n          }\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#363e83'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              inside: false,\r\n              interval: 0,\r\n              // rotate: 20,\r\n              formatter: function(value) {\r\n                let str = value.substring(0, value.lastIndexOf('-'))\r\n                return str\r\n              },\r\n              textStyle: {\r\n                color: '#000000',\r\n                fontWeight: 'normal',\r\n                fontSize: '12'\r\n              }\r\n            },\r\n            data: []\r\n          }\r\n        ],\r\n        series: []\r\n      }\r\n      var colorList = [\r\n        '#C1232B',\r\n        '#B5C334',\r\n        '#FCCE10',\r\n        '#E87C25',\r\n        '#27727B',\r\n        '#FE8463',\r\n        '#9BCA63',\r\n        '#FAD860',\r\n        '#F3A43B',\r\n        '#60C0DD',\r\n        '#D7504B',\r\n        '#C6E579',\r\n        '#F4E001',\r\n        '#F0805A',\r\n        '#26C0C0'\r\n      ]\r\n\r\n      if (data && data.length > 0) {\r\n        data = data.reverse()\r\n        let series = []\r\n        let gongqu = data[0].list[0].projectcode\r\n        this.initCompRateChart(gongqu)\r\n        data.forEach(item => {\r\n          let obj = JSON.parse(JSON.stringify(option))\r\n          item.ref = 'ref' + item.gongqucode\r\n          item.name = item.gongquname\r\n          series = []\r\n          let m = {\r\n            data: [],\r\n            type: 'bar',\r\n            barWidth: 30,\r\n            itemStyle: {\r\n              normal: {\r\n                color: function(params) {\r\n                  return colorList[params.dataIndex]\r\n                }\r\n              }\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'top',\r\n              formatter: '{c}'\r\n            }\r\n          }\r\n          let x = []\r\n          let totalNum = []\r\n          let lists = item.list\r\n          if (lists && lists.length > 0) {\r\n            lists.forEach(result => {\r\n              let { projectname, finish, total, projectcode } = result\r\n              let num = finish || 0\r\n              let to = total || 0\r\n              totalNum.push(to)\r\n              x.push(projectname)\r\n              m.data.push(num)\r\n            })\r\n          }\r\n          if (lists.length <= 4) {\r\n            obj.dataZoom[0].end = 100\r\n          }\r\n          if (lists.length > 4) {\r\n            obj.dataZoom[0].end = 10\r\n          }\r\n          series.push(m)\r\n          obj.tooltip = {\r\n            trigger: 'axis',\r\n            formatter(params) {\r\n              for (x in params) {\r\n                let index = params[x].dataIndex\r\n                let total = totalNum[index]\r\n                let rate = Math.floor((params[x].data / total) * 10000) / 100\r\n                let name = params[x].name.substring(0, params[x].name.lastIndexOf('-'))\r\n                return name + '已完成比例' + ':' + rate + '%'\r\n              }\r\n            }\r\n          }\r\n\r\n          obj.xAxis[0].data = x\r\n          obj.series = series\r\n          item.eOptions = obj\r\n        })\r\n        data.sort((a, b) => b.gongqucode - a.gongqucode)\r\n        this.topData = data.reverse()\r\n        if (this.topData.length > 0) {\r\n          this.type = this.topData[0].name\r\n        }\r\n      } else {\r\n        this.topData = []\r\n        this.showCompRateChart = false\r\n      }\r\n\r\n      this.drawCountChart()\r\n    },\r\n    typeChange(item) {\r\n      this.type = item.name\r\n      this.show = false\r\n      this.drawCountChart()\r\n      console.log(item)\r\n      this.initCompRateChart(item.list[0].projectcode)\r\n    },\r\n    drawChart() {\r\n      this.showChart = false\r\n      if (this.xAxisData.length === 0) {\r\n        return\r\n      }\r\n      this.$nextTick(() => {\r\n        this.options = this.getOptions()\r\n        this.showChart = true\r\n      })\r\n    },\r\n    drawCountChart() {\r\n      this.showCountChart = false\r\n      if (this.topData.length === 0) {\r\n        return\r\n      }\r\n      this.$nextTick(() => {\r\n        // this.countOptions = this.getCountOptions()\r\n        this.countOptions = this.topData.find(item => item.name === this.type).eOptions\r\n        this.showCountChart = true\r\n        this.$nextTick(() => {\r\n          let that = this\r\n          this.$refs['countChart']?.myChart?.on('click', function(params) {\r\n            let code = params.name.substring(params.name.lastIndexOf('-') + 1)\r\n            that.initCompRateChart(code)\r\n          })\r\n        })\r\n      })\r\n    },\r\n    getCountOptions() {\r\n      return {\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '15%',\r\n          containLabel: true\r\n        },\r\n        tooltip: {},\r\n        dataZoom: [\r\n          {\r\n            id: 'dataZoomX',\r\n            type: 'slider',\r\n            backgroundColor: '#F2F5F9',\r\n            fillerColor: '#BFCCE3',\r\n            showDataShadow: false,\r\n            height: 13,\r\n            handleSize: 22,\r\n            right: 60,\r\n            left: 60,\r\n            bottom: 5,\r\n            start: 0,\r\n            end: 45,\r\n            handleSize: '150%', // 手柄大小\r\n            borderColor: 'none',\r\n            handleIcon:\r\n              // \"M0,0 v9.7h5 v-9.7h-5 Z\", // 画一个长方形\r\n              'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5M36.9,35.8h-1.3z M27.8,35.8 h-1.3H27L27.8,35.8L27.8,35.8z', // 画一个圆形\r\n            handleStyle: {\r\n              color: '#BFCCE3',\r\n              global: true, // 缺省为 false\r\n              shadowBlur: 6,\r\n              shadowColor: 'rgba(123, 154, 204, 0.5)',\r\n              shadowOffsetX: 0, // 阴影偏移x轴多少\r\n              shadowOffsetY: 0 // 阴影偏移y轴多少\r\n            }\r\n          }\r\n        ],\r\n        yAxis: {\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#363e83'\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#363e83 '\r\n            }\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontWeight: 'normal',\r\n              fontSize: '12'\r\n            }\r\n          }\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#363e83'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              inside: false,\r\n              interval: 0,\r\n              // rotate: 20,\r\n              formatter: function(value) {\r\n                let str = value.substring(0, value.lastIndexOf('-'))\r\n                return str\r\n              },\r\n              textStyle: {\r\n                color: '#fff',\r\n                fontWeight: 'normal',\r\n                fontSize: '12'\r\n              }\r\n            },\r\n            data: this.xAxisCountData\r\n          }\r\n        ],\r\n        series: this.chartCountData\r\n      }\r\n      // return {\r\n      //   tooltip: {\r\n      //     trigger: 'axis',\r\n      //     backgroundColor: 'rgba(255,255,255,0.8)'\r\n      //   },\r\n      //   dataZoom: [\r\n      //     {\r\n      //       id: 'dataZoomX',\r\n      //       type: 'slider',\r\n      //       backgroundColor: '#F2F5F9',\r\n      //       fillerColor: '#BFCCE3',\r\n      //       showDataShadow: false,\r\n      //       height: 13,\r\n      //       handleSize: 22,\r\n      //       right: 60,\r\n      //       left: 60,\r\n      //       bottom: 15,\r\n      //       start: 0,\r\n      //       end: 40,\r\n      //       handleSize: '200%', // 手柄大小\r\n      //       borderColor: 'none',\r\n      //       handleIcon:\r\n      //         // \"M0,0 v9.7h5 v-9.7h-5 Z\", // 画一个长方形\r\n      //         'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5M36.9,35.8h-1.3z M27.8,35.8 h-1.3H27L27.8,35.8L27.8,35.8z', // 画一个圆形\r\n      //       handleStyle: {\r\n      //         color: '#BFCCE3',\r\n      //         global: true, // 缺省为 false\r\n      //         shadowBlur: 6,\r\n      //         shadowColor: 'rgba(123, 154, 204, 0.5)',\r\n      //         shadowOffsetX: 0, // 阴影偏移x轴多少\r\n      //         shadowOffsetY: 0 // 阴影偏移y轴多少\r\n      //       }\r\n      //     }\r\n      //   ],\r\n      //   grid: {\r\n      //     top: 10,\r\n      //     left: '3%',\r\n      //     right: '4%',\r\n      //     bottom: '15%',\r\n      //     containLabel: true\r\n      //   },\r\n      //   xAxis: [\r\n      //     {\r\n      //       type: 'category',\r\n      //       data: this.xAxisCountData,\r\n      //       axisTick: {\r\n      //         alignWithLabel: true\r\n      //       },\r\n      //       axisLabel: {\r\n      //         show: true,\r\n      //         rotate: 20,\r\n      //         textStyle: {\r\n      //           fontSize: 12\r\n      //         }\r\n      //       },\r\n      //       axisLine: {\r\n      //         lineStyle: {\r\n      //           color: '#000000',\r\n      //           width: 1 // 这里是为了突出显示加上的\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   ],\r\n      //   yAxis: [\r\n      //     {\r\n      //       type: 'value',\r\n      //       axisLine: {\r\n      //         lineStyle: {\r\n      //           color: '#000000',\r\n      //           width: 1 // 这里是为了突出显示加上的\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   ],\r\n      //   series: [\r\n      //     {\r\n      //       type: 'bar',\r\n      //       barWidth: 30,\r\n      //       barGap: 20,\r\n      //       data: this.chartCountData,\r\n      //       itemStyle: {\r\n      //         normal: {\r\n      //           color: '#5BB6FF'\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   ]\r\n      // }\r\n    },\r\n    getOptions() {\r\n      return {\r\n        legend: {\r\n          show: true,\r\n          right: 'auto',\r\n          top: '5%',\r\n          itemGap: 20,\r\n          itemWidth: 15,\r\n          itemHeight: 10,\r\n          textStyle: {\r\n            color: '#000000'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            label: {\r\n              show: true,\r\n              backgroundColor: '#fff',\r\n              color: '#556677',\r\n              borderColor: 'rgba(0,0,0,0)',\r\n              shadowColor: 'rgba(0,0,0,0)',\r\n              shadowOffsetY: 0\r\n            },\r\n            lineStyle: {\r\n              width: 0\r\n            }\r\n          },\r\n          backgroundColor: '#fff',\r\n          textStyle: {\r\n            color: '#5c6c7c'\r\n          }\r\n        },\r\n        grid: {\r\n          top: '20%',\r\n          left: '10%'\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: this.xAxisData,\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#0173DA'\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              interval: 0,\r\n              textStyle: {\r\n                color: '#000000'\r\n              },\r\n              // 默认x轴字体大小\r\n              fontSize: 12\r\n              // margin:文字到x轴的距离\r\n            },\r\n            boundaryGap: false,\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                type: 'dashed',\r\n                color: '#0173DA'\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#0173DA'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: '#000000'\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                type: 'dashed',\r\n                color: '#0173DA'\r\n              }\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            position: 'right',\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: '#0173DA'\r\n              },\r\n              formatter: '{value}'\r\n            },\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#0173DA'\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: false\r\n            }\r\n          }\r\n        ],\r\n        series: this.chartData\r\n      }\r\n      // return {\r\n      //   xAxis: {\r\n      //     type: 'category',\r\n      //     boundaryGap: false,\r\n      //     data: this.xAxisData\r\n      //   },\r\n      //   tooltip: {\r\n      //     trigger: 'axis',\r\n      //     backgroundColor: 'rgba(255,255,255,0.8)'\r\n      //   },\r\n      //   yAxis: {\r\n      //     type: 'value'\r\n      //   },\r\n      //   series: [\r\n      //     {\r\n      //       data: this.chartData,\r\n      //       type: 'line',\r\n      //       itemStyle: {\r\n      //         normal: {\r\n      //           color: '#5BB6FF'\r\n      //         }\r\n      //       },\r\n      //       areaStyle: {}\r\n      //     }\r\n      //   ]\r\n      // }\r\n    },\r\n    initCompRateChart(gongQuProjectCode) {\r\n      this.showCompRateChart = false\r\n      getpjFirst({\r\n        projectId: this.$store.state.currentBiaoDuan.id,\r\n        projectcode: gongQuProjectCode\r\n      }).then(data => {\r\n        let x = []\r\n        let count = []\r\n        let finishCount = []\r\n\r\n        if (data && data.length > 0) {\r\n          data.forEach(item => {\r\n            let { list } = item\r\n            if (list && list.length > 0) {\r\n              list.forEach(result => {\r\n                let { finish, sxname, projectname, total } = result\r\n                let num = finish || 0\r\n                let totaln = total || 0\r\n                let frate = Math.floor((num / totaln) * 10000) / 100\r\n                let nrate = 100 - frate\r\n                x.push(sxname)\r\n                finishCount.push(frate)\r\n                count.push(nrate)\r\n              })\r\n            }\r\n            this.yAxisCompRateData = x\r\n            this.series0CompRateData = finishCount\r\n            this.series1CompRateData = count\r\n          })\r\n          this.$nextTick(() => {\r\n            this.compRateOptions = this.drawCompRateChart()\r\n            this.showCompRateChart = true\r\n          })\r\n        }\r\n      })\r\n    },\r\n    drawCompRateChart() {\r\n      this.showCompRateChart = false\r\n      return {\r\n        grid: {\r\n          left: '30%',\r\n          right: '4%',\r\n          bottom: '10%',\r\n          top: '10%'\r\n          // containLabel: true,\r\n        },\r\n        legend: {\r\n          show: true,\r\n          orient: 'horizontal',\r\n          textStyle: {\r\n            color: '#000000'\r\n          },\r\n          data: ['完成比例', '未完成比例'],\r\n          left: '6%',\r\n          top: '5'\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'value',\r\n\r\n            max: 100, // 设置最大值是多少\r\n            splitNumber: 5, // 设置分几段显示\r\n            axisLabel: {\r\n              show: true,\r\n              interval: 'auto',\r\n              formatter: '{value} %', // 给每个数值添加%\r\n              textStyle: {\r\n                color: '#000',\r\n                fontWeight: 'normal',\r\n                fontSize: '14'\r\n              }\r\n            },\r\n            show: true\r\n          }\r\n        ],\r\n        yAxis: {\r\n          type: 'category',\r\n          // data: [\"桥面结构\", \"上部结构\", \"下部结构\"],\r\n          data: this.yAxisCompRateData,\r\n          axisLabel: {\r\n            inside: false,\r\n            rotate: 60,\r\n            interval: 0,\r\n            textStyle: {\r\n              color: '#000000',\r\n              fontWeight: 'normal',\r\n              fontSize: '14',\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '完成比例',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#0B9010'\r\n              }\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'insideLeft', //在左边显示\r\n              formatter: '{c}%' // 给计算后的数值添加%\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: this.series0CompRateData\r\n          },\r\n          {\r\n            name: '未完成比例',\r\n            type: 'bar',\r\n            barWidth: '20',\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#C93609'\r\n              }\r\n            },\r\n            stack: 'total',\r\n            label: {\r\n              show: true,\r\n              position: 'insideRight', // 在右边显示\r\n              formatter: '{c}%'\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: this.series1CompRateData\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.app-container {\r\n  .no-data {\r\n    height: 60px;\r\n    width: 100%;\r\n    line-height: 60px;\r\n    text-align: center;\r\n  }\r\n  .condition {\r\n    margin: 2px 0;\r\n    background-color: #ffffff;\r\n    height: 38px;\r\n    line-height: 38px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    width: 100%;\r\n    .span-container,\r\n    .type-container {\r\n      position: relative;\r\n      border: 1px solid $active-color;\r\n      border-radius: 5px;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      margin-top: 6px;\r\n      float: left;\r\n      margin-left: 10px;\r\n      width: 120px;\r\n      background-color: $active-color;\r\n      color: white;\r\n      border: none;\r\n      span {\r\n        float: left;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n    .type {\r\n      background-color: transparent;\r\n    }\r\n    .type-container {\r\n      background-color: transparent;\r\n      border: none;\r\n      width: 180px;\r\n      float: right;\r\n      margin-right: 10px;\r\n      .item {\r\n        color: black;\r\n        border: 1px solid $active-color;\r\n        border-radius: 5px;\r\n      }\r\n      .select {\r\n        background-color: $active-color;\r\n        color: white;\r\n      }\r\n    }\r\n    .span-container::after {\r\n      position: absolute;\r\n      top: 50%;\r\n      right: 10px;\r\n      margin-top: -5px;\r\n      border: 3px solid;\r\n      border-color: transparent transparent #dcdee0 #dcdee0;\r\n      -webkit-transform: rotate(-45deg);\r\n      transform: rotate(-45deg);\r\n      opacity: 0.8;\r\n      content: '';\r\n    }\r\n  }\r\n  .echart {\r\n    background-color: #ffffff;\r\n    width: 100%;\r\n    height: 360px;\r\n  }\r\n}\r\n</style>\r\n"]}]}