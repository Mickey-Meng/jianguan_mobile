{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\taskhandle.vue?vue&type=style&index=0&id=cdf26932&scoped=true&lang=scss&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\taskhandle.vue","mtime":1684246187967},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":1684411443176},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1684411446724},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":1684411443221},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1684411446938},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIkAvYXNzZXRzL2Nzcy9kaWFsb2cuc2NzcyI7Ci5oYW5kbGUtYmd7Cgl3aWR0aDogMTAwJSAhaW1wb3J0YW50OwoJYmFja2dyb3VuZDogI2ZmZmZmZjAwICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["taskhandle.vue"],"names":[],"mappings":";AA+SA;AACA;AACA;AACA;AACA","file":"taskhandle.vue","sourceRoot":"src/views/common","sourcesContent":["<template>\r\n  <div class=\"handle-bg\">\r\n    <el-form ref=\"ruleform\" label-width=\"80px\" :rules=\"rules\" :model=\"formData\">\r\n      <div class=\"form-block\">\r\n        <div class=\"form-block-title\">\r\n          <div class=\"title-bar\"></div>\r\n          <strong>审核</strong>\r\n        </div>\r\n        <div class=\"block-line\">\r\n          <div class=\"block-item\">\r\n            <div class=\"block-item-label\">审批意见</div>\r\n            <div class=\"block-item-value\">\r\n              <el-form-item prop=\"comment\">\r\n                <el-input v-model=\"formData.comment\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入审批意见\"> </el-input>\r\n              </el-form-item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"block-line\" v-if=\"copyUserVisible\">\r\n          <div class=\"block-item\">\r\n            <div class=\"block-item-label\">抄送</div>\r\n            <div class=\"block-item-value\">\r\n              <el-form-item prop=\"qualityCheckUser\">\r\n                <el-select placeholder=\"请选择\" multiple v-model=\"auditUser\">\r\n                  <el-option\r\n                    v-for=\"(item, index) in userOptions\"\r\n                    :key=\"index\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.username\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-block\" style=\"text-align: center\">\r\n        <!-- <el-button @click=\"agreeTask\" size=\"small\" type=\"primary\">同意</el-button>\r\n\t\t\t\t<el-button @click=\"transferTask\" size=\"small\" type=\"primary\">转办</el-button>\r\n\t\t\t\t<el-button @click=\"rejectTask\" size=\"small\" type=\"primary\">驳回</el-button> -->\r\n\r\n        <el-button\r\n          v-for=\"(operation, index) in flowOperationList\"\r\n          :key=\"index\"\r\n          size=\"small\"\r\n          :type=\"getButtonType(operation.type) || 'primary'\"\r\n          :plain=\"operation.plain || false\"\r\n          @click=\"handlerOperation(operation)\"\r\n        >\r\n          &nbsp;&nbsp;&nbsp;&nbsp;{{ operation.label }} &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/staticDict/flowStaticDict.js'\r\nimport * as api from '@/api/quality'\r\nexport default {\r\n  props: ['taskInfo'],\r\n  data() {\r\n    return {\r\n      formData: {\r\n        approvalType: 'agree',\r\n        comment: '',\r\n        delegateAssginee: ''\r\n      },\r\n      rules: {\r\n        comment: [\r\n          {\r\n            required: true,\r\n            message: '请填写审批意见',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      operationList: [],\r\n\r\n      userOptions: [],\r\n      auditUser: [],\r\n      copyUserVisible: false\r\n    }\r\n  },\r\n  created() {},\r\n  computed: {\r\n    flowOperationList() {\r\n      if (Array.isArray(this.operationList)) {\r\n        return this.operationList.map(item => {\r\n          if (item.type === this.SysFlowTaskOperationType.MULTI_SIGN && item.multiSignAssignee != null) {\r\n            let multiSignAssignee = {\r\n              ...item.multiSignAssignee\r\n            }\r\n            multiSignAssignee.assigneeList = item.multiSignAssignee.assigneeList\r\n              ? multiSignAssignee.assigneeList.split(',')\r\n              : undefined\r\n            return {\r\n              ...item,\r\n              multiSignAssignee\r\n            }\r\n          } else {\r\n            return {\r\n              ...item\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    initData() {\r\n      this.getCopyUserByFlowKey()\r\n\r\n      api\r\n        .viewRuntimeTaskInfo({\r\n          processDefinitionId: this.taskInfo['processDefinitionId'],\r\n          processInstanceId: this.taskInfo['processInstanceId'],\r\n          taskId: this.taskInfo['taskId']\r\n        })\r\n        .then(res => {\r\n          this.operationList = (res.data.operationList || []).filter(item => {\r\n            return (\r\n              item.type !== this.SysFlowTaskOperationType.CO_SIGN && item.type !== this.SysFlowTaskOperationType.REVOKE\r\n            )\r\n          })\r\n        })\r\n    },\r\n    getCopyUserByFlowKey() {\r\n      api.getCopyUserByFlowKey({\r\n          entryKey: this.taskInfo['entryKey'],\r\n          flowKey: this.taskInfo['flowKey'],\r\n\t\t\tbuildSection: this.$store.getters.currentBiaoDuan.id || 3,\r\n\t\t\tprojectId: this.$store.getters.curProject.id || 2\r\n        //   buildSection: this.$store.getters.project.id,\r\n        //   projectId: this.$store.getters.project['parentid'] || 2\r\n        })\r\n        .then(res => {\r\n          let data = res.data || {}\r\n          this.userOptions = data.copyUserInfo || []\r\n          this.copyUserVisible = this.userOptions.length ? true : false\r\n          this.$forceUpdate()\r\n        })\r\n    },\r\n    agreeTask() {\r\n      api\r\n        .submitUserTask({\r\n          copyData: {},\r\n          flowTaskCommentDto: this.formData,\r\n          masterData: {},\r\n          processInstanceId: this.taskInfo.processInstanceId,\r\n          slaveData: {},\r\n          taskId: this.taskInfo.taskId,\r\n          taskVariableData: {}\r\n        })\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n    },\r\n    transferTask() {},\r\n    rejectTask() {},\r\n    getButtonType(type) {\r\n      switch (type) {\r\n        case this.SysFlowTaskOperationType.AGREE:\r\n        case this.SysFlowTaskOperationType.TRANSFER:\r\n        case this.SysFlowTaskOperationType.CO_SIGN:\r\n        case this.SysFlowTaskOperationType.MULTI_AGREE:\r\n        case this.SysFlowTaskOperationType.MULTI_SIGN:\r\n        case this.SysFlowTaskOperationType.SET_ASSIGNEE:\r\n          return 'primary'\r\n        case this.SysFlowTaskOperationType.SAVE:\r\n          return 'success'\r\n        case this.SysFlowTaskOperationType.REFUSE:\r\n        case this.SysFlowTaskOperationType.PARALLEL_REFUSE:\r\n        case this.SysFlowTaskOperationType.MULTI_REFUSE:\r\n          return 'default'\r\n        case this.SysFlowTaskOperationType.REJECT:\r\n        case this.SysFlowTaskOperationType.REJECT_TO_START:\r\n        case this.SysFlowTaskOperationType.REVOKE:\r\n          return 'danger'\r\n        default:\r\n          return 'default'\r\n      }\r\n    },\r\n    getOperationTagType(type) {\r\n      switch (type) {\r\n        case this.SysFlowTaskOperationType.AGREE:\r\n        case this.SysFlowTaskOperationType.MULTI_AGREE:\r\n        case this.SysFlowTaskOperationType.SET_ASSIGNEE:\r\n          return 'success'\r\n        case this.SysFlowTaskOperationType.REFUSE:\r\n        case this.SysFlowTaskOperationType.PARALLEL_REFUSE:\r\n        case this.SysFlowTaskOperationType.MULTI_REFUSE:\r\n          return 'warning'\r\n        case this.SysFlowTaskOperationType.STOP:\r\n        case this.SysFlowTaskOperationType.REJECT:\r\n        case this.SysFlowTaskOperationType.REJECT_TO_START:\r\n        case this.SysFlowTaskOperationType.REVOKE:\r\n          return 'danger'\r\n        default:\r\n          return 'primary'\r\n      }\r\n    },\r\n    /**\r\n     * 流程操作\r\n     * @param {Object} operation 流程操作\r\n     */\r\n    handlerOperation(operation) {\r\n      this.formData.approvalType = operation.type\r\n      // 加签操作\r\n      // if (operation.type === this.SysFlowTaskOperationType.CO_SIGN) {\r\n      // \tthis.submitConsign((res || {}).assignee).then(res => {\r\n      // \t\tthis.handlerClose();\r\n      // \t}).catch(e => {});\r\n      // \treturn;\r\n      // }\r\n      // 驳回操作\r\n      if (operation.type === this.SysFlowTaskOperationType.REJECT) {\r\n        api\r\n          .rejectRuntimeTask({\r\n            processInstanceId: this.taskInfo.processInstanceId,\r\n            taskId: this.taskInfo.taskId,\r\n            comment: this.formData.comment\r\n          })\r\n          .then(res => {\r\n            this.handlerClose()\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n      // 驳回到起点\r\n      if (operation.type === this.SysFlowTaskOperationType.REJECT_TO_START) {\r\n        api\r\n          .rejectToStartUserTask({\r\n            processInstanceId: this.taskInfo.processInstanceId,\r\n            taskId: this.taskInfo.taskId,\r\n            comment: this.formData.comment\r\n          })\r\n          .then(res => {\r\n            this.handlerClose()\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n      // 撤销操作\r\n      if (operation.type === this.SysFlowTaskOperationType.REVOKE) {\r\n        this.$confirm('是否撤销此任务？')\r\n          .then(res => {\r\n            api\r\n              .revokeHistoricTask({\r\n                pprocessInstanceId: this.taskInfo.processInstanceId,\r\n                taskId: this.taskInfo.taskId,\r\n                comment: '任务处理人撤销任务'\r\n              })\r\n              .then(res => {\r\n                this.handlerClose()\r\n              })\r\n              .catch(e => {})\r\n          })\r\n          .catch(e => {})\r\n        return\r\n      }\r\n\r\n      let coptdata = {}\r\n      if (this.auditUser.length) {\r\n        coptdata = {\r\n          user: this.auditUser.join(',')\r\n        }\r\n      }\r\n      api\r\n        .submitUserTask({\r\n          copyData: coptdata,\r\n          flowTaskCommentDto: this.formData,\r\n          masterData: {},\r\n          processInstanceId: this.taskInfo.processInstanceId,\r\n          slaveData: {},\r\n          taskId: this.taskInfo.taskId,\r\n          taskVariableData: {}\r\n        })\r\n        .then(res => {\r\n          this.handlerClose()\r\n          this.$message.success('提交成功！')\r\n        })\r\n        .catch(e => {})\r\n    },\r\n    handlerClose() {\r\n      this.$router.go(-1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t@import \"@/assets/css/dialog.scss\";\r\n\t.handle-bg{\r\n\t\twidth: 100% !important;\r\n\t\tbackground: #ffffff00 !important;\r\n\t}\r\n</style>\r\n"]}]}