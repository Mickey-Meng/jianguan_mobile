{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\quality\\processReportDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\quality\\processReportDetail.vue","mtime":1684246188044},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgVXBsb2FkIGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vVXBsb2FkJw0KaW1wb3J0IHsgZ2V0Q2hlY2tEYXRhQnlDb25wb25lbnRJZCB9IGZyb20gJ0AvYXBpL3Byb2plY3QuanMnDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBVcGxvYWQNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBzY3JvbGxlckhlaWdodDogZnVuY3Rpb24gKCkgew0KICAgICAgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodCAtIDkwICsgJ3B4Jw0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdXJsTGlzdDogW10sDQogICAgICBhY2NyZWNvZGV1cmxMaXN0OiBbXSwNCiAgICAgIHRlc3R1cmxsTGlzdDogW10sDQogICAgICBrZXlkYXRhTGlzdDogW10sDQogICAgICBub3d1cmxMaXN0OiBbXSwNCiAgICAgIGVkaXREYXRhOiB7fSwNCiAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgc2hvd1N1Ym1pdDogZmFsc2UNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5pbml0KCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXQoKSB7DQogICAgICBsZXQgdGhhdCA9IHRoaXMNCiAgICAgIGdldENoZWNrRGF0YUJ5Q29ucG9uZW50SWQoew0KICAgICAgICBpZDogdGhhdC4kcm91dGUucXVlcnkuY29ucG9lbnRpZCwNCiAgICAgICAgdHlwZTogdGhhdC4kcm91dGUucXVlcnkuY29ucG9uZW50dHlwZQ0KICAgICAgfSkudGhlbihkYXRhID0+IHsNCiAgICAgICAgbGV0IHBhcmFtcyA9IGRhdGEuZmluZChpdGVtID0+IGl0ZW0ucHJvZHVjZWlkID09IHRoYXQuJHJvdXRlLnF1ZXJ5LnByb2R1Y2VpZCkNCiAgICAgICAgbGV0IHsgcmVjb2RlLCB1cGxvYWQsIHN1Ym1pdCB9ID0gcGFyYW1zDQogICAgICAgIGlmICh1cGxvYWQgJiYgdXBsb2FkLnBpY3VybCkgew0KICAgICAgICAgIHRoYXQudXJsTGlzdCA9IHRoYXQuZm9ybWF0VXJsKHVwbG9hZC5waWN1cmwpDQogICAgICAgIH0NCiAgICAgICAgaWYgKHJlY29kZSkgew0KICAgICAgICAgIGlmIChyZWNvZGUuYWNjcmVjb2RldXJsKSB7DQogICAgICAgICAgICB0aGF0LmFjY3JlY29kZXVybExpc3QgPSB0aGlzLmZvcm1hdFVybChyZWNvZGUuYWNjcmVjb2RldXJsKQ0KICAgICAgICAgIH0NCiAgICAgICAgICBpZiAocmVjb2RlLmtleWRhdGEpIHsNCiAgICAgICAgICAgIHRoYXQua2V5ZGF0YUxpc3QgPSB0aGlzLmZvcm1hdFVybChyZWNvZGUua2V5ZGF0YSkNCiAgICAgICAgICB9DQogICAgICAgICAgaWYgKHJlY29kZS50ZXN0dXJsKSB7DQogICAgICAgICAgICB0aGF0LnRlc3R1cmxsTGlzdCA9IHRoaXMuZm9ybWF0VXJsKHJlY29kZS50ZXN0dXJsKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAoc3VibWl0KSB7DQogICAgICAgICAgdGhhdC5ub3d1cmxMaXN0ID0gdGhpcy5mb3JtYXRVcmwoc3VibWl0LnBpY3VybCkNCiAgICAgICAgICB0aGF0LnNob3dTdWJtaXQgPSB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHRoYXQuc2hvdyA9IHRydWUNCiAgICAgIH0pDQogICAgfSwNCiAgICBmb3JtYXRVcmwoc3RyKSB7DQogICAgICBsZXQgdXJscyA9IFtdDQogICAgICBzdHIuc3BsaXQoJywnKS5mb3JFYWNoKHVybCA9PiB7DQogICAgICAgIHVybHMucHVzaCh7IHVybDogdXJsIH0pDQogICAgICB9KQ0KICAgICAgcmV0dXJuIHVybHMNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["processReportDetail.vue"],"names":[],"mappings":";AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"processReportDetail.vue","sourceRoot":"src/views/project/quality","sourcesContent":["<template>\r\n  <div class=\"process-report-detail\">\r\n    <van-form v-if=\"show\" :v-model=\"editData\" class=\"common-card\" :style=\"{ height: scrollerHeight }\">\r\n      <van-cell title=\"报验信息\" class=\"common-title\"/>\r\n      <upload label=\"举牌照片\" :fileList=\"urlList\" :editable=\"false\"></upload>\r\n      <upload v-if=\"accrecodeurlList.length > 0\" label=\"验收报告\" :fileList=\"accrecodeurlList\" :editable=\"false\"></upload>\r\n      <upload v-if=\"testurllList.length > 0\" label=\"测试报告\" :fileList=\"testurllList\" :editable=\"false\"></upload>\r\n      <upload v-if=\"keydataList.length > 0\" label=\"关键数据\" :fileList=\"keydataList\" :editable=\"false\"></upload>\r\n      <div v-if=\"showSubmit\">\r\n        <van-cell title=\"审核信息\" class=\"common-title\" />\r\n        <upload label=\"现场照片\" :fileList=\"nowurlList\" :editable=\"false\"></upload>\r\n      </div>\r\n    </van-form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Upload from '@/components/common/Upload'\r\nimport { getCheckDataByConponentId } from '@/api/project.js'\r\nexport default {\r\n  components: {\r\n    Upload\r\n  },\r\n  computed: {\r\n    scrollerHeight: function () {\r\n      return window.innerHeight - 90 + 'px'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      urlList: [],\r\n      accrecodeurlList: [],\r\n      testurllList: [],\r\n      keydataList: [],\r\n      nowurlList: [],\r\n      editData: {},\r\n      show: false,\r\n      showSubmit: false\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      let that = this\r\n      getCheckDataByConponentId({\r\n        id: that.$route.query.conpoentid,\r\n        type: that.$route.query.conponenttype\r\n      }).then(data => {\r\n        let params = data.find(item => item.produceid == that.$route.query.produceid)\r\n        let { recode, upload, submit } = params\r\n        if (upload && upload.picurl) {\r\n          that.urlList = that.formatUrl(upload.picurl)\r\n        }\r\n        if (recode) {\r\n          if (recode.accrecodeurl) {\r\n            that.accrecodeurlList = this.formatUrl(recode.accrecodeurl)\r\n          }\r\n          if (recode.keydata) {\r\n            that.keydataList = this.formatUrl(recode.keydata)\r\n          }\r\n          if (recode.testurl) {\r\n            that.testurllList = this.formatUrl(recode.testurl)\r\n          }\r\n        }\r\n        if (submit) {\r\n          that.nowurlList = this.formatUrl(submit.picurl)\r\n          that.showSubmit = true;\r\n        }\r\n        that.show = true\r\n      })\r\n    },\r\n    formatUrl(str) {\r\n      let urls = []\r\n      str.split(',').forEach(url => {\r\n        urls.push({ url: url })\r\n      })\r\n      return urls\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}