{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\common\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\common\\Upload.vue","mtime":1684246187881},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBUb2FzdCB9IGZyb20gJ3ZhbnQnDQppbXBvcnQgeyB1cGxvYWRGaWxlIH0gZnJvbSAnQC9hcGkvcHJvamVjdC5qcycNCmltcG9ydCB7IEltYWdlUHJldmlldyB9IGZyb20gJ3ZhbnQnDQppbXBvcnQgeyBsb29rVXJsIH0gZnJvbSAnQC91dGlscy9pbmRleCcNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIFtJbWFnZVByZXZpZXcuQ29tcG9uZW50Lm5hbWVdOiBJbWFnZVByZXZpZXcuQ29tcG9uZW50DQogIH0sDQogIHByb3BzOiB7DQogICAgZGl5QnV0dG9uOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnJw0KICAgIH0sDQogICAgYWNjZXB0OiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnaW1hZ2UvKicNCiAgICB9LA0KICAgIG1heENvdW50OiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiA5DQogICAgfSwNCiAgICBsYWJlbDogew0KICAgICAgdHlwZTogU3RyaW5nDQogICAgfSwNCiAgICBuYW1lOiB7DQogICAgICB0eXBlOiBTdHJpbmcNCiAgICB9LA0KICAgIGZpbGVMaXN0OiB7DQogICAgICB0eXBlOiBBcnJheQ0KICAgIH0sDQogICAgcnVsZXM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgZGVmYXVsdDogbnVsbA0KICAgIH0sDQogICAgZWRpdGFibGU6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlDQogICAgfSwNCiAgICBzaG93RmlsZU5hbWU6ew0KICAgICAgdHlwZTpCb29sZWFuLA0KICAgICAgZGVmYXVsdDpmYWxzZQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbGlzdDogdGhpcy5maWxlTGlzdCwNCiAgICAgIGxvb2tVcmwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB2YWxpZGF0b3IoKSB7DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0sDQogICAgYWZ0ZXJSZWFkVXJsKGZpbGUpIHsNCiAgICAgIC8vIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpDQogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlLmZpbGUpDQogICAgICAvLyB1cGxvYWRGaWxlKGZvcm1EYXRhKS50aGVuKHVybCA9PiB7DQogICAgICAvLyAgIGZpbGUudXJsID0gdXJsDQogICAgICAvLyB9KQ0KICAgICAgLy8gVG9hc3QubG9hZGluZyh7DQogICAgICAvLyAgIG1lc3NhZ2U6ICfliqDovb3kuK0uLi4nLA0KICAgICAgLy8gICBmb3JiaWRDbGljazogdHJ1ZQ0KICAgICAgLy8gfSkNCiAgICAgIGZpbGUuc3RhdHVzID0gJ3VwbG9hZGluZycNCiAgICAgIGZpbGUubWVzc2FnZSA9ICfkuIrkvKDkuK0uLi4nDQogICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpDQogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlLmZpbGUpDQogICAgICByZWFkZXIub25sb2FkID0gZSA9PiB7DQogICAgICAgIGxldCBiYXNlNjQgPSBlLnRhcmdldFsncmVzdWx0J10uc3BsaXQoJ2Jhc2U2NCwnKVsxXQ0KICAgICAgICB1cGxvYWRGaWxlKHsgbmFtZTogZmlsZS5maWxlLm5hbWUsIGJhc2U2NDogYmFzZTY0IH0pLnRoZW4odXJsID0+IHsNCiAgICAgICAgICBmaWxlLnVybCA9IHVybA0KICAgICAgICAgIC8vIFRvYXN0LmNsZWFyKCkNCiAgICAgICAgICBmaWxlLnN0YXR1cyA9ICdkb25lJw0KICAgICAgICAgIGZpbGUubWVzc2FnZSA9ICfkuIrkvKDmiJDlip8nDQogICAgICAgIH0pDQogICAgICB9DQogICAgfSwNCiAgICBjbGlja1ByZXZpZXcoZmlsZSkgew0KICAgICAgbGV0IHVybCA9IHRoaXMubG9va1VybChmaWxlLnVybCkNCiAgICAgIEltYWdlUHJldmlldyh7DQogICAgICAgIGltYWdlczogW3VybF0sDQogICAgICAgIGNsb3NlYWJsZTogdHJ1ZQ0KICAgICAgfSkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n  <van-field :label=\"label\" :name=\"name\" :rules=\"rules\">\r\n    <template #input>\r\n      <van-uploader\r\n        :preview-full-image=\"false\"\r\n        @click-preview=\"clickPreview\"\r\n        :max-count=\"maxCount\"\r\n        :accept=\"accept\"\r\n        v-model=\"list\"\r\n        :deletable=\"editable\"\r\n        :after-read=\"afterReadUrl\"\r\n        :class=\"editable ? '' : 'no-select'\"\r\n      >\r\n        <van-button v-if=\"diyButton\" icon=\"plus\" type=\"primary\">{{ diyButton }}</van-button>\r\n        <template #preview-cover=\"{ file }\" v-if=\"showFileName\">\r\n            <div class=\"preview-cover van-ellipsis\">{{ file.name }}</div>\r\n          </template>\r\n      </van-uploader>\r\n    </template>\r\n  </van-field>\r\n</template>\r\n<script>\r\nimport { Toast } from 'vant'\r\nimport { uploadFile } from '@/api/project.js'\r\nimport { ImagePreview } from 'vant'\r\nimport { lookUrl } from '@/utils/index'\r\nexport default {\r\n  components: {\r\n    [ImagePreview.Component.name]: ImagePreview.Component\r\n  },\r\n  props: {\r\n    diyButton: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    accept: {\r\n      type: String,\r\n      default: 'image/*'\r\n    },\r\n    maxCount: {\r\n      type: Number,\r\n      default: 9\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    name: {\r\n      type: String\r\n    },\r\n    fileList: {\r\n      type: Array\r\n    },\r\n    rules: {\r\n      type: Array,\r\n      default: null\r\n    },\r\n    editable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showFileName:{\r\n      type:Boolean,\r\n      default:false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: this.fileList,\r\n      lookUrl\r\n    }\r\n  },\r\n  methods: {\r\n    validator() {\r\n      return true\r\n    },\r\n    afterReadUrl(file) {\r\n      // let formData = new FormData()\r\n      // formData.append('file', file.file)\r\n      // uploadFile(formData).then(url => {\r\n      //   file.url = url\r\n      // })\r\n      // Toast.loading({\r\n      //   message: '加载中...',\r\n      //   forbidClick: true\r\n      // })\r\n      file.status = 'uploading'\r\n      file.message = '上传中...'\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file.file)\r\n      reader.onload = e => {\r\n        let base64 = e.target['result'].split('base64,')[1]\r\n        uploadFile({ name: file.file.name, base64: base64 }).then(url => {\r\n          file.url = url\r\n          // Toast.clear()\r\n          file.status = 'done'\r\n          file.message = '上传成功'\r\n        })\r\n      }\r\n    },\r\n    clickPreview(file) {\r\n      let url = this.lookUrl(file.url)\r\n      ImagePreview({\r\n        images: [url],\r\n        closeable: true\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.no-select {\r\n  .van-uploader__upload {\r\n    display: none !important;\r\n  }\r\n}\r\n</style>\r\n"]}]}