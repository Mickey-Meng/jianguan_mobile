{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\tasklog.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\tasklog.vue","mtime":1684246187968},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoJaW1wb3J0IEJwbW5Nb2RlbGVyIGZyb20gJ2JwbW4tanMvbGliL01vZGVsZXInOw0KCWltcG9ydCAqIGFzIGFwaSBmcm9tICJAL2FwaS9xdWFsaXR5IjsNCgkNCglleHBvcnQgZGVmYXVsdCB7DQoJCXByb3BzOlsndGFza0luZm8nXSwNCgkJZGF0YSgpIHsNCgkJCXJldHVybiB7DQoJCQkJZGlhbG9nVmlzaWJsZTogZmFsc2UsDQoJCQkJbG9nRGF0YTogW10sDQoJCQkJYWN0aXZlTmFtZTogJ2ZpcnN0JywNCgkJCQl1c2VyRGF0YTogW10sDQoJCQkJYnBtbk1vZGVsZXI6IG51bGwsDQoJCQkJeG1sU3RyOicnLA0KCQkJCXJ1blZhcmlhYmxlczoge30sDQoJCQkJaGFzVGFza1VzZXI6ZmFsc2UsDQoJCQkJcHJvY2Vzc05vZGVJbmZvOiB7fQ0KCQkJfTsNCgkJfSwNCgkJY3JlYXRlZCgpIHt9LA0KCQljb21wb25lbnRzOiB7fSwNCgkJY29tcHV0ZWQ6IHt9LA0KCQltb3VudGVkKCkgew0KCQl9LA0KCQltZXRob2RzOiB7DQoJCQlpbml0RGF0YSgpew0KCQkJCWFwaS52aWV3UHJvY2Vzc0JwbW4oew0KCQkJCQlwcm9jZXNzRGVmaW5pdGlvbklkOnRoaXMudGFza0luZm9bJ3Byb2Nlc3NEZWZpbml0aW9uSWQnXQ0KCQkJCX0pLnRoZW4oKHJlcykgPT4gew0KCQkJCQl0aGlzLnhtbFN0cj1yZXNbJ2RhdGEnXTsNCgkJCQkJDQoJCQkJfSk7DQoJCQkJLy8gcHJvY2Vzc0luc3RhbmNlSWQ9ZWVlZWQwZGEtZmNmOC0xMWVjLTg2NGUtMDA1MDU2YzAwMDAxJmZsb3dLZXk9ZmVueGlhbmdrYWlnb25nc2hlbnFpbmcmcHJvamVjdElkPTImYnVpbGRTZWN0aW9uPTMNCgkJCQlhcGkuZ2V0UnVuVmFyaWFibGVzKHsNCgkJCQkJcHJvY2Vzc0luc3RhbmNlSWQ6dGhpcy50YXNrSW5mb1sncHJvY2Vzc0luc3RhbmNlSWQnXSwNCgkJCQkJZmxvd0tleTogdGhpcy50YXNrSW5mb1snZmxvd0tleSddLA0KCQkJCQlidWlsZFNlY3Rpb246IHRoaXMuJHN0b3JlLmdldHRlcnMuY3VycmVudEJpYW9EdWFuLmlkIHx8IDMsDQoJCQkJCXByb2plY3RJZDogdGhpcy4kc3RvcmUuZ2V0dGVycy5jdXJQcm9qZWN0LmlkIHx8IDIsDQoJCQkJfSkudGhlbigocmVzKSA9PiB7DQoJCQkJCXRoaXMucnVuVmFyaWFibGVzPXJlc1snZGF0YSddOw0KCQkJCQkNCgkJCQl9KQ0KCQkJCWFwaS52aWV3SGlnaGxpZ2h0Rmxvd0RhdGEoew0KCQkJCQlwcm9jZXNzSW5zdGFuY2VJZDp0aGlzLnRhc2tJbmZvWydwcm9jZXNzSW5zdGFuY2VJZCddDQoJCQkJfSkudGhlbigocmVzKSA9PiB7DQoJCQkJCXRoaXMucHJvY2Vzc05vZGVJbmZvID0gcmVzLmRhdGE7DQoJCQkJfSk7DQoJCQkJYXBpLmxpc3RGbG93VGFza0NvbW1lbnQoew0KCQkJCQlwcm9jZXNzSW5zdGFuY2VJZDp0aGlzLnRhc2tJbmZvWydwcm9jZXNzSW5zdGFuY2VJZCddDQoJCQkJfSkudGhlbigocmVzKSA9PiB7DQoJCQkJCWNvbnN0IF9kYXRhID0gW107DQoJCQkJCWZvciAobGV0IGkgPSAwOyBpIDwgcmVzLmRhdGEubGVuZ3RoOyBpKyspIHsNCgkJCQkJCWNvbnN0IGl0ZW0gPSByZXMuZGF0YVtpXTsNCgkJCQkJCWl0ZW0uY29tbWVudCA9IGl0ZW0uY29tbWVudCA9PT0gdW5kZWZpbmVkID8gIuWPkei1tyIgOiBpdGVtLmNvbW1lbnQ7IC8vIOm7mOiupOaYvuekuuS4uuWPkei1tw0KCQkJCQkJLy8gZ2V0VXNlckluZm8oaXRlbS5jcmVhdGVVc2VySWQpLnRoZW4ocmVzMSA9PiB7DQoJCQkJCQkvLyAJaXRlbS5jcmVhdGVVc2VybmFtZVN0ciA9IHJlczEuZGF0YS51c2VySW5mby5OQU1FOw0KCQkJCQkJLy8gCV9kYXRhLnB1c2goSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShpdGVtKSkpOw0KCQkJCQkJCQ0KCQkJCQkJLy8gCXRoaXMubG9nRGF0YT1fZGF0YXx8W107IC8vIOW8uuWItuWIt+aWsA0KCQkJCQkJLy8gfSkNCgkJCQkJfQ0KCQkJCQkNCgkJCQkJdGhpcy5sb2dEYXRhPXJlc1snZGF0YSddfHxbXTsNCgkJCQl9KTsNCgkJCQkNCgkJCQkvLyBpZih0aGlzLnRhc2tJbmZvWyd0YXNrSWQnXSl7DQoJCQkJLy8gCWFwaS52aWV3VGFza1VzZXJJbmZvKHsNCgkJCQkvLyAJCXByb2Nlc3NEZWZpbml0aW9uSWQ6IHRoaXMudGFza0luZm9bJ3Byb2Nlc3NEZWZpbml0aW9uSWQnXSwNCgkJCQkvLyAJCXByb2Nlc3NJbnN0YW5jZUlkOiB0aGlzLnRhc2tJbmZvWydwcm9jZXNzSW5zdGFuY2VJZCddLA0KCQkJCS8vIAkJdGFza0lkOiB0aGlzLnRhc2tJbmZvWyd0YXNrSWQnXSwNCgkJCQkvLyAJCWhpc3RvcmljOnRydWUNCgkJCQkvLyAJfSkudGhlbigocmVzKSA9PiB7DQoJCQkJLy8gCQl0aGlzLnVzZXJEYXRhPXJlc1snZGF0YSddfHxbXTsNCgkJCQkvLyAJfSk7DQoJCQkJLy8gfWVsc2V7DQoJCQkJLy8gCXRoaXMuaGFzVGFza1VzZXI9ZmFsc2U7DQoJCQkJLy8gfQ0KCQkJfSwNCgkJCWNyZWF0ZUZsb3coKSB7DQoJCQkJY29uc3QgdGhhdCA9IHRoaXM7DQoJCQkJdGhhdC5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsNCgkJCQkvLyBpZih0aGlzLmJwbW5Nb2RlbGVyKXJldHVybjsNCgkJCQlzZXRUaW1lb3V0KCgpPT57DQoJCQkJCWNvbnN0IGNvbnRhaW5lckVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7DQoJCQkJCXRoYXQuYnBtbk1vZGVsZXIgJiYgdGhhdC5icG1uTW9kZWxlci5kZXN0cm95KCk7DQoJCQkJCXRoYXQuYnBtbk1vZGVsZXIgPSBuZXcgQnBtbk1vZGVsZXIoew0KCQkJCQkJY29udGFpbmVyOiBjb250YWluZXJFbGVtZW50LA0KCQkJCQkJYWRkaXRpb25hbE1vZHVsZXM6IFt7DQoJCQkJCQkJcGFsZXR0ZVByb3ZpZGVyOiBbInZhbHVlIiwgJyddLCAvLyDnpoHnlKgv5riF56m65bem5L6n5bel5YW35qCPDQoJCQkJCQkJbGFiZWxFZGl0aW5nUHJvdmlkZXI6IFsidmFsdWUiLCAnJ10sIC8vIOemgeeUqOiKgueCuee8lui+kQ0KCQkJCQkJCWNvbnRleHRQYWRQcm92aWRlcjogWyJ2YWx1ZSIsICcnXSwgLy8g56aB55So5Zu+5b2i6I+c5Y2VDQoJCQkJCQl9XQ0KCQkJCQl9KTsNCgkJCQkJdGhhdC5icG1uTW9kZWxlci5pbXBvcnRYTUwodGhhdC54bWxTdHIsIChlcnIpID0+IHsNCgkJCQkJCWlmICghZXJyKSB7DQoJCQkJCQkJLy8g6K6p5Zu+6IO96Ieq6YCC5bqU5bGP5bmVDQoJCQkJCQkJY29uc3QgY2FudmFzID0gdGhhdC5icG1uTW9kZWxlci5nZXQoJ2NhbnZhcycpDQoJCQkJCQkJY2FudmFzLnpvb20oJ2ZpdC12aWV3cG9ydCcpDQoNCgkJCQkJCQlsZXQgeyBmaW5pc2hlZFRhc2tTZXQsIHVuZmluaXNoZWRUYXNrU2V0IH0gPSB0aGF0LnByb2Nlc3NOb2RlSW5mbzsNCgkJCQkJCQkvLyDnm67nmoTvvJrkuLrnrKzkuIDkuKroioLngrnmt7vliqDnu7/oibLvvIzkuLrnrKzkuozkuKroioLngrnmt7vliqDpu4ToibINCgkJCQkJCQkvLyDlrp7njrDmraXpqqTvvJox44CB5om+5Yiw6aG16Z2i6YeM5omA5pyJ6IqC54K5DQoJCQkJCQkJY29uc3QgZWxlbWVudFJlZ2lzdHJ5ID0gdGhhdC5icG1uTW9kZWxlci5nZXQoJ2VsZW1lbnRSZWdpc3RyeScpOw0KCQkJCQkJCWNvbnN0IG5vZGVMaXN0ID0gZWxlbWVudFJlZ2lzdHJ5LmZpbHRlciAoDQoJCQkJCQkJKGl0ZW0pID0+IGZpbmlzaGVkVGFza1NldC5pbmRleE9mKGl0ZW0uaWQpID4gLTEgJiYgdW5maW5pc2hlZFRhc2tTZXQuaW5kZXhPZihpdGVtLmlkKSA8IDANCgkJCQkJCQkpOw0KCQkJCQkJCWNvbnN0IHVzZXJUYXNrTGlzdCA9IGVsZW1lbnRSZWdpc3RyeS5maWx0ZXIoDQoJCQkJCQkJCShpdGVtKSA9PiBpdGVtLnR5cGUgPT09ICdicG1uOlVzZXJUYXNrJw0KCQkJCQkJCQkpOw0KCQkJCQkJCS8vIOatpOaXtuW+l+WIsOeahHVzZXJUYXNrTGlzdCDkvr/mmK/mtYHnqIvlm77kuK3miYDmnInnmoToioLngrnnmoTpm4blkIgNCgkJCQkJCQljb25zb2xlLmxvZyhub2RlTGlzdCwgZWxlbWVudFJlZ2lzdHJ5LCB1c2VyVGFza0xpc3QpOw0KCQkJCQkJCS8vIOatpemqpDIg77ya5Li66IqC54K55re75Yqg6aKc6ImyDQoJCQkJCQkJLy8g5pa55byPMSDvvJptb2RlbGluZy5zZXRDb2xvcijlj4LmlbAx77ya6IqC54K577yM5Y+v5Lul5piv5Y2V5Liq5YWD57Sg5a6e5L6L77yM5Lmf5Y+v5piv5aSa5Liq6IqC54K557uE5oiQ55qE5pWw57uE77yM5Y+C5pWwMu+8mmNsYXNz57G7KTsNCgkJCQkJCQlsZXQgbW9kZWxpbmcgPSB0aGF0LmJwbW5Nb2RlbGVyLmdldCgnbW9kZWxpbmcnKTsNCgkJCQkJCQlub2RlTGlzdC5mb3JFYWNoKGl0ZW0gPT4gew0KCQkJCQkJCQltb2RlbGluZy5zZXRDb2xvcihpdGVtLCB7DQoJCQkJCQkJCQlzdHJva2U6ICdncmVlbicsDQoJCQkJCQkJCQlmaWxsOiAncmdiKDE5NyAyNTUgMTk3KScNCgkJCQkJCQkJfSk7DQoJCQkJCQkJfSk7DQoNCgkJCQkJCQl1c2VyVGFza0xpc3QuZm9yRWFjaChpdGVtID0+IHsNCgkJCQkJCQkJbGV0IG5vZGVuYW1lID0gaXRlbS5idXNpbmVzc09iamVjdC4kYXR0cnNbJ2Zsb3dhYmxlOmFzc2lnbmVlJ10ucmVwbGFjZSgnJHsnLCcnKS5yZXBsYWNlKCd9JywnJykNCgkJCQkJCQkJaWYgKG5vZGVuYW1lID09ICdhc3NpZ25lZScpIG5vZGVuYW1lICs9ICdMaXN0JzsNCgkJCQkJCQkJDQoJCQkJCQkJCWlmIChub2RlbmFtZSA9PSAnc3RhcnRVc2VyTmFtZScgJiYgIXRoYXQucnVuVmFyaWFibGVzW25vZGVuYW1lKydTdHInXSkgew0KCQkJCQkJCQkJbm9kZW5hbWUgPSAnaW5pdGlhdG9yJzsNCgkJCQkJCQkJfQ0KCQkJCQkJCQkvLyBtb2RlbGluZy51cGRhdGVMYWJlbChpdGVtLCBpdGVtLmJ1c2luZXNzT2JqZWN0Lm5hbWUgKyAnXG4nICt0aGlzLnJ1blZhcmlhYmxlc1tub2RlbmFtZSsnU3RyJ10/dGhpcy5ydW5WYXJpYWJsZXNbbm9kZW5hbWUrJ1N0ciddOifml6AnKTsNCgkJCQkJCQkJbW9kZWxpbmcudXBkYXRlTGFiZWwoaXRlbSwgaXRlbS5idXNpbmVzc09iamVjdC5uYW1lICsgJ1xuJyArICh0aGF0LnJ1blZhcmlhYmxlc1tub2RlbmFtZSsnU3RyJ10mJnRoYXQucnVuVmFyaWFibGVzW25vZGVuYW1lKydTdHInXS5sZW5ndGg+MD90aGF0LnJ1blZhcmlhYmxlc1tub2RlbmFtZSsnU3RyJ106J+aXoCcpKTsNCgkJCQkJCQl9KTsNCgkJCQkJCQkvLyB0aGlzLnNldFByb2Nlc3NTdGF0dXModGhpcy5wcm9jZXNzTm9kZUluZm8pIC8vIOacqui1t+S9nOeUqO+8jOWPr+iDveaYr2Nzc+mXrumimA0KCQkJCQkJCQ0KCQkJCQkJCS8vIGNvbnN0IGV2ZW50QnVzID0gdGhpcy5icG1uTW9kZWxlci5nZXQoJ2V2ZW50QnVzJyk7DQoJCQkJCQkJLy8gLy8g5rOo5YaM6IqC54K55LqL5Lu277yMZXZlbnRUeXBlc+S4reWPr+S7peWGmeWkmuS4quS6i+S7tg0KCQkJCQkJCS8vIGNvbnN0IGV2ZW50VHlwZXMgPSBbJ2VsZW1lbnQuY2xpY2snLCAnZWxlbWVudC5ob3ZlciddOw0KCQkJCQkJCS8vIGV2ZW50VHlwZXMuZm9yRWFjaCgoZXZlbnRUeXBlKSA9PiB7DQoJCQkJCQkJLy8gCWV2ZW50QnVzLm9uKGV2ZW50VHlwZSwgKGUpID0+IHsNCgkJCQkJCQkvLyAJCWNvbnN0IHtlbGVtZW50fSA9IGU7DQoJCQkJCQkJLy8gCQlpZiAoIWVsZW1lbnQucGFyZW50KSByZXR1cm47DQoJCQkJCQkJLy8gCQlpZiAoIWUgfHwgZWxlbWVudC50eXBlID09PSAnYnBtbjpQcm9jZXNzJykgew0KCQkJCQkJCS8vIAkJCXJldHVybiBmYWxzZTsNCgkJCQkJCQkvLyAJCX0gZWxzZSB7DQoJCQkJCQkJLy8gCQkJaWYgKGV2ZW50VHlwZSA9PT0gJ2VsZW1lbnQuY2xpY2snKSB7DQoJCQkJCQkJLy8gCQkJCS8vIOiKgueCueeCueWHu+WQjuaDs+imgeWBmueahOWkhOeQhg0KCQkJCQkJCS8vIAkJCQkvLyDmraTml7bmg7PopoHngrnlh7voioLngrnlkI7vvIzmi7/liLDoioLngrnlrp7kvovvvIzpgJrov4flpJbpg6jovpPlhaXmm7TmlrDoioLngrnlkI3np7ANCgkJCQkJCQkvLyAJCQkJdGhpcy5jdXJyZW50RWxlbWVudCA9IGVsZW1lbnQ7DQoJCQkJCQkJCQkJCQ0KCQkJCQkJCS8vIAkJCQljb25zb2xlLmxvZyhlbGVtZW50LmlkKTsNCgkJCQkJCQkvLyAJCQkJY29uc3QgbW9kZWxpbmcgPSB0aGlzLmJwbW5Nb2RlbGVyLmdldCgnbW9kZWxpbmcnKTsNCgkJCQkJCQkvLyAJCQkJbW9kZWxpbmcudXBkYXRlTGFiZWwoZWxlbWVudCwgIjEyMzQiKTsNCgkJCQkJCQkvLyAJCQl9IGVsc2UgaWYgKGV2ZW50VHlwZSA9PT0gJ2VsZW1lbnQuaG92ZXInKSB7DQoJCQkJCQkJLy8gCQkJCS8vIOm8oOagh+a7kei/h+iKgueCueWQjuaDs+imgeWBmueahOWkhOeQhg0KCQkJCQkJCS8vIAkJCQljb25zb2xlLmxvZygn6byg5qCH57uP6L+H6IqC54K55ZWmficpOw0KCQkJCQkJCS8vIAkJCX0NCgkJCQkJCQkvLyAJCX0NCgkJCQkJCQkvLyAJfSk7DQoJCQkJCQkJLy8gfSk7DQoJCQkJCQl9IGVsc2Ugew0KCQkJCQkJCWNvbnNvbGUubG9nKCdzb21ldGhpbmcgd2VudCB3cm9uZzonLCBlcnIpOw0KCQkJCQkJfQ0KCQkJCQl9KTsNCgkJCQl9LDIwMCkNCgkJCX0sDQoJCQkvLyDorr7nva7mtYHnqIvlm77lhYPntKDnirbmgIENCgkJCXNldFByb2Nlc3NTdGF0dXMgKHByb2Nlc3NOb2RlSW5mbykgew0KCQkJCXRoaXMucHJvY2Vzc05vZGVJbmZvID0gcHJvY2Vzc05vZGVJbmZvOw0KCQkJCS8vIGlmICh0aGlzLmlzTG9hZGluZyB8fCB0aGlzLnByb2Nlc3NOb2RlSW5mbyA9PSBudWxsIHx8IHRoaXMuYnBtbk1vZGVsZXIgPT0gbnVsbCkgcmV0dXJuOw0KCQkJCWxldCB7IGZpbmlzaGVkU2VxdWVuY2VGbG93U2V0LCBmaW5pc2hlZFRhc2tTZXQsIHVuZmluaXNoZWRUYXNrU2V0IH0gPSB0aGlzLnByb2Nlc3NOb2RlSW5mbzsNCgkJCQljb25zdCBjYW52YXMgPSB0aGlzLmJwbW5Nb2RlbGVyLmdldCgnY2FudmFzJyk7DQoJCQkJY29uc3QgZWxlbWVudFJlZ2lzdHJ5ID0gdGhpcy5icG1uTW9kZWxlci5nZXQoJ2VsZW1lbnRSZWdpc3RyeScpOw0KCQkJCWlmIChBcnJheS5pc0FycmF5KGZpbmlzaGVkU2VxdWVuY2VGbG93U2V0KSkgew0KCQkJCQlmaW5pc2hlZFNlcXVlbmNlRmxvd1NldC5mb3JFYWNoKGl0ZW0gPT4gew0KCQkJCQlpZiAoaXRlbSAhPSBudWxsKSB7DQoJCQkJCQljYW52YXMuYWRkTWFya2VyKGl0ZW0sICdzdWNjZXNzJyk7DQoJCQkJCQlsZXQgZWxlbWVudCA9IGVsZW1lbnRSZWdpc3RyeS5nZXQoaXRlbSk7DQoJCQkJCQljb25zdCBjb25kaXRpb25FeHByZXNzaW9uID0gZWxlbWVudC5idXNpbmVzc09iamVjdC5jb25kaXRpb25FeHByZXNzaW9uOw0KCQkJCQkJaWYgKGNvbmRpdGlvbkV4cHJlc3Npb24pIHsNCgkJCQkJCQljYW52YXMuYWRkTWFya2VyKGl0ZW0sICdjb25kaXRpb24tZXhwcmVzc2lvbicpOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCX0pOw0KCQkJCX0NCgkJCQlpZiAoQXJyYXkuaXNBcnJheShmaW5pc2hlZFRhc2tTZXQpKSB7DQoJCQkJCWZpbmlzaGVkVGFza1NldC5mb3JFYWNoKGl0ZW0gPT4gew0KCQkJCQljYW52YXMuYWRkTWFya2VyKGl0ZW0sICdzdWNjZXNzJyk7DQoJCQkJCX0pOw0KCQkJCX0NCgkJCQlpZiAoQXJyYXkuaXNBcnJheSh1bmZpbmlzaGVkVGFza1NldCkpIHsNCgkJCQkJdW5maW5pc2hlZFRhc2tTZXQuZm9yRWFjaChpdGVtID0+IHsNCgkJCQkJY2FudmFzLmFkZE1hcmtlcihpdGVtLCAnY3VycmVudCcpOw0KCQkJCQl9KTsNCgkJCQl9DQoJCQl9DQoJCX0sDQoJfTsNCg=="},{"version":3,"sources":["tasklog.vue"],"names":[],"mappings":";AAufile":"tasklog.vue","sourceRoot":"src/views/common","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div class=\"log-btns\">\r\n\t\t\t<van-button type=\"primary\" size=\"small\" @click=\"createFlow\">流程图</van-button>\r\n\t\t\t<!-- <van-button type=\"primary\" size=\"small\">打印预览</van-button> -->\r\n\t\t</div>\r\n\t\t<div class=\"log-content\">\r\n\t\t\t<!-- <van-steps direction=\"vertical\" :active=\"logData.length-1\" style=\"background:rgba(0,0,0,0)\">\r\n\t\t\t\t<van-step v-for=\"item in logData\">\r\n\t\t\t\t\t<h5>流程环节: {{item.taskName}}</h5>\r\n\t\t\t\t\t<h5>执行人: {{item.createName}}</h5>\r\n\t\t\t\t\t<h5>操作: {{item.approvalType}}</h5>\r\n\t\t\t\t\t<h5>审批意见: {{item.comment}}</h5>\r\n\t\t\t\t\t<h5>处理时间1: {{item.createTime}}</h5>\r\n\t\t\t\t</van-step>\r\n\t\t\t</van-steps> -->\r\n\t\t\t<el-tabs v-model=\"activeName\" type=\"card\">\r\n\t\t\t\t<el-tab-pane label=\"审批记录\" name=\"first\">\r\n\t\t\t\t\t<el-table :data=\"logData\" style=\"width: 100%\" border class=\"have_scrolling\">\r\n\t\t\t\t\t\t<el-table-column type=\"index\" width=\"50\" align=\"center\" label=\"序号\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"taskName\" align=\"center\" label=\"流程环节\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"createName\" align=\"center\" label=\"执行人\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"approvalType\" align=\"center\" label=\"操作\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"comment\" align=\"center\" label=\"审批意见\"  show-overflow-tooltip>\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"createTime\" align=\"center\" label=\"处理时间\" show-overflow-tooltip>\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t</el-table>\r\n\t\t\t\t</el-tab-pane>\r\n\t\t\t\t<el-tab-pane v-if=\"hasTaskUser\" label=\"审批人\" name=\"second\">\r\n\t\t\t\t\t<el-table :data=\"userData\" style=\"width: 100%\" border class=\"have_scrolling\">\r\n\t\t\t\t\t\t<el-table-column type=\"index\" width=\"50\" align=\"center\" label=\"序号\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"loginName\" align=\"center\" label=\"审批人\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"showName\" align=\"center\" label=\"昵称\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t<el-table-column prop=\"lastApprovalTime\" align=\"center\" label=\"处理时间\">\r\n\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t</el-table>\r\n\t\t\t\t</el-tab-pane>\r\n\t\t\t</el-tabs>\r\n\t\t</div>\r\n\t\t<el-drawer title=\"我是标题\" :visible.sync=\"dialogVisible\" :with-header=\"false\" size=\"90%\">\r\n\t\t\t<div id=\"container\" style=\"width:100%;height:100%\"></div>\r\n\t\t</el-drawer>\r\n\t</div>\r\n</template>\r\n\r\n\r\n<script>\r\n\timport BpmnModeler from 'bpmn-js/lib/Modeler';\r\n\timport * as api from \"@/api/quality\";\r\n\t\r\n\texport default {\r\n\t\tprops:['taskInfo'],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tdialogVisible: false,\r\n\t\t\t\tlogData: [],\r\n\t\t\t\tactiveName: 'first',\r\n\t\t\t\tuserData: [],\r\n\t\t\t\tbpmnModeler: null,\r\n\t\t\t\txmlStr:'',\r\n\t\t\t\trunVariables: {},\r\n\t\t\t\thasTaskUser:false,\r\n\t\t\t\tprocessNodeInfo: {}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {},\r\n\t\tcomponents: {},\r\n\t\tcomputed: {},\r\n\t\tmounted() {\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tinitData(){\r\n\t\t\t\tapi.viewProcessBpmn({\r\n\t\t\t\t\tprocessDefinitionId:this.taskInfo['processDefinitionId']\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tthis.xmlStr=res['data'];\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t// processInstanceId=eeeed0da-fcf8-11ec-864e-005056c00001&flowKey=fenxiangkaigongshenqing&projectId=2&buildSection=3\r\n\t\t\t\tapi.getRunVariables({\r\n\t\t\t\t\tprocessInstanceId:this.taskInfo['processInstanceId'],\r\n\t\t\t\t\tflowKey: this.taskInfo['flowKey'],\r\n\t\t\t\t\tbuildSection: this.$store.getters.currentBiaoDuan.id || 3,\r\n\t\t\t\t\tprojectId: this.$store.getters.curProject.id || 2,\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tthis.runVariables=res['data'];\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\tapi.viewHighlightFlowData({\r\n\t\t\t\t\tprocessInstanceId:this.taskInfo['processInstanceId']\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tthis.processNodeInfo = res.data;\r\n\t\t\t\t});\r\n\t\t\t\tapi.listFlowTaskComment({\r\n\t\t\t\t\tprocessInstanceId:this.taskInfo['processInstanceId']\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tconst _data = [];\r\n\t\t\t\t\tfor (let i = 0; i < res.data.length; i++) {\r\n\t\t\t\t\t\tconst item = res.data[i];\r\n\t\t\t\t\t\titem.comment = item.comment === undefined ? \"发起\" : item.comment; // 默认显示为发起\r\n\t\t\t\t\t\t// getUserInfo(item.createUserId).then(res1 => {\r\n\t\t\t\t\t\t// \titem.createUsernameStr = res1.data.userInfo.NAME;\r\n\t\t\t\t\t\t// \t_data.push(JSON.parse(JSON.stringify(item)));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// \tthis.logData=_data||[]; // 强制刷新\r\n\t\t\t\t\t\t// })\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.logData=res['data']||[];\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// if(this.taskInfo['taskId']){\r\n\t\t\t\t// \tapi.viewTaskUserInfo({\r\n\t\t\t\t// \t\tprocessDefinitionId: this.taskInfo['processDefinitionId'],\r\n\t\t\t\t// \t\tprocessInstanceId: this.taskInfo['processInstanceId'],\r\n\t\t\t\t// \t\ttaskId: this.taskInfo['taskId'],\r\n\t\t\t\t// \t\thistoric:true\r\n\t\t\t\t// \t}).then((res) => {\r\n\t\t\t\t// \t\tthis.userData=res['data']||[];\r\n\t\t\t\t// \t});\r\n\t\t\t\t// }else{\r\n\t\t\t\t// \tthis.hasTaskUser=false;\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tcreateFlow() {\r\n\t\t\t\tconst that = this;\r\n\t\t\t\tthat.dialogVisible = true;\r\n\t\t\t\t// if(this.bpmnModeler)return;\r\n\t\t\t\tsetTimeout(()=>{\r\n\t\t\t\t\tconst containerElement = document.getElementById('container');\r\n\t\t\t\t\tthat.bpmnModeler && that.bpmnModeler.destroy();\r\n\t\t\t\t\tthat.bpmnModeler = new BpmnModeler({\r\n\t\t\t\t\t\tcontainer: containerElement,\r\n\t\t\t\t\t\tadditionalModules: [{\r\n\t\t\t\t\t\t\tpaletteProvider: [\"value\", ''], // 禁用/清空左侧工具栏\r\n\t\t\t\t\t\t\tlabelEditingProvider: [\"value\", ''], // 禁用节点编辑\r\n\t\t\t\t\t\t\tcontextPadProvider: [\"value\", ''], // 禁用图形菜单\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthat.bpmnModeler.importXML(that.xmlStr, (err) => {\r\n\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t// 让图能自适应屏幕\r\n\t\t\t\t\t\t\tconst canvas = that.bpmnModeler.get('canvas')\r\n\t\t\t\t\t\t\tcanvas.zoom('fit-viewport')\r\n\r\n\t\t\t\t\t\t\tlet { finishedTaskSet, unfinishedTaskSet } = that.processNodeInfo;\r\n\t\t\t\t\t\t\t// 目的：为第一个节点添加绿色，为第二个节点添加黄色\r\n\t\t\t\t\t\t\t// 实现步骤：1、找到页面里所有节点\r\n\t\t\t\t\t\t\tconst elementRegistry = that.bpmnModeler.get('elementRegistry');\r\n\t\t\t\t\t\t\tconst nodeList = elementRegistry.filter (\r\n\t\t\t\t\t\t\t(item) => finishedTaskSet.indexOf(item.id) > -1 && unfinishedTaskSet.indexOf(item.id) < 0\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst userTaskList = elementRegistry.filter(\r\n\t\t\t\t\t\t\t\t(item) => item.type === 'bpmn:UserTask'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t// 此时得到的userTaskList 便是流程图中所有的节点的集合\r\n\t\t\t\t\t\t\tconsole.log(nodeList, elementRegistry, userTaskList);\r\n\t\t\t\t\t\t\t// 步骤2 ：为节点添加颜色\r\n\t\t\t\t\t\t\t// 方式1 ：modeling.setColor(参数1：节点，可以是单个元素实例，也可是多个节点组成的数组，参数2：class类);\r\n\t\t\t\t\t\t\tlet modeling = that.bpmnModeler.get('modeling');\r\n\t\t\t\t\t\t\tnodeList.forEach(item => {\r\n\t\t\t\t\t\t\t\tmodeling.setColor(item, {\r\n\t\t\t\t\t\t\t\t\tstroke: 'green',\r\n\t\t\t\t\t\t\t\t\tfill: 'rgb(197 255 197)'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tuserTaskList.forEach(item => {\r\n\t\t\t\t\t\t\t\tlet nodename = item.businessObject.$attrs['flowable:assignee'].replace('${','').replace('}','')\r\n\t\t\t\t\t\t\t\tif (nodename == 'assignee') nodename += 'List';\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (nodename == 'startUserName' && !that.runVariables[nodename+'Str']) {\r\n\t\t\t\t\t\t\t\t\tnodename = 'initiator';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// modeling.updateLabel(item, item.businessObject.name + '\\n' +this.runVariables[nodename+'Str']?this.runVariables[nodename+'Str']:'无');\r\n\t\t\t\t\t\t\t\tmodeling.updateLabel(item, item.businessObject.name + '\\n' + (that.runVariables[nodename+'Str']&&that.runVariables[nodename+'Str'].length>0?that.runVariables[nodename+'Str']:'无'));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// this.setProcessStatus(this.processNodeInfo) // 未起作用，可能是css问题\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// const eventBus = this.bpmnModeler.get('eventBus');\r\n\t\t\t\t\t\t\t// // 注册节点事件，eventTypes中可以写多个事件\r\n\t\t\t\t\t\t\t// const eventTypes = ['element.click', 'element.hover'];\r\n\t\t\t\t\t\t\t// eventTypes.forEach((eventType) => {\r\n\t\t\t\t\t\t\t// \teventBus.on(eventType, (e) => {\r\n\t\t\t\t\t\t\t// \t\tconst {element} = e;\r\n\t\t\t\t\t\t\t// \t\tif (!element.parent) return;\r\n\t\t\t\t\t\t\t// \t\tif (!e || element.type === 'bpmn:Process') {\r\n\t\t\t\t\t\t\t// \t\t\treturn false;\r\n\t\t\t\t\t\t\t// \t\t} else {\r\n\t\t\t\t\t\t\t// \t\t\tif (eventType === 'element.click') {\r\n\t\t\t\t\t\t\t// \t\t\t\t// 节点点击后想要做的处理\r\n\t\t\t\t\t\t\t// \t\t\t\t// 此时想要点击节点后，拿到节点实例，通过外部输入更新节点名称\r\n\t\t\t\t\t\t\t// \t\t\t\tthis.currentElement = element;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// \t\t\t\tconsole.log(element.id);\r\n\t\t\t\t\t\t\t// \t\t\t\tconst modeling = this.bpmnModeler.get('modeling');\r\n\t\t\t\t\t\t\t// \t\t\t\tmodeling.updateLabel(element, \"1234\");\r\n\t\t\t\t\t\t\t// \t\t\t} else if (eventType === 'element.hover') {\r\n\t\t\t\t\t\t\t// \t\t\t\t// 鼠标滑过节点后想要做的处理\r\n\t\t\t\t\t\t\t// \t\t\t\tconsole.log('鼠标经过节点啦~');\r\n\t\t\t\t\t\t\t// \t\t\t}\r\n\t\t\t\t\t\t\t// \t\t}\r\n\t\t\t\t\t\t\t// \t});\r\n\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log('something went wrong:', err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},200)\r\n\t\t\t},\r\n\t\t\t// 设置流程图元素状态\r\n\t\t\tsetProcessStatus (processNodeInfo) {\r\n\t\t\t\tthis.processNodeInfo = processNodeInfo;\r\n\t\t\t\t// if (this.isLoading || this.processNodeInfo == null || this.bpmnModeler == null) return;\r\n\t\t\t\tlet { finishedSequenceFlowSet, finishedTaskSet, unfinishedTaskSet } = this.processNodeInfo;\r\n\t\t\t\tconst canvas = this.bpmnModeler.get('canvas');\r\n\t\t\t\tconst elementRegistry = this.bpmnModeler.get('elementRegistry');\r\n\t\t\t\tif (Array.isArray(finishedSequenceFlowSet)) {\r\n\t\t\t\t\tfinishedSequenceFlowSet.forEach(item => {\r\n\t\t\t\t\tif (item != null) {\r\n\t\t\t\t\t\tcanvas.addMarker(item, 'success');\r\n\t\t\t\t\t\tlet element = elementRegistry.get(item);\r\n\t\t\t\t\t\tconst conditionExpression = element.businessObject.conditionExpression;\r\n\t\t\t\t\t\tif (conditionExpression) {\r\n\t\t\t\t\t\t\tcanvas.addMarker(item, 'condition-expression');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(finishedTaskSet)) {\r\n\t\t\t\t\tfinishedTaskSet.forEach(item => {\r\n\t\t\t\t\tcanvas.addMarker(item, 'success');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(unfinishedTaskSet)) {\r\n\t\t\t\t\tunfinishedTaskSet.forEach(item => {\r\n\t\t\t\t\tcanvas.addMarker(item, 'current');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t// @import \"../../assets/css/dialog.scss\"\r\n</style>\r\n\r\n\r\n"]}]}