{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\task\\handlerFlowTask\\index.vue?vue&type=style&index=0&id=f22a61e0&lang=scss&scoped=true&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\task\\handlerFlowTask\\index.vue","mtime":1684246188056},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":1684411443176},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1684411446724},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":1684411443221},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1684411446938},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucHJvY2VzcyB7DQogIGhlaWdodDogMTAwJTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgLmxheW91dC1jb250ZW50IHsNCiAgICBvdmVyZmxvdy15OiBhdXRvOw0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkJA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/task/handlerFlowTask","sourcesContent":["<template>\r\n  <div class=\"process\">\r\n    <common-head ref=\"head\" :title=\"$route.meta.title\"> </common-head>\r\n    <div class=\"full-dialog defined-dialog\">\r\n      <template slot=\"title\">\r\n        {{ dialogTitle }}\r\n        <div class=\"logo-icon\"></div>\r\n      </template>\r\n      <div\r\n        style=\"\r\n          background-color: rgba(0, 0 0, 0.5);\r\n          height: calc(100vh - 96px);\r\n          overflow-y: scroll;\r\n          padding: 0px;\r\n          margin: 0;\r\n        \"\r\n      >\r\n        <div>\r\n          <div class=\"form-bg\">\r\n            <div class=\"form-content\">\r\n              <!-- <div v-if=\"isUnEdit\" class=\"form-title\">\r\n                  <div class=\"title-big-bar\"></div>\r\n                  <strong>{{ menuTitle }}</strong>\r\n                  <div class=\"form-btns\">\r\n                    <el-button size=\"medium\">暂存</el-button>\r\n                    <el-button size=\"medium\">保存草稿</el-button>\r\n                    <el-button size=\"medium\">选择草稿</el-button>\r\n                    <el-button size=\"medium\" type=\"primary\">复制填充</el-button>\r\n                  </div>\r\n                </div> -->\r\n              <router-view ref=\"routerview\" :detailRow=\"detailRow\"></router-view>\r\n            </div>\r\n          </div>\r\n          <taskhandle v-if=\"isHandleVisible\" :taskInfo=\"taskInfo\" ref=\"taskhandle\"></taskhandle>\r\n        </div>\r\n        <strong style=\"font-size: 16px;font-family: 'Microsoft YaHei';\">流程日志</strong>\r\n        <div>\r\n          <tasklog v-if=\"isInfoVisible\" :taskInfo=\"taskInfo\" ref=\"tasklog\"></tasklog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport CommonHead from '@/components/head/CommonHead'\r\nimport * as api from '@/api/quality'\r\nimport { convertOptions, getQueryVariable } from '@/utils/format.js'\r\nimport tasklog from '../../common/tasklog.vue'\r\nimport taskhandle from '../../common/taskhandle'\r\nexport default {\r\n  //   props: ['dialogTitle', 'menuTitle'],\r\n  components: {\r\n    CommonHead,\r\n\r\n    taskhandle,\r\n    tasklog\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      isRouterAlive: true,\r\n\r\n      dialogFormVisible: true,\r\n      dialogTitle: '项目全生命周期数字管理平台',\r\n      menuTitle: '流程审批',\r\n      detailRow: {},\r\n      taskInfo: {},\r\n      isUnEdit: false,\r\n      isHandleVisible: false,\r\n      isInfoVisible: false\r\n    }\r\n  },\r\n  computed: {\r\n    scrollerHeight: function () {\r\n      return window.innerHeight - 81 + 'px'\r\n    }\r\n  },\r\n  methods: {\r\n    onRefresh() {\r\n      setTimeout(() => {\r\n        this.isLoading = false\r\n        this.reload()\r\n      }, 1000)\r\n    },\r\n    reload() {\r\n      this.isRouterAlive = false\r\n      this.$nextTick(() => {\r\n        this.isRouterAlive = true\r\n      })\r\n    },\r\n    updateView() {\r\n      setTimeout(() => {\r\n        console.log(this.$refs['routerview'])\r\n        this.$refs['routerview'].getDetail(this.detailRow['id'])\r\n      }, 2000)\r\n    },\r\n    updateTaskHandle() {\r\n      setTimeout(() => {\r\n        this.$refs['taskhandle'] && this.$refs['taskhandle'].initData()\r\n      }, 100)\r\n    },\r\n    updateTaskLog() {\r\n      setTimeout(() => {\r\n        this.$refs['tasklog'].initData()\r\n      }, 100)\r\n    },\r\n    closeDialog() {\r\n      this.$router.go(-1)\r\n    }\r\n  },\r\n  mounted() {\r\n    var params = getQueryVariable()\r\n    if (params['businessKey']) {\r\n      this.detailRow = {\r\n        id: params['businessKey']\r\n      }\r\n      this.updateView()\r\n      if (params['processDefinitionId']) {\r\n        this.taskInfo = {\r\n          processDefinitionId: params['processDefinitionId'],\r\n          processInstanceId: params['processInstanceId'],\r\n          taskId: params['taskId'],\r\n          flowKey: params['processDefinitionKey'],\r\n          entryKey: params['taskKey']\r\n        }\r\n        if (params['taskId']) {\r\n          this.isHandleVisible = true\r\n          this.isUnEdit = true\r\n\r\n          this.updateTaskHandle();\r\n        }\r\n        this.updateTaskLog();\r\n        this.isInfoVisible = true\r\n      } else {\r\n        this.isUnEdit = false\r\n      }\r\n    } else {\r\n      this.isUnEdit = false\r\n    }\r\n    if (params['isHiddenEdit'] === 'true') {\r\n      this.isUnEdit = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.process {\r\n  height: 100%;\r\n  overflow: hidden;\r\n  .layout-content {\r\n    overflow-y: auto;\r\n  }\r\n}\r\n</style>"]}]}