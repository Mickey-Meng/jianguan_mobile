{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\approveuser.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\common\\approveuser.vue","mtime":1684246187911},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgJ0Avc3RhdGljRGljdC9mbG93U3RhdGljRGljdC5qcycNCmltcG9ydCAqIGFzIGFwaSBmcm9tICdAL2FwaS9xdWFsaXR5Jw0KaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiBbJ2F1ZGl0VXNlcicsICdmbG93S2V5JywgJ2NvcHlEYXRhJ10sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGZvcm1EYXRhOiB7fSwNCiAgICAgIGZsb3dOb2Rlc1VzZXJzRGF0YTogW10sDQogICAgICBhbGxEYXRhOiB7fSwNCg0KICAgICAgY3VycmVudFR5cGU6ICcnLA0KICAgICAgb3B0aW9uczogW10NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7fSwNCiAgY29tcHV0ZWQ6IHt9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZ2V0Rmxvd0F1ZGl0RW50cnkoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgZmxvd1VzZXJDaGFuZ2UoZGF0YSwgZGF0YTEpIHsNCiAgICAgIHRoaXMuYXVkaXRVc2VyW2RhdGExXSA9IGRhdGENCiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCkNCiAgICB9LA0KICAgIGZsb3dDb3B5VXNlckNoYW5nZShkYXRhLCBkYXRhMSkgew0KICAgICAgdGhpcy5jb3B5RGF0YVtkYXRhMV0gPSBkYXRhDQogICAgfSwNCiAgICBnZXRGbG93QXVkaXRFbnRyeSgpIHsNCiAgICAgIHRoaXMub3B0aW9ucyA9IFtdDQogICAgICBhcGkNCiAgICAgICAgLmdldEZsb3dBdWRpdEVudHJ5KHsNCiAgICAgICAgICBmbG93S2V5OiB0aGlzLmZsb3dLZXksDQogICAgICAgICAgYnVpbGRTZWN0aW9uOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmN1cnJlbnRCaWFvRHVhbi5pZCB8fCAzLA0KICAgICAgICAgIHByb2plY3RJZDogdGhpcy4kc3RvcmUuZ2V0dGVycy5jdXJQcm9qZWN0LmlkIHx8IDINCiAgICAgICAgfSkNCiAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICByZXMgPSByZXMuZGF0YSB8fCB7fQ0KICAgICAgICAgIHRoaXMuYWxsRGF0YSA9IHJlcw0KICAgICAgICAgIGxldCBpbmRleCA9IDANCiAgICAgICAgICBsZXQgY3VycmVudERhdGEgPSBbXQ0KICAgICAgICAgIGZvciAobGV0IGYgaW4gcmVzKSB7DQogICAgICAgICAgICBpZiAoaW5kZXggPT0gMCkgew0KICAgICAgICAgICAgICBjdXJyZW50RGF0YSA9IHJlc1tmXQ0KICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUeXBlID0gZg0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGYuaW5kZXhPZign6Zqn6YGTJykgPiAtMSkgew0KICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMucHVzaCh7DQogICAgICAgICAgICAgICAgbGFiZWw6ICfpmqfpgZMnLA0KICAgICAgICAgICAgICAgIHZhbHVlOiBmDQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoZi5pbmRleE9mKCfmoaXmooEnKSA+IC0xKSB7DQogICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5wdXNoKHsNCiAgICAgICAgICAgICAgICBsYWJlbDogJ+ahpeaigScsDQogICAgICAgICAgICAgICAgdmFsdWU6IGYNCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmIChmLmluZGV4T2YoJ+mBk+i3rycpID4gLTEpIHsNCiAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnB1c2goew0KICAgICAgICAgICAgICAgIGxhYmVsOiAn6YGT6LevJywNCiAgICAgICAgICAgICAgICB2YWx1ZTogZg0KICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGYuaW5kZXhPZign5YW25LuWJykgPiAtMSkgew0KICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMucHVzaCh7DQogICAgICAgICAgICAgICAgbGFiZWw6ICflhbbku5YnLA0KICAgICAgICAgICAgICAgIHZhbHVlOiBmDQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICBpbmRleCsrDQogICAgICAgICAgfQ0KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3VycmVudERhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBjdXJyZW50RGF0YVtpXQ0KICAgICAgICAgICAgaXRlbS51c2VySW5mbyA9IGl0ZW0udXNlckluZm8gfHwgW10NCiAgICAgICAgICAgIGlmIChjdXJyZW50RGF0YVtpXVsnaXNTaWduJ10pIHsNCiAgICAgICAgICAgICAgdGhpcy5hdWRpdFVzZXJbaXRlbS5lbnRyeVVzZXJWYXJpYWJsZV0gPSBpdGVtLnVzZXJJbmZvLm1hcCh2ID0+IHYudXNlcm5hbWUpDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICB0aGlzLmF1ZGl0VXNlcltpdGVtLmVudHJ5VXNlclZhcmlhYmxlXSA9IGl0ZW0udXNlckluZm8ubGVuZ3RoID4gMCA/IGl0ZW0udXNlckluZm9bMF1bJ3VzZXJuYW1lJ10gOiBbXQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgICB0aGlzLmF1ZGl0VXNlci5zdGFydFVzZXJOYW1lID0gZ2V0VG9rZW4oJ25hbWUnKQ0KICAgICAgICAgIHRoaXMuZmxvd05vZGVzVXNlcnNEYXRhID0gY3VycmVudERhdGENCiAgICAgICAgfSkNCiAgICB9LA0KICAgIGNoYW5nZU5vZGVVc2VyKCkgew0KICAgICAgbGV0IGZpZWxkID0gdGhpcy5jdXJyZW50VHlwZQ0KICAgICAgbGV0IGN1cnJlbnREYXRhID0gdGhpcy5hbGxEYXRhW2ZpZWxkXSB8fCBbXQ0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjdXJyZW50RGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICBjb25zdCBpdGVtID0gY3VycmVudERhdGFbaV0NCiAgICAgICAgaXRlbS51c2VySW5mbyA9IGl0ZW0udXNlckluZm8gfHwgW10NCiAgICAgICAgaWYgKGN1cnJlbnREYXRhW2ldWydpc1NpZ24nXSkgew0KICAgICAgICAgIHRoaXMuYXVkaXRVc2VyW2l0ZW0uZW50cnlVc2VyVmFyaWFibGVdID0gaXRlbS51c2VySW5mby5tYXAodiA9PiB2LnVzZXJuYW1lKQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuYXVkaXRVc2VyW2l0ZW0uZW50cnlVc2VyVmFyaWFibGVdID0gaXRlbS51c2VySW5mby5sZW5ndGggPiAwID8gaXRlbS51c2VySW5mb1swXVsndXNlcm5hbWUnXSA6IFtdDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHRoaXMuYXVkaXRVc2VyLnN0YXJ0VXNlck5hbWUgPSBnZXRUb2tlbignbmFtZScpDQogICAgICB0aGlzLmZsb3dOb2Rlc1VzZXJzRGF0YSA9IGN1cnJlbnREYXRhDQogICAgfSwNCiAgICB2YWxpZGF0ZSgpIHsNCiAgICAgIHRoaXMuJHJlZnNbJ3J1bGVmb3JtJ10udmFsaWRhdGUodmFsaWQgPT4ge30pDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["approveuser.vue"],"names":[],"mappings":";AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"approveuser.vue","sourceRoot":"src/views/common","sourcesContent":["<template>\r\n  <div>\r\n    <!-- <el-form ref=\"ruleform\" label-width=\"80px\" :rules=\"rules\" v-model=\"formData\"> -->\r\n    <div class=\"form-title\">\r\n      <div class=\"title-big-bar\"></div>\r\n      <strong>审批信息</strong>\r\n    </div>\r\n    <div class=\"form-block\">\r\n      <div class=\"form-block-title\">\r\n        <div class=\"title-bar\"></div>\r\n        <strong>待审批人</strong>\r\n      </div>\r\n      <div class=\"block-line\" v-if=\"options.length > 1\">\r\n        <div class=\"block-item\">\r\n          <div class=\"block-item-label\">类型<i class=\"require-icon\"></i></div>\r\n          <div class=\"block-item-value\">\r\n            <el-form-item :rules=\"[{ required: true, message: '必选', trigger: 'blur' }]\">\r\n              <el-select placeholder=\"请选择\" v-model=\"currentType\" @change=\"changeNodeUser()\">\r\n                <el-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"block-line\" v-for=\"(userOptions, _index) in flowNodesUsersData\" :key=\"_index\">\r\n        <div class=\"block-item\" v-if=\"userOptions.sort != 1\">\r\n          <div class=\"block-item-label\">{{ userOptions.entryName }}<i class=\"require-icon\"></i></div>\r\n          <div class=\"block-item-value\">\r\n            <el-form-item :rules=\"[{ required: true, message: '必选', trigger: 'blur' }]\">\r\n              <el-select\r\n                placeholder=\"请选择\"\r\n                :disabled=\"userOptions['isSign'] ? true : false\"\r\n                :multiple=\"userOptions['isSign'] ? true : false\"\r\n                v-model=\"auditUser[userOptions.entryUserVariable]\"\r\n                @change=\"flowUserChange($event, userOptions.entryUserVariable)\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, idx) in userOptions.userInfo\"\r\n                  :key=\"item.id + idx\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.username\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </div>\r\n        </div>\r\n        <div class=\"block-item\" v-if=\"userOptions.sort == 1 && userOptions.copyUserInfo\">\r\n          <div class=\"block-item-label\">抄送<i class=\"require-icon\"></i></div>\r\n          <div class=\"block-item-value\">\r\n            <el-form-item :rules=\"[{ required: true, message: '必选', trigger: 'blur' }]\">\r\n              <el-select\r\n                placeholder=\"请选择\"\r\n                :multiple=\"true\"\r\n                v-model=\"copyData['user']\"\r\n                @change=\"flowCopyUserChange($event, 'user')\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, idx) in userOptions.copyUserInfo\"\r\n                  :key=\"item.id + idx\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.username\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- </el-form> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/staticDict/flowStaticDict.js'\r\nimport * as api from '@/api/quality'\r\nimport { getToken } from '@/utils/auth'\r\nexport default {\r\n  props: ['auditUser', 'flowKey', 'copyData'],\r\n  data() {\r\n    return {\r\n      formData: {},\r\n      flowNodesUsersData: [],\r\n      allData: {},\r\n\r\n      currentType: '',\r\n      options: []\r\n    }\r\n  },\r\n  created() {},\r\n  computed: {},\r\n  mounted() {\r\n    this.getFlowAuditEntry()\r\n  },\r\n  methods: {\r\n    flowUserChange(data, data1) {\r\n      this.auditUser[data1] = data\r\n      this.$forceUpdate()\r\n    },\r\n    flowCopyUserChange(data, data1) {\r\n      this.copyData[data1] = data\r\n    },\r\n    getFlowAuditEntry() {\r\n      this.options = []\r\n      api\r\n        .getFlowAuditEntry({\r\n          flowKey: this.flowKey,\r\n          buildSection: this.$store.getters.currentBiaoDuan.id || 3,\r\n          projectId: this.$store.getters.curProject.id || 2\r\n        })\r\n        .then(res => {\r\n          res = res.data || {}\r\n          this.allData = res\r\n          let index = 0\r\n          let currentData = []\r\n          for (let f in res) {\r\n            if (index == 0) {\r\n              currentData = res[f]\r\n              this.currentType = f\r\n            }\r\n            if (f.indexOf('隧道') > -1) {\r\n              this.options.push({\r\n                label: '隧道',\r\n                value: f\r\n              })\r\n            }\r\n            if (f.indexOf('桥梁') > -1) {\r\n              this.options.push({\r\n                label: '桥梁',\r\n                value: f\r\n              })\r\n            }\r\n            if (f.indexOf('道路') > -1) {\r\n              this.options.push({\r\n                label: '道路',\r\n                value: f\r\n              })\r\n            }\r\n            if (f.indexOf('其他') > -1) {\r\n              this.options.push({\r\n                label: '其他',\r\n                value: f\r\n              })\r\n            }\r\n            index++\r\n          }\r\n          for (let i = 0; i < currentData.length; i++) {\r\n            const item = currentData[i]\r\n            item.userInfo = item.userInfo || []\r\n            if (currentData[i]['isSign']) {\r\n              this.auditUser[item.entryUserVariable] = item.userInfo.map(v => v.username)\r\n            } else {\r\n              this.auditUser[item.entryUserVariable] = item.userInfo.length > 0 ? item.userInfo[0]['username'] : []\r\n            }\r\n          }\r\n          this.auditUser.startUserName = getToken('name')\r\n          this.flowNodesUsersData = currentData\r\n        })\r\n    },\r\n    changeNodeUser() {\r\n      let field = this.currentType\r\n      let currentData = this.allData[field] || []\r\n      for (let i = 0; i < currentData.length; i++) {\r\n        const item = currentData[i]\r\n        item.userInfo = item.userInfo || []\r\n        if (currentData[i]['isSign']) {\r\n          this.auditUser[item.entryUserVariable] = item.userInfo.map(v => v.username)\r\n        } else {\r\n          this.auditUser[item.entryUserVariable] = item.userInfo.length > 0 ? item.userInfo[0]['username'] : []\r\n        }\r\n      }\r\n      this.auditUser.startUserName = getToken('name')\r\n      this.flowNodesUsersData = currentData\r\n    },\r\n    validate() {\r\n      this.$refs['ruleform'].validate(valid => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '../../assets/css/dialog.scss';\r\n</style>\r\n"]}]}