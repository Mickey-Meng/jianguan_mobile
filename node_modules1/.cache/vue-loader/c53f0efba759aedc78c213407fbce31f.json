{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\map\\LeafLetMap.vue?vue&type=style&index=0&id=7fb3fe02&lang=scss&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\map\\LeafLetMap.vue","mtime":1684246187884},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":1684411443176},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1684411446724},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":1684411443221},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1684411446938},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29udGFpbmVyIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICB3aWR0aDogMTAwJTsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAubWFwIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICB9DQp9DQoubGVhZmxldC1ib3R0b20gew0KICBib3R0b206IDgwcHggIWltcG9ydGFudDsNCn0NCi5sb2NhdGlvbi1iYXIgew0KICBib3R0b206IDgwcHggIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["LeafLetMap.vue"],"names":[],"mappings":";AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeafLetMap.vue","sourceRoot":"src/components/map","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div id=\"map\" class=\"map\"></div>\r\n    >\r\n  </div>\r\n</template>\r\n<script>\r\nimport { leafLetConfig } from '@/api/map.config.js'\r\nexport default {\r\n  data() {\r\n    return {\r\n      baseLayers: [],\r\n      layers: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initMap()\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      L.zlskmap.createMap({\r\n        id: 'map',\r\n        data: leafLetConfig.init,\r\n        success: (map, gis) => {\r\n          this.onMapSuccess(map)\r\n        }\r\n      })\r\n    },\r\n    onMapSuccess(map) {\r\n      window.leafLetMap = map\r\n      leafLetConfig.baseLayers.forEach(layer => {\r\n        this.getLayer(map, layer, true)\r\n      })\r\n      leafLetConfig.layers.forEach(layer => {\r\n        this.getLayer(map, layer, false)\r\n      })\r\n      map.on('click', function(ev) {\r\n        console.log(ev.latlng) // ev is an event object (MouseEvent in this case)\r\n      })\r\n    },\r\n    getLayer(map, params, isBase) {\r\n      let that = this\r\n      let { type, name, visible } = params\r\n      let layer = null\r\n      switch (type) {\r\n        case 'tile':\r\n        case 'www_tdt':\r\n          layer = L.zlskmap.layer.createLayer(params)\r\n          break\r\n        case 'wms':\r\n          params.crs = params.crs || L.CRS.EPSG4326\r\n          layer = L.tileLayer.wms(params.url, params)\r\n          break\r\n        case 'wfs':\r\n          layer = L.wfsLayer(params)\r\n          layer.on('click', function(e, data) {\r\n            let id = e.layer.feature.id\r\n            let name = e.layer.feature.properties.name\r\n            that.$router.push({ path: '/panorama', query: { name, id: id } })\r\n          })\r\n          break\r\n      }\r\n      if (layer.setZIndex) {\r\n        this.layerIndex++\r\n        layer.setZIndex(this.layerIndex)\r\n      }\r\n      isBase ? this.baseLayers.push({ params, layer }) : this.layers.push({ params, layer })\r\n      visible && layer.addTo(map)\r\n      return layer\r\n    },\r\n    gotoPoint(lng, lat, zoom, duration) {\r\n      leafLetMap.flyTo({ lng, lat }, zoom || 17, { duration: duration || 1.5 })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.container {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  .map {\r\n    height: 100%;\r\n    position: absolute;\r\n  }\r\n}\r\n.leaflet-bottom {\r\n  bottom: 80px !important;\r\n}\r\n.location-bar {\r\n  bottom: 80px !important;\r\n}\r\n</style>\r\n"]}]}