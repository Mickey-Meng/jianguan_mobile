{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\contract\\clockInAdd.vue?vue&type=style&index=0&id=23cc976a&lang=scss&scoped=true&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\contract\\clockInAdd.vue","mtime":1684246187997},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":1684411443176},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1684411446724},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":1684411443221},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1684411446938},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubWFwIHsNCiAgaGVpZ2h0OiAyMTBweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDsNCn0NCi5pbmZvIHsNCiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAyMTBweCk7DQogIG92ZXJmbG93OiBhdXRvOw0KICBwLnRpdGxlIHsNCiAgICBmb250LXNpemU6IDE0cHg7DQogICAgcGFkZGluZy1sZWZ0OiAxNXB4Ow0KICB9DQogIC5idG4tY29uIHsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsNCiAgICBwYWRkaW5nOiAxMHB4IDMwcHg7DQogICAgLnZhbi1idXR0b24tLW5vcm1hbCB7DQogICAgICBwYWRkaW5nOiAwcHggNDVweDsNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["clockInAdd.vue"],"names":[],"mappings":";AAsPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"clockInAdd.vue","sourceRoot":"src/views/project/contract","sourcesContent":["<template>\r\n  <div :style=\"{ height: scrollerHeight }\">\r\n    <div class=\"map\">\r\n      <leaf-let-map ref=\"leafLetMapRef\"></leaf-let-map>\r\n    </div>\r\n    <div class=\"info\">\r\n      <van-form @submit=\"onSubmit\" :v-model=\"clockData\">\r\n        <p class=\"title\">人员信息</p>\r\n        <van-cell-group inset>\r\n          <van-field v-model=\"clockData.projectName\" label=\"标段\" readonly />\r\n          <van-field v-model=\"clockData.attendancePersonName\" label=\"考勤人员\" readonly />\r\n          <van-field v-model=\"clockData.groupName\" label=\"所在部门\" readonly />\r\n          <div v-if=\"add\">\r\n            <van-field v-model=\"showTime\" label=\"日期时间\" readonly />\r\n            <van-field v-model=\"clockData.clockAddr\" label=\"打卡位置\" readonly rows=\"2\" type=\"textarea\">\r\n              <template #right-icon>\r\n                <van-icon name=\"location-o\" @click=\"getLocation\" />\r\n              </template>\r\n            </van-field>\r\n          </div>\r\n          <div v-else>\r\n            <van-field v-model=\"showTime\" label=\"打卡时间\" readonly />\r\n            <van-field v-model=\"clockData.clockAddr\" label=\"打卡位置\" readonly rows=\"2\" type=\"textarea\" />\r\n            <!-- <van-field v-model=\"showEndTime\" label=\"下班打卡时间\" readonly />\r\n            <van-field v-model=\"clockData.clockEndAddr\" label=\"下班打卡位置\" readonly rows=\"2\" type=\"textarea\" /> -->\r\n          </div>\r\n        </van-cell-group>\r\n        <p class=\"title\">签到拍照</p>\r\n        <van-cell-group inset v-if=\"add\">\r\n          <upload\r\n            label=\"上传照片\"\r\n            :name=\"picFiled\"\r\n            :rules=\"[{ required: true, message: '请选择照片' }]\"\r\n            :fileList=\"fList\"\r\n            :editable=\"add\"\r\n          ></upload>\r\n        </van-cell-group>\r\n        <van-cell-group inset v-else>\r\n          <upload\r\n            label=\"打卡照片\"\r\n            :name=\"picFiled\"\r\n            :rules=\"[{ required: true, message: '请选择照片' }]\"\r\n            :fileList=\"fList\"\r\n            :editable=\"false\"\r\n          ></upload>\r\n          <!-- <upload\r\n            label=\"下班打卡照片\"\r\n            :name=\"picFiled\"\r\n            :rules=\"[{ required: true, message: '请选择照片' }]\"\r\n            :fileList=\"fEndList\"\r\n            :editable=\"false\"\r\n          ></upload> -->\r\n        </van-cell-group>\r\n        <div class=\"btn-con\">\r\n          <!-- <van-button type=\"default\" @click=\"cancel\">取消</van-button> -->\r\n          <van-button type=\"primary\" v-if=\"add\">提交</van-button>\r\n        </div>\r\n      </van-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { mapGetters } from 'vuex'\r\nimport { getNowDate } from '@/utils/date.js'\r\nimport { locationUtil } from '@/utils/locationUtil.js'\r\nimport Upload from '@/components/common/Upload'\r\nimport LeafLetMap from '@/components/map/LeafLetMap.vue'\r\nimport { getFence, subClockIn } from '@/api/project'\r\nimport { formatImgUrl } from '@/utils/index'\r\nimport * as turf from '@turf/turf'\r\nimport { reverse_geocoding } from '@/api/bdMap.js'\r\nexport default {\r\n  components: {\r\n    Upload,\r\n    LeafLetMap\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userinfo', 'currentBiaoDuan']),\r\n    scrollerHeight: function() {\r\n      return window.innerHeight - 85 + 'px'\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      picFiled: 'clockPic',\r\n      clockData: {},\r\n      showTime: '',\r\n      showEndTime: '',\r\n      curLocation: [],\r\n      curPolygonCoor: [],\r\n      fences: [],\r\n      add: true,\r\n      fList: [],\r\n      // fEndList: [],\r\n      formatImgUrl,\r\n      lastLocationMarker: null\r\n    }\r\n  },\r\n  created() {\r\n    if (JSON.stringify(this.$route.params) != '{}') {\r\n      this.fList = this.formatImgUrl(this.$route.params.clockPic)\r\n      // this.fEndList = this.formatImgUrl(this.$route.params.clockEndPic)\r\n    }\r\n  },\r\n  mounted() {\r\n    if (JSON.stringify(this.$route.params) != '{}') {\r\n      this.add = false\r\n      this.clockData = Object.assign({}, this.$route.params)\r\n      this.showTime = this.$route.params.clockTime\r\n        ? this.$route.params.clockTime.substring(0, 19).replace('T', ' ')\r\n        : ''\r\n      // this.showEndTime = this.$route.params.clockEndTime\r\n      //   ? this.$route.params.clockEndTime.substring(0, 19).replace('T', ' ')\r\n      //   : ''\r\n      this.mapEcho()\r\n    } else {\r\n      this.add = true\r\n      this.showTime = getNowDate()\r\n      let nowTime = this.moment()\r\n        .utc()\r\n        .toISOString()\r\n      this.$set(this.clockData, 'clockTime', nowTime)\r\n      this.$set(this.clockData, 'attendancePersonId', this.userinfo.id)\r\n      this.$set(this.clockData, 'attendancePersonName', this.userinfo.name)\r\n      this.$set(this.clockData, 'groupId', this.userinfo.groupid)\r\n      this.$set(this.clockData, 'groupName', this.userinfo.groupname)\r\n      this.$set(this.clockData, 'projectId', this.currentBiaoDuan.id)\r\n      this.$set(this.clockData, 'projectName', this.currentBiaoDuan.name)\r\n      this.getLocation()\r\n      this.getFence()\r\n    }\r\n  },\r\n  methods: {\r\n    getLocation() {\r\n      locationUtil.getCurrentLocation().then(location => {\r\n        if (!location) {\r\n          return\r\n        }\r\n        this.$set(this.clockData, 'clockAddr', location?.address)\r\n        this.$set(this.clockData, 'clockCoordinate', `${location?.lon},${location?.lat}`)\r\n        if (this.lastLocationMarker) {\r\n          leafLetMap.removeLayer(this.lastLocationMarker)\r\n        }\r\n        this.lastLocationMarker = L.marker([location?.lat, location?.lon])\r\n        leafLetMap.addLayer(this.lastLocationMarker)\r\n        this.$refs.leafLetMapRef.gotoPoint(location?.lon, location?.lat)\r\n        this.curLocation = [location?.lon, location?.lat]\r\n      })\r\n      //测试打卡\r\n      // let location = {\r\n      //   address: '测试地址',\r\n      //   lon: 120.15890473840167,\r\n      //   lat: 29.903062084639853\r\n      // }\r\n      // this.$set(this.clockData, 'clockAddr', location?.address)\r\n      // this.$set(this.clockData, 'clockCoordinate', `${location?.lon},${location?.lat}`)\r\n      // if (this.lastLocationMarker) {\r\n      //   leafLetMap.removeLayer(this.lastLocationMarker)\r\n      // }\r\n      // this.lastLocationMarker = L.marker([location?.lat, location?.lon])\r\n      // leafLetMap.addLayer(this.lastLocationMarker)\r\n      // this.$refs.leafLetMapRef.gotoPoint(location?.lon, location?.lat)\r\n      // this.curLocation = [location?.lon, location?.lat]\r\n    },\r\n    onSubmit(values) {\r\n      let clockFence = this.getClockFence()\r\n      if (!clockFence) {\r\n        return this.$notify({ type: 'warning', message: '您的当前位置不在打卡区域内，无法打卡！' })\r\n      }\r\n      console.log(clockFence)\r\n      let temp = []\r\n      values[this.picFiled].forEach(item => {\r\n        item.url && temp.push(item.url)\r\n      })\r\n      if (values[this.picFiled].length !== temp.length) {\r\n        return this.$notify({ type: 'warning', message: '请上传照片或等待照片上传完成！' })\r\n      }\r\n      let formData = JSON.parse(JSON.stringify(this.clockData))\r\n      formData[this.picFiled] = temp.join(',')\r\n      //  if (!ifinner) {\r\n      //   return this.$notify({ type: 'warning', message: '您的当前位置不在打卡区域内，无法打卡！' })\r\n      // }\r\n      formData.gid = clockFence.id\r\n      subClockIn(formData).then(res => {\r\n        this.$router.go(-1)\r\n      })\r\n    },\r\n    getClockFence() {\r\n      // this.curLocation = [120.15890473840167, 29.903062084639853]\r\n      let pt = turf.point(this.curLocation)\r\n      for (let index = 0; index < this.fences.length; index++) {\r\n        let tempPolygon = []\r\n        let curPolygonCoor = JSON.parse(this.fences[index].coordinate)\r\n        curPolygonCoor.forEach(point => {\r\n          tempPolygon.push([point[1], point[0]])\r\n        })\r\n        let poly = turf.polygon([tempPolygon])\r\n        let ifinner = turf.booleanPointInPolygon(pt, poly)\r\n        if (ifinner) {\r\n          return this.fences[index]\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    cancel() {\r\n      this.$router.go(-1)\r\n    },\r\n    // 电子围栏\r\n    getFence(prjId, fenceId) {\r\n      let param = { projectId: this.currentBiaoDuan.id }\r\n      if (!this.add) {\r\n        param = { projectId: prjId }\r\n        if (fenceId) {\r\n          param.fenceId = fenceId\r\n        }\r\n      }\r\n      getFence(param).then(res => {\r\n        res.forEach(item => {\r\n          this.createFence(JSON.parse(item.coordinate))\r\n        })\r\n        this.fences = res || []\r\n      })\r\n    },\r\n    createFence(latlngs) {\r\n      var polygon = L.polygon(latlngs, { color: 'green' }).addTo(leafLetMap)\r\n      // leafLetMap.fitBounds(polygon.getBounds())\r\n    },\r\n    // 地图回显\r\n    mapEcho() {\r\n      let location = this.$route.params.clockCoordinate.split(',')\r\n      L.marker([location[1], location[0]]).addTo(leafLetMap)\r\n      // let locationEnd = this.$route.params.clockEndCoordinate ? this.$route.params.clockEndCoordinate.split(',') : ''\r\n      // if (locationEnd) {\r\n      //   L.marker([locationEnd[1], locationEnd[0]]).addTo(leafLetMap)\r\n      // }\r\n      this.$refs.leafLetMapRef.gotoPoint(location[0], location[1])\r\n      this.getFence(this.$route.params.projectId, this.$route.params.gid)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.map {\r\n  height: 210px;\r\n  background-color: #ddd;\r\n}\r\n.info {\r\n  height: calc(100% - 210px);\r\n  overflow: auto;\r\n  p.title {\r\n    font-size: 14px;\r\n    padding-left: 15px;\r\n  }\r\n  .btn-con {\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 10px 30px;\r\n    .van-button--normal {\r\n      padding: 0px 45px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}