{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\router\\router.project.js","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\router\\router.project.js","mtime":1684246187895},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\babel.config.js","mtime":1684246187306},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1684411445099},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwovKioNCiAqIOWfuuehgOi3r+eUsQ0KICogQHR5cGUgeyAqW10gfQ0KICovCmV4cG9ydCB2YXIgY29uc3RhbnRSb3V0ZXJNYXAgPSBbewogIHBhdGg6ICcvbG9naW4nLAogIG5hbWU6ICdsb2dpbicsCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2xvZ2luL2luZGV4Jyk7CiAgfQp9LCB7CiAgcGF0aDogJy9wcm9qZWN0T3ZlcnZpZXcnLAogIG5hbWU6ICdwcm9qZWN0T3ZlcnZpZXcnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9vdmVyVmlldy9pbmRleCcpOwogIH0KfSwgewogIHBhdGg6ICcvb3ZlclZpZXdNYXAnLAogIG5hbWU6ICdvdmVyVmlld01hcCcsCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL292ZXJWaWV3TWFwL2luZGV4Jyk7CiAgfQp9LCB7CiAgcGF0aDogJy9wZXJzb25NYXAnLAogIG5hbWU6ICdwZXJzb25NYXAnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9vdmVyVmlld01hcC9wZXJzb25NYXAudnVlJyk7CiAgfQp9LCB7CiAgcGF0aDogJy8nLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L2luZGV4Jyk7CiAgfSwKICBuYW1lOiAnaG9tZScsCiAgcmVkaXJlY3Q6ICcvY2VudGVyJywKICBtZXRhOiB7CiAgICB0aXRsZTogJ+mmlumhtScsCiAgICBrZWVwQWxpdmU6IHRydWUKICB9LAogIGNoaWxkcmVuOiBbewogICAgcGF0aDogJy9jZW50ZXInLAogICAgbmFtZTogJ2NlbnRlcicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L2NlbnRlci9pbmRleCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfmlbDmja7kuK3lv4MnLAogICAgICBrZWVwQWxpdmU6IHRydWUKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL21lbnUnLAogICAgbmFtZTogJ21lbnUnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9tZW51Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+iPnOWNlScsCiAgICAgIGtlZXBBbGl2ZTogdHJ1ZQogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvc3lzdGVtJywKICAgIG5hbWU6ICdzeXN0ZW0nLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3Mvc3lzdGVtL2luZGV4Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ezu+e7n+iuvue9ricsCiAgICAgIGtlZXBBbGl2ZTogdHJ1ZQogICAgfQogIH1dCn0sIHsKICBwYXRoOiAnL2NvbW1vbicsCiAgLy/luKbmnInlhazlhbHlpLTpg6jvvIjlt6bnrq3lpLTov5Tlm54rdGl0bGXvvIkgIOS7peWPiuS4i+aLieWIt+aWsAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb21tb24vaW5kZXgnKTsKICB9LAogIG5hbWU6ICdjb21tb24nLAogIGNoaWxkcmVuOiBbewogICAgcGF0aDogJy9wcm9jZXNzRmlsbGluZycsCiAgICBuYW1lOiAncHJvY2Vzc0ZpbGxpbmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L3Byb2Nlc3NGaWxsaW5nJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W3peW6j+Whq+aKpScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3Byb2Nlc3NMaXN0JywKICAgIG5hbWU6ICdwcm9jZXNzTGlzdCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvcHJvY2Vzc0xpc3QnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5bel5bqP6YCJ5oupJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcHJvZHVjZVJlY29yZCcsCiAgICBuYW1lOiAncHJvZHVjZVJlY29yZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvcHJvZHVjZVJlY29yZCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflt6Xluo/miqXpqownCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9yZWNvcmQnLAogICAgbmFtZTogJ3JlY29yZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvcmVjb3JkJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+i0qOmHj+iusOW9lScsCiAgICAgIGtlZXBBbGl2ZTogZmFsc2UKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2NoZWNrJywKICAgIG5hbWU6ICdjaGVjaycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvY2hlY2snKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6LSo6YeP5qOA5p+lJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvbW9kaWZ5JywKICAgIG5hbWU6ICdtb2RpZnknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L21vZGlmeScpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfotKjph4/mlbTmlLknCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9kZWxheVZlcmlmeScsCiAgICBuYW1lOiAnZGVsYXlWZXJpZnknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L2RlbGF5VmVyaWZ5Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W7tuacn+WuoeaguCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3ZlcmlmeScsCiAgICBuYW1lOiAndmVyaWZ5JywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS92ZXJpZnknKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pW05pS556Gu6K6kJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvZGVhbCcsCiAgICBuYW1lOiAnZGVhbCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvZGVhbCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfotKjph4/mlbTmlLnlpITnkIYnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9kZXRhaWwnLAogICAgbmFtZTogJ2RldGFpbCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvZGV0YWlsJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+i0qOmHj+ajgOafpeivpuaDhScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3Byb2Nlc3NSZXBvcnQnLAogICAgbmFtZTogJ3Byb2Nlc3NSZXBvcnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L3Byb2Nlc3NSZXBvcnQnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5bel5bqP5LiK5oqlJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcHJvY2Vzc1JlcG9ydERldGFpbCcsCiAgICBuYW1lOiAncHJvY2Vzc1JlcG9ydERldGFpbCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvcHJvY2Vzc1JlcG9ydERldGFpbCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflt6Xluo/kuIrmiqXor6bmg4UnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9wcm9jZXNzRmlsbGluZ1JlY29yZCcsCiAgICBuYW1lOiAncHJvY2Vzc0ZpbGxpbmdSZWNvcmQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L3Byb2Nlc3NGaWxsaW5nUmVjb3JkJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+Whq+aKpeiusOW9lScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3Byb2Nlc3NDaGVja2luZycsCiAgICBuYW1lOiAncHJvY2Vzc0NoZWNraW5nJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9wcm9jZXNzQ2hlY2tpbmcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5bel5bqP6Ieq5qOAJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcHJvY2Vzc0luc3BlY3Rpb24nLAogICAgbmFtZTogJ3Byb2Nlc3NJbnNwZWN0aW9uJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9wcm9jZXNzSW5zcGVjdGlvbicpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflt6Xluo/miqXpqownCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9wcm9jZXNzQXVkaXQnLAogICAgbmFtZTogJ3Byb2Nlc3NBdWRpdCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvcHJvY2Vzc0F1ZGl0Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W3peW6j+WuoeaguCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3Byb2Nlc3NBdWRpdFJlY29yZCcsCiAgICBuYW1lOiAncHJvY2Vzc0F1ZGl0UmVjb3JkJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9wcm9jZXNzQXVkaXRSZWNvcmQnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5a6h5qC46K6w5b2VJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcHJvY2Vzc0F1ZGl0UmVwb3J0JywKICAgIG5hbWU6ICdwcm9jZXNzQXVkaXRSZXBvcnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L3Byb2Nlc3NBdWRpdFJlcG9ydCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflt6Xluo/lrqHmoLjor6bmg4UnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jb25zdHJ1Y3Rpb25UZWNobm9sb2d5RGlzY2xvc3VyZScsCiAgICBuYW1lOiAnY29uc3RydWN0aW9uVGVjaG5vbG9neURpc2Nsb3N1cmUnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvY29uc3RydWN0aW9uVGVjaG5vbG9neURpc2Nsb3N1cmUnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pa95bel5oqA5pyv5Lqk5bqVJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvY29uY2VhbGVkV29ya3NNYW5hZ2VtZW50JywKICAgIG5hbWU6ICdjb25jZWFsZWRXb3Jrc01hbmFnZW1lbnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvY29uY2VhbGVkV29ya3NNYW5hZ2VtZW50Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+makOiUveW3peeoi+euoeeQhicKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2NvbnN0cnVjdGlvblNjaGVtZScsCiAgICBuYW1lOiAnY29uc3RydWN0aW9uU2NoZW1lJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL2NvbnN0cnVjdGlvblNjaGVtZScpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfmlr3lt6XmlrnmoYgnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jb25zdHJ1Y3Rpb25TdWJjb250cmFjdCcsCiAgICBuYW1lOiAnY29uc3RydWN0aW9uU3ViY29udHJhY3QnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2NvbnN0cnVjdGlvblN1YmNvbnRyYWN0Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+aWveW3peWIhuWMheWQiOWQjCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2xhYm9yU3ViY29udHJhY3QnLAogICAgbmFtZTogJ2xhYm9yU3ViY29udHJhY3QnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2xhYm9yU3ViY29udHJhY3QnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5Yqz5Yqh5YiG5YyF5ZCI5ZCMJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvZW50cmFuY2VBbmRFeGl0TWFuYWdlbWVudCcsCiAgICBuYW1lOiAnZW50cmFuY2VBbmRFeGl0TWFuYWdlbWVudCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvZW50cmFuY2VBbmRFeGl0TWFuYWdlbWVudCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfkurrlkZjov5vpgIDlnLrnrqHnkIYnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9lcXVpcG1lbnRFbnRyeUZvckluc3BlY3Rpb24nLAogICAgbmFtZTogJ2VxdWlwbWVudEVudHJ5Rm9ySW5zcGVjdGlvbicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvZXF1aXBtZW50RW50cnlGb3JJbnNwZWN0aW9uJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+iuvuWkh+i/m+WcuuaKpemqjCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2VxdWlwbWVudEV4aXRGb3JJbnNwZWN0aW9uJywKICAgIG5hbWU6ICdlcXVpcG1lbnRFeGl0Rm9ySW5zcGVjdGlvbicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvZXF1aXBtZW50RXhpdEZvckluc3BlY3Rpb24nKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6K6+5aSH6YCA5Zy65oql6aqMJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcHJvamVjdENvbW1lbmNlbWVudEFwcGxpY2F0aW9uJywKICAgIG5hbWU6ICdwcm9qZWN0Q29tbWVuY2VtZW50QXBwbGljYXRpb24nLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvcHJvamVjdENvbW1lbmNlbWVudEFwcGxpY2F0aW9uJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+mhueebruW8gOW3peeUs+ivtycKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3NlcGFyYXRlQXBwbGljYXRpb25Gb3JDb21tZW5jZW1lbnQnLAogICAgbmFtZTogJ3NlcGFyYXRlQXBwbGljYXRpb25Gb3JDb21tZW5jZW1lbnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2Uvc2VwYXJhdGVBcHBsaWNhdGlvbkZvckNvbW1lbmNlbWVudCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfliIbpobnlvIDlt6XnlLPor7cnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9maXJzdFByb2Nlc3NBcHByb3ZhbCcsCiAgICBuYW1lOiAnZmlyc3RQcm9jZXNzQXBwcm92YWwnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvZmlyc3RQcm9jZXNzQXBwcm92YWwnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6aaW5Lu26K6k5Y+vJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcXVhbGl0eVByZXNlbnRhdGlvbicsCiAgICBuYW1lOiAncXVhbGl0eVByZXNlbnRhdGlvbicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvbmV3UGFnZS9xdWFsaXR5UHJlc2VudGF0aW9uJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+i0qOmHj+eugOaKpScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3N1cGVydmlzaW9uU3RhdGlvbicsCiAgICBuYW1lOiAnc3VwZXJ2aXNpb25TdGF0aW9uJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3N1cGVydmlzaW9uU3RhdGlvbicpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfnm5HnkIbml4Hnq5knCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9zdXBlcnZpc2lvblBhdHJvbCcsCiAgICBuYW1lOiAnc3VwZXJ2aXNpb25QYXRyb2wnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2Uvc3VwZXJ2aXNpb25QYXRyb2wnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn55uR55CG5beh6KeGJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvc3VwZXJ2aXNpb25PZkluc3RydWN0aW9uJywKICAgIG5hbWU6ICdzdXBlcnZpc2lvbk9mSW5zdHJ1Y3Rpb24nLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2Uvc3VwZXJ2aXNpb25PZkluc3RydWN0aW9uJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ebkeeQhuaMh+S7pCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3N1cGVydmlzaW9uTm90aWNlJywKICAgIG5hbWU6ICdzdXBlcnZpc2lvbk5vdGljZScsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvbmV3UGFnZS9zdXBlcnZpc2lvbk5vdGljZScpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfnm5HnkIbpgJrnn6UnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9xdWFsaXR5VGVzdCcsCiAgICBuYW1lOiAncXVhbGl0eVRlc3QnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvcXVhbGl0eVRlc3QnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6LSo6YeP5qOA5rWLJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvcXVhbGl0eUFjdGl2aXR5JywKICAgIG5hbWU6ICdxdWFsaXR5QWN0aXZpdHknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvcXVhbGl0eUFjdGl2aXR5Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+i0qOmHj+a0u+WKqCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL21hbmFnZWRPYmplY3QnLAogICAgbmFtZTogJ21hbmFnZWRPYmplY3QnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvbWFuYWdlZE9iamVjdCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfnrqHnkIbnm67moIcnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9tYW5hZ2VtZW50U3lzdGVtJywKICAgIG5hbWU6ICdtYW5hZ2VtZW50U3lzdGVtJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL21hbmFnZW1lbnRTeXN0ZW0nKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn566h55CG5Yi25bqmJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvY3VycmVudEFjY291bnRNYW5hZ2VtZW50JywKICAgIG5hbWU6ICdjdXJyZW50QWNjb3VudE1hbmFnZW1lbnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2N1cnJlbnRBY2NvdW50TWFuYWdlbWVudCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflvoDmnaXmrL7nrqHnkIYnCiAgICB9CiAgfSwKICAvLyDmiJHnmoTku7vliqEKICB7CiAgICBwYXRoOiAnL2FnZW5jeXRhc2snLAogICAgbmFtZTogJ2FnZW5jeXRhc2snLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvdGFzay9hZ2VuY3l0YXNrJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W+heWKnuS7u+WKoScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2NvcHl0YXNrJywKICAgIG5hbWU6ICdjb3B5dGFzaycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy90YXNrL2NvcHl0YXNrJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+aKhOmAgeWIl+ihqCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2NvbXBsZXRlZHRhc2tzJywKICAgIG5hbWU6ICdjb21wbGV0ZWR0YXNrcycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy90YXNrL2NvbXBsZXRlZHRhc2tzJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W3suWKnuS7u+WKoScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2hpc3RvcmljYWx0YXNrJywKICAgIG5hbWU6ICdoaXN0b3JpY2FsdGFzaycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy90YXNrL2hpc3RvcmljYWx0YXNrJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+WOhuWPsuS7u+WKoScKICAgIH0KICB9LAogIC8v5a6J5YWoCiAgewogICAgcGF0aDogJy9zZWN1cml0eVJlY29yZCcsCiAgICBuYW1lOiAnc2VjdXJpdHlSZWNvcmQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9zZWN1cml0eS9yZWNvcmQnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5a6J5YWo6K6w5b2VJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvc2VjdXJpdHlSZXBvcnQnLAogICAgbmFtZTogJ3NlY3VyaXR5UmVwb3J0JywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3Qvc2VjdXJpdHkvcmVwb3J0Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+WuieWFqOajgOafpScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3NlY3VyaXR5UmVwb3J0UmVjb3JkJywKICAgIG5hbWU6ICdzZWN1cml0eVJlcG9ydFJlY29yZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3NlY3VyaXR5L3JlcG9ydFJlY29yZCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflronlhajmlbTmlLknCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9zZWN1cml0eVJlcG9ydERlYWwnLAogICAgbmFtZTogJ3NlY3VyaXR5UmVwb3J0RGVhbCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3NlY3VyaXR5L3JlcG9ydERlYWwnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pW05pS55aSE55CGJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvc2VjdXJpdHlEZWxheVJlY29yZCcsCiAgICBuYW1lOiAnc2VjdXJpdHlEZWxheVJlY29yZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3NlY3VyaXR5L2RlbGF5UmVjb3JkJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+W7tuacn+WuoeaguCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3NlY3VyaXR5RGVhbFJlY29yZCcsCiAgICBuYW1lOiAnc2VjdXJpdHlEZWFsUmVjb3JkJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3Qvc2VjdXJpdHkvZGVhbFJlY29yZCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfmlbTmlLnnoa7orqQnCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9zZWN1cml0eURvbmVSZWNvcmQnLAogICAgbmFtZTogJ3NlY3VyaXR5RG9uZVJlY29yZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3NlY3VyaXR5L2RvbmVSZWNvcmQnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pW05pS55a6M5oiQJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvc2VjdXJpdHlEZXRhaWwnLAogICAgbmFtZTogJ3NlY3VyaXR5RGV0YWlsJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3Qvc2VjdXJpdHkvZGV0YWlsJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+WuieWFqOajgOafpeivpuaDhScKICAgIH0KICB9LAogIC8v6L+b5bqmCiAgewogICAgcGF0aDogJy9jaGVkdWxlRmlsbGluZycsCiAgICBuYW1lOiAnY2hlZHVsZUZpbGxpbmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jaGVkdWxlL2NoZWR1bGVGaWxsaW5nJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+iuoeWIkuWhq+aKpScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3dlYXRoZXJEZXRhaWwnLAogICAgbmFtZTogJ3dlYXRoZXJEZXRhaWwnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29tbW9uL3dlYXRoZXJEZXRhaWwnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5aSp5rCU6aKE5oqlJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvb3ZlcnZpZXcnLAogICAgbmFtZTogJ292ZXJ2aWV3JywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2NlbnRlci9vdmVydmlldy9pbmRleCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfpobnnm67mpoLop4gnLAogICAgICBrZWVwQWxpdmU6IGZhbHNlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9uZXdzJywKICAgIG5hbWU6ICduZXdzJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2NlbnRlci9uZXdzL2luZGV4Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+aWsOmXu+WKqOaAgScsCiAgICAgIGtlZXBBbGl2ZTogZmFsc2UKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2JpbScsCiAgICBuYW1lOiAnYmltJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2NlbnRlci9iaW0vaW5kZXgnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAnQklN5Lit5b+DJywKICAgICAga2VlcEFsaXZlOiBmYWxzZQogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvbW9uaXRvcicsCiAgICBuYW1lOiAnbW9uaXRvcicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jZW50ZXIvbW9uaXRvci9pbmRleCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfnm5HmjqfkuK3lv4MnLAogICAgICBrZWVwQWxpdmU6IGZhbHNlCiAgICB9CiAgfSwKICAvLyDlkIjlkIznrqHnkIYKICB7CiAgICBwYXRoOiAnL2Nsb2NrSW5BZGQnLAogICAgbmFtZTogJ2Nsb2NrSW5BZGQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC9jbG9ja0luQWRkJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+aWsOWinuaJk+WNoScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3NlYXJjaFBhZ2UnLAogICAgbmFtZTogJ3NlYXJjaFBhZ2UnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC9zZWFyY2hQYWdlJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+etm+mAieadoeS7ticKICAgIH0KICB9LAogIC8vIOS6uuWRmOWPmOabtAogIHsKICAgIHBhdGg6ICcvcGVyc29ubmVsQ2hhbmdlQWRkJywKICAgIG5hbWU6ICdwZXJzb25uZWxDaGFuZ2VBZGQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC9wZXJzb25uZWxDaGFuZ2VBZGQnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5Lq65ZGY5Y+Y5pu0JwogICAgfQogIH0sCiAgLy8g6K+35LyR5YGHCiAgewogICAgcGF0aDogJy90YWtlVmFjYXRpb25BZGQnLAogICAgbmFtZTogJ3Rha2VWYWNhdGlvbkFkZCcsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L2NvbnRyYWN0L3Rha2VWYWNhdGlvbkFkZCcpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfor7fkvJHlgYcnCiAgICB9CiAgfSwKICAvLyDkurrlkZjlj7DotKYKICB7CiAgICBwYXRoOiAnL3BlcnNvbm5lbEFjY291bnQnLAogICAgbmFtZTogJ3BlcnNvbm5lbEFjY291bnQnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC9wZXJzb25uZWxBY2NvdW50Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+S6uuWRmOWPsOi0picKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3BlcnNvbm5lbEFjY291bnRJbmZvJywKICAgIG5hbWU6ICdwZXJzb25uZWxBY2NvdW50SW5mbycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L2NvbnRyYWN0L3BlcnNvbm5lbEFjY291bnRJbmZvJyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+S6uuWRmOWPsOi0puivpuaDhScKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3JlcG9ydCcsCiAgICBuYW1lOiAncmVwb3J0JywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL2NvbXBvbmVudHMvUmVwb3J0Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+WIhumhueaKpeihqCcKICAgIH0KICB9CiAgLy8gewogIC8vICAgcGF0aDogJy9vdmVyVmlld01hcCcsCiAgLy8gICBuYW1lOiAnb3ZlclZpZXdNYXAnLAogIC8vICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJ0Avdmlld3Mvb3ZlclZpZXdNYXAvaW5kZXgnKSwKICAvLyAgIG1ldGE6IHsgdGl0bGU6ICfpobnnm67mgLvop4gnIH0KICAvLyB9CiAgXQp9LAovLyDlkIjlkIznrqHnkIYKewogIHBhdGg6ICcvY2xvY2tJbicsCiAgbmFtZTogJ2Nsb2NrSW4nLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L2NvbnRyYWN0L2Nsb2NrSW4nKTsKICB9LAogIG1ldGE6IHsKICAgIHRpdGxlOiAn6ICD5Yuk5omT5Y2hJywKICAgIGtlZXBBbGl2ZTogZmFsc2UKICB9Cn0sIHsKICBwYXRoOiAnL2hhbmRsZXJGbG93VGFzaycsCiAgbmFtZTogJ2hhbmRsZXJGbG93VGFzaycsCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Rhc2svaGFuZGxlckZsb3dUYXNrL2luZGV4Jyk7CiAgfSwKICBjaGlsZHJlbjogW3sKICAgIC8vIOaWveW3peaKgOacr+S6pOW6lQogICAgcGF0aDogJy9jb25zdHJ1Y3Rpb25UZWNobm9sb2d5RGlzY2xvc3VyZV9kZXRhaWwnLAogICAgbmFtZTogJ2NvbnN0cnVjdGlvblRlY2hub2xvZ3lEaXNjbG9zdXJlX2RldGFpbCcsCiAgICBjb2RlOiAnc2hpZ29uZ2ppc2h1amlhb2RpJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL2NvbnN0cnVjdGlvblRlY2hub2xvZ3lEaXNjbG9zdXJlL3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pa95bel5oqA5pyv5Lqk5bqVJwogICAgfQogIH0sIHsKICAgIC8vIOmakOiUveW3peeoi+euoeeQhgogICAgcGF0aDogJy9jb25jZWFsZWRXb3Jrc01hbmFnZW1lbnRfZGV0YWlsJywKICAgIG5hbWU6ICdjb25jZWFsZWRXb3Jrc01hbmFnZW1lbnRfZGV0YWlsJywKICAgIGNvZGU6ICd5aW5iaWdvbmdjaGVuZ2d1YW5saScsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvbmV3UGFnZS9jb25jZWFsZWRXb3Jrc01hbmFnZW1lbnQvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfpmpDolL3lt6XnqIvnrqHnkIYnCiAgICB9CiAgfSwgewogICAgLy8g5pa95bel5pa55qGICiAgICBwYXRoOiAnL2NvbnN0cnVjdGlvblNjaGVtZV9kZXRhaWwnLAogICAgbmFtZTogJ2NvbnN0cnVjdGlvblNjaGVtZV9kZXRhaWwnLAogICAgY29kZTogJ3NoaWdvbmdmYW5nYW4nLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvY29uc3RydWN0aW9uU2NoZW1lL3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn5pa95bel5pa55qGIJwogICAgfQogIH0sIHsKICAgIC8vIOaWveW3peWIhuWMheWQiOWQjAogICAgcGF0aDogJy9jb25zdHJ1Y3Rpb25TdWJjb250cmFjdF9kZXRhaWwnLAogICAgbmFtZTogJ2NvbnN0cnVjdGlvblN1YmNvbnRyYWN0X2RldGFpbCcsCiAgICBjb2RlOiAnc2hpZ29uZ2ZlbmJhb2hldG9uZycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvY29uc3RydWN0aW9uU3ViY29udHJhY3QvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfmlr3lt6XliIbljIXlkIjlkIwnCiAgICB9CiAgfSwgewogICAgLy8g5Yqz5Yqh5YiG5YyF5ZCI5ZCMCiAgICBwYXRoOiAnL2xhYm9yU3ViY29udHJhY3RfZGV0YWlsJywKICAgIG5hbWU6ICdsYWJvclN1YmNvbnRyYWN0X2RldGFpbCcsCiAgICBjb2RlOiAnbGFvd3VmZW5iYW9oZXRvbmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2xhYm9yU3ViY29udHJhY3QvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICflirPliqHliIbljIXlkIjlkIwnCiAgICB9CiAgfSwgewogICAgLy8g5Lq65ZGY6L+b6YCA5Zy6566h55CGCiAgICBwYXRoOiAnL2VudHJhbmNlQW5kRXhpdE1hbmFnZW1lbnRfZGV0YWlsJywKICAgIG5hbWU6ICdlbnRyYW5jZUFuZEV4aXRNYW5hZ2VtZW50X2RldGFpbCcsCiAgICBjb2RlOiAnamludHVpY2hhbmdndWFubGknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2VudHJhbmNlQW5kRXhpdE1hbmFnZW1lbnQvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfkurrlkZjov5vpgIDlnLrnrqHnkIYnCiAgICB9CiAgfSwgewogICAgLy8g6K6+5aSH6L+b5Zy6CiAgICBwYXRoOiAnL2VxdWlwbWVudEVudHJ5Rm9ySW5zcGVjdGlvbl9kZXRhaWwnLAogICAgbmFtZTogJ2VxdWlwbWVudEVudHJ5Rm9ySW5zcGVjdGlvbl9kZXRhaWwnLAogICAgY29kZTogJ3NoZWJlaWppbmNoYW5nYmFveWFuJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2NvbnRyYWN0TWFuYWdlbWVudC9lcXVpcG1lbnRFbnRyeUZvckluc3BlY3Rpb24vdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICforr7lpIfov5vlnLrmiqXpqownCiAgICB9CiAgfSwgewogICAgLy8g6K6+5aSH6YCA5Zy6CiAgICBwYXRoOiAnL2VxdWlwbWVudEV4aXRGb3JJbnNwZWN0aW9uX2RldGFpbCcsCiAgICBuYW1lOiAnZXF1aXBtZW50RXhpdEZvckluc3BlY3Rpb25fZGV0YWlsJywKICAgIGNvZGU6ICdzaGViZWl0dWljaGFuZ2Jhb3lhbicsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvZXF1aXBtZW50RXhpdEZvckluc3BlY3Rpb24vdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICforr7lpIfpgIDlnLrmiqXpqownCiAgICB9CiAgfSwgewogICAgLy8g6aG555uu5byA5bel55Sz6K+3CiAgICBwYXRoOiAnL3Byb2plY3RDb21tZW5jZW1lbnRBcHBsaWNhdGlvbl9kZXRhaWwnLAogICAgbmFtZTogJ3Byb2plY3RDb21tZW5jZW1lbnRBcHBsaWNhdGlvbl9kZXRhaWwnLAogICAgY29kZTogJ3hpYW5nbXVrYWlnb25nc2hlbnFpbmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvcHJvamVjdENvbW1lbmNlbWVudEFwcGxpY2F0aW9uL3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6aG555uu5byA5bel55Sz6K+3JwogICAgfQogIH0sIHsKICAgIC8vIOmhueebruW8gOW3peeUs+ivtwogICAgcGF0aDogJy9zZXBhcmF0ZUFwcGxpY2F0aW9uRm9yQ29tbWVuY2VtZW50X2RldGFpbCcsCiAgICBuYW1lOiAnc2VwYXJhdGVBcHBsaWNhdGlvbkZvckNvbW1lbmNlbWVudF9kZXRhaWwnLAogICAgY29kZTogJ2ZlbnhpYW5na2FpZ29uZ3NoZW5xaW5nJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3NlcGFyYXRlQXBwbGljYXRpb25Gb3JDb21tZW5jZW1lbnQvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfliIbpobnlvIDlt6XnlLPor7cnCiAgICB9CiAgfSwgewogICAgLy8g6LSo6YeP566A5oqlCiAgICBwYXRoOiAnL3F1YWxpdHlQcmVzZW50YXRpb25fZGV0YWlsJywKICAgIG5hbWU6ICdxdWFsaXR5UHJlc2VudGF0aW9uX2RldGFpbCcsCiAgICBjb2RlOiAnemhpbGlhbmdqaWFuYmFvJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3F1YWxpdHlQcmVzZW50YXRpb24vdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfotKjph4/nroDmiqUnCiAgICB9CiAgfSwgewogICAgLy8g6aaW5Lu26K6k5Y+vCiAgICBwYXRoOiAnL2ZpcnN0UHJvY2Vzc0FwcHJvdmFsX2RldGFpbCcsCiAgICBuYW1lOiAnZmlyc3RQcm9jZXNzQXBwcm92YWxfZGV0YWlsJywKICAgIGNvZGU6ICdzaG91amlhbnJlbmtlJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL2ZpcnN0UHJvY2Vzc0FwcHJvdmFsL3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6aaW5Lu26K6k5Y+vJwogICAgfQogIH0sIHsKICAgIC8vIOebkeeQhui0qOmHjwogICAgcGF0aDogJy9zdXBlcnZpc2lvbk9mSW5zdHJ1Y3Rpb25fZGV0YWlsJywKICAgIG5hbWU6ICdzdXBlcnZpc2lvbk9mSW5zdHJ1Y3Rpb25fZGV0YWlsJywKICAgIGNvZGU6ICdqaWFubGl6aGlsaW5nJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3N1cGVydmlzaW9uT2ZJbnN0cnVjdGlvbi92aWV3Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ebkeeQhui0qOmHjycKICAgIH0KICB9LCB7CiAgICAvLyDnm5HnkIbpgJrnn6UKICAgIHBhdGg6ICcvc3VwZXJ2aXNpb25Ob3RpY2VfZGV0YWlsJywKICAgIG5hbWU6ICdzdXBlcnZpc2lvbk5vdGljZV9kZXRhaWwnLAogICAgY29kZTogJ2ppYW5saXRvbmd6aGknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2Uvc3VwZXJ2aXNpb25Ob3RpY2UvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfnm5HnkIbpgJrnn6UnCiAgICB9CiAgfSwgewogICAgLy8g55uR55CG5peB56uZCiAgICBwYXRoOiAnL3N1cGVydmlzaW9uU3RhdGlvbl9kZXRhaWwnLAogICAgbmFtZTogJ3N1cGVydmlzaW9uU3RhdGlvbl9kZXRhaWwnLAogICAgY29kZTogJ2ppYW5saXBhbmd6aGFuJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3N1cGVydmlzaW9uU3RhdGlvbi92aWV3Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ebkeeQhuaXgeermScKICAgIH0KICB9LCB7CiAgICAvLyDnm5HnkIblt6Hop4YKICAgIHBhdGg6ICcvc3VwZXJ2aXNpb25QYXRyb2xfZGV0YWlsJywKICAgIG5hbWU6ICdzdXBlcnZpc2lvblBhdHJvbF9kZXRhaWwnLAogICAgY29kZTogJ2ppYW5saXh1bnNoaScsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9wcm9qZWN0L3F1YWxpdHkvbmV3UGFnZS9zdXBlcnZpc2lvblBhdHJvbC92aWV3Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ebkeeQhuW3oeinhicKICAgIH0KICB9LCB7CiAgICAvLyDotKjph4/mo4DmtYsKICAgIHBhdGg6ICcvcXVhbGl0eVRlc3RfZGV0YWlsJywKICAgIG5hbWU6ICdxdWFsaXR5VGVzdF9kZXRhaWwnLAogICAgY29kZTogJ3poaWxpYW5namlhbmNlJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL3Byb2plY3QvcXVhbGl0eS9uZXdQYWdlL3F1YWxpdHlUZXN0L3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6LSo6YeP5qOA5rWLJwogICAgfQogIH0sIHsKICAgIC8vIOi0qOmHj+a0u+WKqAogICAgcGF0aDogJy9xdWFsaXR5QWN0aXZpdHlfZGV0YWlsJywKICAgIG5hbWU6ICdxdWFsaXR5QWN0aXZpdHlfZGV0YWlsJywKICAgIGNvZGU6ICd6aGlsaWFuZ2h1b2RvbmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9xdWFsaXR5L25ld1BhZ2UvcXVhbGl0eUFjdGl2aXR5L3ZpZXcnKTsKICAgIH0sCiAgICBtZXRhOiB7CiAgICAgIHRpdGxlOiAn6LSo6YeP5rS75YqoJwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvY3VycmVudEFjY291bnRNYW5hZ2VtZW50X2RldGFpbCcsCiAgICBuYW1lOiAnY3VycmVudEFjY291bnRNYW5hZ2VtZW50X2RldGFpbCcsCiAgICBjb2RlOiAnd2FuZ2xhaWt1YW5ndWFubGknLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L2N1cnJlbnRBY2NvdW50TWFuYWdlbWVudC92aWV3Jyk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9wZXJzb25uZWxDaGFuZ2VfZGV0YWlsJywKICAgIG5hbWU6ICdwZXJzb25uZWxDaGFuZ2VfZGV0YWlsJywKICAgIGNvZGU6ICdyZW55dWFuYmlhbmdlbmcsc2dkd3J5Ymcsamxkd3J5YmcscXpkd3J5YmcnLAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvY29udHJhY3RNYW5hZ2VtZW50L3BlcnNvbkNoYW5nZS92aWV3Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+S6uuWRmOWPmOabtCcKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2FwcGxpY2F0aW9uRm9yTGVhdmVfZGV0YWlsJywKICAgIG5hbWU6ICdhcHBsaWNhdGlvbkZvckxlYXZlX2RldGFpbCcsCiAgICBjb2RlOiAncWluZ2ppYXNoZW5xaW5nLHNnZHdyeXFqLGpsZHdyeXFqLHF6ZHdyeXFqJywKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL3ZpZXdzL2NvbnRyYWN0TWFuYWdlbWVudC9sZWF2ZS92aWV3Jyk7CiAgICB9LAogICAgbWV0YTogewogICAgICB0aXRsZTogJ+ivt+S8keWBhycKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3N0YWZmU3VibWl0X2RldGFpbCcsCiAgICBuYW1lOiAnc3RhZmZTdWJtaXRfZGV0YWlsJywKICAgIGNvZGU6ICdoZXRvbmdyZW55dWFuYmFvc2hlbixzZ2R3aHRyeWJzLGpsZHdodHJ5YnMscXpkd2h0cnlicycsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC92aWV3cy9jb250cmFjdE1hbmFnZW1lbnQvc3RhZmZTdWJtaXQvdmlldycpOwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgdGl0bGU6ICfkurrlkZjmiqXlrqEnCiAgICB9CiAgfV0KfSwgewogIHBhdGg6ICcvcGVyc29ubmVsQ2hhbmdlJywKICBuYW1lOiAncGVyc29ubmVsQ2hhbmdlJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC9wZXJzb25uZWxDaGFuZ2UnKTsKICB9LAogIG1ldGE6IHsKICAgIHRpdGxlOiAn5Lq65ZGY5Y+Y5pu0JwogIH0KfSwgewogIHBhdGg6ICcvdGFrZVZhY2F0aW9uJywKICBuYW1lOiAndGFrZVZhY2F0aW9uJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBpbXBvcnQoJ0Avdmlld3MvcHJvamVjdC9jb250cmFjdC90YWtlVmFjYXRpb24nKTsKICB9LAogIG1ldGE6IHsKICAgIHRpdGxlOiAn6K+35LyR5YGHJwogIH0KfSwgewogIHBhdGg6ICcqJywKICByZWRpcmVjdDogJy8nCn1dOw=="},null]}