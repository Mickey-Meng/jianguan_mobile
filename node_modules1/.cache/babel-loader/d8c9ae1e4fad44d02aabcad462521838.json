{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\utils\\gcoord.js","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\utils\\gcoord.js","mtime":1684246187902},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\babel.config.js","mtime":1684246187306},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1684411445099},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}