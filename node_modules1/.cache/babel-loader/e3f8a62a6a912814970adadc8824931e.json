{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\security\\record.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\security\\record.vue","mtime":1684246188049},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\babel.config.js","mtime":1684246187306},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1684411445099},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovV29ya3NwYWNlL0ppYW5HdWFuL2ppYW5ndWFuX21vYmlsZS9tb2JpbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgeyBnZXRHb25nUXVQcm9qZWN0LCBnZXRQcm9qZWN0LCBnZXRBbGxTdGF0dXNTYWZlRXZlbnQgfSBmcm9tICdAL2FwaS9wcm9qZWN0LmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBbXSwKICAgICAgbGlzdFRlbXA6IFtdLAogICAgICByZWZyZXNoaW5nOiBmYWxzZSwKICAgICAgZmluaXNoZWQ6IGZhbHNlLAogICAgICBzaG93RGVsYXk6IGZhbHNlLAogICAgICBkZWxheUl0ZW06IHt9LAogICAgICBzdGF0dXNOYW1lOiBbJ+aPkOS6pOS6i+S7ticsICfnlLPor7flu7bmnJ8nLCAn5o+Q5Lqk5pW05pS5JywgJ+ehruiupOaVtOaUuSddLAogICAgICBzdGF0dXNDb2xvcjogWydjb21tb24tc3RhdHVzLTAnLCAnY29tbW9uLXN0YXR1cy0xJywgJ2NvbW1vbi1zdGF0dXMtMicsICdjb21tb24tc3RhdHVzLTMnXSwKICAgICAgcXVlcnlJdGVtOiB7fSwKICAgICAgc2hvd1BvcmplY3RTZWxlY3Q6IGZhbHNlLAogICAgICBzY3JvbGxlckhlaWdodDogJycsCiAgICAgIHByb2plY3RBY3Rpb25zOiBbXSwKICAgICAgZ29uZ1F1OiBbXSwKICAgICAgc2hvd1N0YXR1c1NlbGVjdDogZmFsc2UsCiAgICAgIHN0YXR1c0FjdGlvbnM6IFt7CiAgICAgICAgbmFtZTogJ+aJgOacieeKtuaAgScsCiAgICAgICAgc3RhdHVzOiAtMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+W+heWuoeaguCcsCiAgICAgICAgc3RhdHVzOiAxCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5b6F5pW05pS5JywKICAgICAgICBzdGF0dXM6IDIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfnoa7orqTmlbTmlLknLAogICAgICAgIHN0YXR1czogMwogICAgICB9XQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNjcm9sbGVySGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IC0gMTAwIC0gdGhpcy4kcmVmc1sncXVlcnlHcm91cCddLm9mZnNldEhlaWdodCArICdweCc7CiAgICB0aGlzLm9uU3RhdHVzU2VsZWN0KEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0dXNBY3Rpb25zWzBdKSkpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsR29uZ1F1KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRBbGxHb25nUXU6IGZ1bmN0aW9uIGdldEFsbEdvbmdRdSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgZ2V0R29uZ1F1UHJvamVjdCgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy5nb25nUXUgPSBkYXRhOwogICAgICAgIF90aGlzLmdldEFsbFByb2plY3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QWxsUHJvamVjdDogZnVuY3Rpb24gZ2V0QWxsUHJvamVjdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIGdldFByb2plY3QoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgdmFyIGRlZmF1bHRJdGVtID0gewogICAgICAgICAgbmFtZTogJ+aJgOacieW3peeoiycsCiAgICAgICAgICBwcm9qZWN0aWQ6IG51bGwKICAgICAgICB9OwogICAgICAgIHZhciB0ZW1wcyA9IFtkZWZhdWx0SXRlbV07CiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICB0ZW1wcy5wdXNoKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHsKICAgICAgICAgICAgbmFtZTogaXRlbS5wcm9qZWN0bmFtZQogICAgICAgICAgfSkpOwogICAgICAgIH0pOwogICAgICAgIF90aGlzMi5wcm9qZWN0QWN0aW9ucyA9IHRlbXBzOwogICAgICAgIF90aGlzMi5vblByb2plY3RTZWxlY3QoSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkZWZhdWx0SXRlbSkpKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0R29uZ1F1TmFtZTogZnVuY3Rpb24gZ2V0R29uZ1F1TmFtZShpdGVtKSB7CiAgICAgIHZhciBnb25ncXVJdGVtID0gdGhpcy5nb25nUXUuZmluZChmdW5jdGlvbiAoZ29uZ1F1SXRlbSkgewogICAgICAgIHJldHVybiBnb25nUXVJdGVtLmlkID09PSBpdGVtLmdvbmdxdWlkOwogICAgICB9KTsKICAgICAgaWYgKGdvbmdxdUl0ZW0pIHsKICAgICAgICByZXR1cm4gZ29uZ3F1SXRlbS5uYW1lOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQogICAgfSwKICAgIGdldFByb2plY3ROYW1lOiBmdW5jdGlvbiBnZXRQcm9qZWN0TmFtZShpdGVtKSB7CiAgICAgIHZhciBwcm9qZWN0SXRlbSA9IHRoaXMucHJvamVjdEFjdGlvbnMuZmluZChmdW5jdGlvbiAocHJvamVjdEl0ZW0pIHsKICAgICAgICByZXR1cm4gcHJvamVjdEl0ZW0uZ3JvdXBpZCA9PT0gaXRlbS5zaW5nbGVQcm9qZWN0SWQ7CiAgICAgIH0pOwogICAgICBpZiAocHJvamVjdEl0ZW0pIHsKICAgICAgICByZXR1cm4gcHJvamVjdEl0ZW0ucHJvamVjdG5hbWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CiAgICB9LAogICAgb25Qcm9qZWN0U2VsZWN0OiBmdW5jdGlvbiBvblByb2plY3RTZWxlY3QoaXRlbSkgewogICAgICB0aGlzLnNob3dQb3JqZWN0U2VsZWN0ID0gZmFsc2U7CiAgICAgIHRoaXMucXVlcnlJdGVtLm5hbWUgPSBpdGVtLm5hbWU7CiAgICAgIHRoaXMucXVlcnlJdGVtLnByb2plY3RpZCA9IGl0ZW0uZ3JvdXBpZDsKICAgICAgdGhpcy5vbkxvYWQoKTsKICAgIH0sCiAgICBvblN0YXR1c1NlbGVjdDogZnVuY3Rpb24gb25TdGF0dXNTZWxlY3QoaXRlbSkgewogICAgICB0aGlzLnNob3dTdGF0dXNTZWxlY3QgPSBmYWxzZTsKICAgICAgdGhpcy5xdWVyeUl0ZW0uc3RhdHVzTmFtZSA9IGl0ZW0ubmFtZTsKICAgICAgaWYgKGl0ZW0uc3RhdHVzID09PSAtMSkgewogICAgICAgIHRoaXMubGlzdFRlbXAgPSB0aGlzLmxpc3Q7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciB0ZW1wID0gW107CiAgICAgIHRoaXMubGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChfaXRlbSkgewogICAgICAgIGlmIChpdGVtLnN0YXR1cyA9PT0gMSkgewogICAgICAgICAgX2l0ZW0uc3RhdHVzID09IDIgJiYgdGVtcC5wdXNoKF9pdGVtKTsKICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uc3RhdHVzID09PSAyKSB7CiAgICAgICAgICAoX2l0ZW0uc3RhdHVzID09IDAgfHwgX2l0ZW0uc3RhdHVzID09IDEpICYmIHRlbXAucHVzaChfaXRlbSk7CiAgICAgICAgfSBlbHNlIGlmIChpdGVtLnN0YXR1cyA9PT0gMykgewogICAgICAgICAgX2l0ZW0uc3RhdHVzID09IDMgJiYgdGVtcC5wdXNoKF9pdGVtKTsKICAgICAgICB9CiAgICAgICAgLy8gaWYgKF9pdGVtLnN0YXR1cyA9PSBpdGVtLnN0YXR1cykgewogICAgICAgIC8vICAgdGVtcC5wdXNoKF9pdGVtKQogICAgICAgIC8vIH0KICAgICAgfSk7CgogICAgICB0aGlzLmxpc3RUZW1wID0gdGVtcDsKICAgIH0sCiAgICBvbkxvYWQ6IGZ1bmN0aW9uIG9uTG9hZCgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHByb2plY3RJZDogdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudEJpYW9EdWFuLmlkCiAgICAgIH07CiAgICAgIGlmICh0aGlzLnF1ZXJ5SXRlbS5wcm9qZWN0aWQpIHsKICAgICAgICBwYXJhbXMuc2luZ2xlUHJvamVjdElkID0gdGhpcy5xdWVyeUl0ZW0ucHJvamVjdGlkOwogICAgICB9CiAgICAgIGdldEFsbFN0YXR1c1NhZmVFdmVudChwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICB0aGF0Lmxpc3QgPSBkYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShiWyd1cGxvYWR0aW1lJ10ucmVwbGFjZSgvLS9nLCAnLycpKSAtIG5ldyBEYXRlKGFbJ3VwbG9hZHRpbWUnXS5yZXBsYWNlKC8tL2csICcvJykpOwogICAgICAgIH0pOwogICAgICAgIHRoYXQubGlzdFRlbXAgPSB0aGF0Lmxpc3Q7CiAgICAgICAgLy8gY29uc29sZS5sb2codGhhdC5saXN0VGVtcCkKICAgICAgICB0aGF0LnJlZnJlc2hpbmcgPSBmYWxzZTsKICAgICAgICB0aGF0LmZpbmlzaGVkID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAogICAgaXRlbUNsaWNrOiBmdW5jdGlvbiBpdGVtQ2xpY2soaXRlbSkgewogICAgICB2YXIgdGVtcCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHsKICAgICAgICBwcm9qZWN0bmFtZTogdGhpcy5nZXRQcm9qZWN0TmFtZShpdGVtKSwKICAgICAgICBnb25ncXVuYW1lOiB0aGlzLmdldEdvbmdRdU5hbWUoaXRlbSkKICAgICAgfSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnc2VjdXJpdHlEZXRhaWwnLAogICAgICAgIHBhcmFtczogdGVtcAogICAgICB9KTsKICAgIH0KICB9Cn07"},null]}