{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\menu\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\views\\project\\menu\\index.vue","mtime":1684246188004},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\babel.config.js","mtime":1684246187306},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1684411445099},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiRTovV29ya3NwYWNlL0ppYW5HdWFuL2ppYW5ndWFuX21vYmlsZS9tb2JpbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yUnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJFOi9Xb3Jrc3BhY2UvSmlhbkd1YW4vamlhbmd1YW5fbW9iaWxlL21vYmlsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkU6L1dvcmtzcGFjZS9KaWFuR3Vhbi9qaWFuZ3Vhbl9tb2JpbGUvbW9iaWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1Yi5qcyI7CmltcG9ydCBjb25zdGFudEZpZWxkIGZyb20gJ0AvYXBpL2hvbWUnOwppbXBvcnQgVGFiQmFyIGZyb20gJ0AvY29tcG9uZW50cy9UYWJCYXInOwppbXBvcnQgeyBhdXRoTWVudSB9IGZyb20gJ0AvdXRpbHMvaW5kZXgnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBDb21tb25IZWFkIGZyb20gJ0AvY29tcG9uZW50cy9oZWFkL0NvbW1vbkhlYWQnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGF1dGhUYWJsZXM6IFtdLAogICAgICBwYXJhbXM6IHRoaXMuJHJvdXRlLnBhcmFtcywKICAgICAgaXNSb3V0ZXJBbGl2ZTogdHJ1ZSwKICAgICAgc2hvd1RhYmxlczogdHJ1ZSwKICAgICAgYXV0aE1lbnU6IGF1dGhNZW51LAogICAgICB0aXRsZTogJ+aZuuaFp+W7uueuoScsCiAgICAgIHNjcm9sbGVySGVpZ2h0OiAnJwogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFRhYkJhcjogVGFiQmFyLAogICAgQ29tbW9uSGVhZDogQ29tbW9uSGVhZAogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoewogICAgbWVudUNvb2tpZTogZnVuY3Rpb24gbWVudUNvb2tpZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJpbmZvLmlkOwogICAgfQogIH0sIG1hcEdldHRlcnMoWydxdWFsaXR5RXZlbnRDb3VudCcsICdzYWZlRXZlbnRDb3VudCcsICdhZ2VuY3l0YXNrRXZlbnRDb3VudCcsCiAgLy8g5b6F5Yqe5Lu75YqhCiAgJ2NvcHl0YXNrRXZlbnRDb3VudCcsCiAgLy8g5oqE6YCB5Lu75YqhCiAgJ2RlbGF5UXVhbGl0eUV2ZW50Q291bnQnLCAnZGVsYXlTYWZlRXZlbnRDb3VudCcsICdkb1JlY3RpZmljYXRpb25RdWFsaXR5RXZlbnRDb3VudCcsICdkb1JlY3RpZmljYXRpb25TYWZlRXZlbnRDb3VudCcsICdwcm9jZXNzRmlsbGluZ0NvdW50J10pKSwKICB3YXRjaDogewogICAgbWVudUNvb2tpZTogZnVuY3Rpb24gbWVudUNvb2tpZShudikgewogICAgICAvLyBudiAmJiB0aGlzLmluaXQoKQogICAgfSwKICAgIHF1YWxpdHlFdmVudENvdW50OiBmdW5jdGlvbiBxdWFsaXR5RXZlbnRDb3VudCgpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgc2FmZUV2ZW50Q291bnQ6IGZ1bmN0aW9uIHNhZmVFdmVudENvdW50KCkgewogICAgICB0aGlzLmluaXQoKTsKICAgIH0sCiAgICAvLyDlvoXlip7ku7vliqEKICAgIGFnZW5jeXRhc2tFdmVudENvdW50OiBmdW5jdGlvbiBhZ2VuY3l0YXNrRXZlbnRDb3VudCgpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgLy8g5oqE6YCB5Lu75YqhCiAgICBjb3B5dGFza0V2ZW50Q291bnQ6IGZ1bmN0aW9uIGNvcHl0YXNrRXZlbnRDb3VudCgpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgZGVsYXlRdWFsaXR5RXZlbnRDb3VudDogZnVuY3Rpb24gZGVsYXlRdWFsaXR5RXZlbnRDb3VudCgpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgZGVsYXlTYWZlRXZlbnRDb3VudDogZnVuY3Rpb24gZGVsYXlTYWZlRXZlbnRDb3VudCgpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgZG9SZWN0aWZpY2F0aW9uUXVhbGl0eUV2ZW50Q291bnQ6IGZ1bmN0aW9uIGRvUmVjdGlmaWNhdGlvblF1YWxpdHlFdmVudENvdW50KCkgewogICAgICB0aGlzLmluaXQoKTsKICAgIH0sCiAgICBkb1JlY3RpZmljYXRpb25TYWZlRXZlbnRDb3VudDogZnVuY3Rpb24gZG9SZWN0aWZpY2F0aW9uU2FmZUV2ZW50Q291bnQoKSB7CiAgICAgIHRoaXMuaW5pdCgpOwogICAgfSwKICAgIHByb2Nlc3NGaWxsaW5nQ291bnQ6IGZ1bmN0aW9uIHByb2Nlc3NGaWxsaW5nQ291bnQoKSB7CiAgICAgIHRoaXMuaW5pdCgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuc2Nyb2xsZXJIZWlnaHQgPSB0aGlzLiRyZWZzLm1haW5NZW51Lm9mZnNldEhlaWdodCAtIHRoaXMuJHJlZnMuaGVhZC4kZWwub2Zmc2V0SGVpZ2h0ICsgJ3B4JzsKICAgIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRQcm9qZWN0ID0gY29uc3RhbnRGaWVsZC5wcm9qZWN0VHlwZXNbMF07CiAgICB0aGlzLmluaXQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIG1lbnVzLCBtZXNzYWdlTWFwLCBhdXRoTWVudXM7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0UmVhbHRpbWVNZXNzYWdlJyk7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBtZW51cyA9IF90aGlzLiRzdG9yZS5zdGF0ZS51c2VyaW5mby51c2VyQXV0aC5tZW51Q29va2llOwogICAgICAgICAgICAgIG1lc3NhZ2VNYXAgPSB7CiAgICAgICAgICAgICAgICBwcm9jZXNzQXVkaXQ6IF90aGlzLnByb2Nlc3NGaWxsaW5nQ291bnQsCiAgICAgICAgICAgICAgICBjaGVjazogX3RoaXMuZGVsYXlRdWFsaXR5RXZlbnRDb3VudCwKICAgICAgICAgICAgICAgIG1vZGlmeTogX3RoaXMucXVhbGl0eUV2ZW50Q291bnQsCiAgICAgICAgICAgICAgICB2ZXJpZnk6IF90aGlzLmRvUmVjdGlmaWNhdGlvblF1YWxpdHlFdmVudENvdW50LAogICAgICAgICAgICAgICAgc2VjdXJpdHlSZXBvcnQ6IF90aGlzLmRlbGF5U2FmZUV2ZW50Q291bnQsCiAgICAgICAgICAgICAgICBzZWN1cml0eVJlcG9ydFJlY29yZDogX3RoaXMuc2FmZUV2ZW50Q291bnQsCiAgICAgICAgICAgICAgICBhZ2VuY3l0YXNrOiBfdGhpcy5hZ2VuY3l0YXNrRXZlbnRDb3VudCwKICAgICAgICAgICAgICAgIC8vIOW+heWKnuS7u+WKoQogICAgICAgICAgICAgICAgY29weXRhc2s6IF90aGlzLmNvcHl0YXNrRXZlbnRDb3VudCwKICAgICAgICAgICAgICAgIC8vIOaKhOmAgeS7u+WKoQogICAgICAgICAgICAgICAgc2VjdXJpdHlEZWFsUmVjb3JkOiBfdGhpcy5kb1JlY3RpZmljYXRpb25TYWZlRXZlbnRDb3VudAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgYXV0aE1lbnVzID0gW107CiAgICAgICAgICAgICAgbWVudXMuZm9yRWFjaChmdW5jdGlvbiAobWVudSkgewogICAgICAgICAgICAgICAgdmFyIF9tZW51JGNoaWxkcmVuOwogICAgICAgICAgICAgICAgaWYgKChtZW51ID09PSBudWxsIHx8IG1lbnUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfbWVudSRjaGlsZHJlbiA9IG1lbnUuY2hpbGRyZW4pID09PSBudWxsIHx8IF9tZW51JGNoaWxkcmVuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbWVudSRjaGlsZHJlbi5sZW5ndGgpID4gMCkgewogICAgICAgICAgICAgICAgICB2YXIgYXV0aE1lbnVJdGVtID0gewogICAgICAgICAgICAgICAgICAgIHRpdGxlOiBtZW51Lk5BTUUsCiAgICAgICAgICAgICAgICAgICAgc3ViOiBbXQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICBtZW51LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHN1YiA9IHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGNoaWxkLk5BTUUsCiAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBjaGlsZC5VUkwsCiAgICAgICAgICAgICAgICAgICAgICBpY29uOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZS9tZW51LyIuY29uY2F0KGNoaWxkLklDT04sICIucG5nIikpCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlTWFwW2NoaWxkLk1FTlVDT0RFXSAmJiAoc3ViLm1lc3NhZ2UgPSBtZXNzYWdlTWFwW2NoaWxkLk1FTlVDT0RFXSk7CiAgICAgICAgICAgICAgICAgICAgYXV0aE1lbnVJdGVtLnN1Yi5wdXNoKHN1Yik7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBhdXRoTWVudXMucHVzaChhdXRoTWVudUl0ZW0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF90aGlzLmF1dGhUYWJsZXMgPSBhdXRoTWVudXM7CiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},null]}