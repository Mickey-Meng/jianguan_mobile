{"remainingRequest":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\map\\CesiumMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\src\\components\\map\\CesiumMap.vue","mtime":1684246187884},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\babel.config.js","mtime":1684246187306},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1684411446344},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684411445150},{"path":"E:\\Workspace\\JianGuan\\jianguan_mobile\\mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":1684411444634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["earthConfig","redline_line","stake_mark","mileage","props","serverMapLayers","type","Array","data","showSwitchMark","showSwitchLayer","layers","diyLayers","name","visible","earthHelper","viewer","cesiumLoadSuccess","projectLocations","lon","lat","count","status","finish","treeProps","label","children","treeData","treeCheckedKeys","mounted","initEarth","e","methods","openLayerTree","initLayerTree","getLayerTree","value","getTreeData","nodes","na","_iterator","_createForOfIteratorHelper","_step","s","n","done","ni","id","checked","layerId","push","err","f","nodeClick","row","earth","getDefaultLayerManager","viewLayerById","nodeCheck","node","select","setLayerVisibleById","getDataSourceByName","dataSource","index","dataSources","length","get","Cesium","CustomDataSource","add","mercator2lonlat","mercator","lonlat","x","y","Math","PI","atan","exp","_this","ZlskEarthHelper","scene","globe","showSkirts","depthTestAgainstTerrain","screenSpaceCameraController","minimumZoomDistance","maximumZoomDistance","cesiumWidget","screenSpaceEventHandler","removeInputAction","ScreenSpaceEventType","LEFT_DOUBLE_CLICK","FeatureDetection","supportsImageRenderingPixelated","resolutionScale","window","devicePixelRatio","skyBox","show","backgroundColor","Color","skyAtmosphere","sun","moon","that","readLineLayer","features","forEach","item","geometry","coordinates","Cartesian3","map","result","fromDegrees","entities","polyline","positions","width","clampToGround","material","CRIMSON","mileageDataLayer","properties","LB","position","text","concat","font","fillColor","GOLD","AQUA","showBackground","style","LabelStyle","FILL","outlineWidth","scale","verticalOrigin","VerticalOrigin","CENTER","horizontalOrigin","HorizontalOrigin","RIGHT","bestMileageLayer","site","switchLayer","setLayerVisibleByName","switchDiyLayer","getByName","control","zoom","flyToHome","camera","mode","SceneMode","SCENE2D","zoomIn","positionCartographic","height","MORPHING","ray","Ray","positionWC","directionWC","pick","worldToCameraCoordinatesPoint","direction","subtract","movementVector","multiplyByScalar","endPosition","flyTo","destination","orientation","up","duration","convert","_earthConfig$init","init","heading","pitch","roll","toRadians","getHeightFromTerrain","cartographicArray","terrainProvider","_ready","sampleTerrainMostDetailed","Promise","resolve","cartographic","getHeight"],"sources":["src/components/map/CesiumMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div id=\"map\" class=\"map\"></div>\r\n    <div class=\"switch common-card\" v-if=\"showSwitchMark\">\r\n      <van-cell center :title=\"item.name\" v-for=\"(item, index) in diyLayers\" :key=\"index\">\r\n        <template #right-icon>\r\n          <van-switch v-model=\"item.visible\" size=\"24\" @change=\"switchDiyLayer(item)\" />\r\n        </template>\r\n      </van-cell>\r\n    </div>\r\n    <div class=\"layer common-card\" v-if=\"showSwitchLayer\">\r\n      <el-tree\r\n        class=\"layer-tree\"\r\n        default-expand-all\r\n        :props=\"treeProps\"\r\n        :data=\"treeData\"\r\n        :default-checked-keys=\"treeCheckedKeys\"\r\n        show-checkbox\r\n        accordion\r\n        highlight-current\r\n        node-key=\"id\"\r\n        :default-expanded-keys=\"[2]\"\r\n        :expand-on-click-node=\"false\"\r\n        @node-click=\"nodeClick\"\r\n        @check-change=\"nodeCheck\"\r\n      >\r\n        <span slot-scope=\"{ node, data }\" class=\"custom-tree-node\">\r\n          <span>\r\n            <van-icon class=\"tree-icon\" :name=\"data.children && data.children.length > 0 ? 'idcard' : 'points'\" />{{\r\n              node.label\r\n            }}\r\n          </span>\r\n        </span>\r\n      </el-tree>\r\n    </div>\r\n    <div class=\"operate common-card\" v-if=\"cesiumLoadSuccess\">\r\n      <div :class=\"'item ' + (showSwitchMark ? 'active' : '')\" @click=\"showSwitchMark = !showSwitchMark\">\r\n        <van-icon name=\"eye-o\" size=\"28\" />\r\n        <div class=\"name\">注记</div>\r\n      </div>\r\n      <div class=\"divider\"></div>\r\n      <div :class=\"'item ' + (showSwitchLayer ? 'active' : '')\" @click=\"openLayerTree\">\r\n        <van-icon name=\"notes-o\" size=\"28\" />\r\n        <div class=\"name\">图层</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"operate control common-card\" v-if=\"cesiumLoadSuccess\">\r\n      <div @click=\"control('zoomin')\">\r\n        <van-icon name=\"plus\" size=\"28\" />\r\n      </div>\r\n      <div class=\"divider\"></div>\r\n      <div @click=\"control('zoomout')\">\r\n        <van-icon name=\"minus\" size=\"28\" />\r\n      </div>\r\n      <div class=\"divider\"></div>\r\n      <div @click=\"control('home')\">\r\n        <van-icon name=\"aim\" size=\"28\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { earthConfig } from '@/api/map.config.js'\r\nimport redline_line from '@/api/redline_line.json'\r\nimport stake_mark from '@/api/stake_mark.json'\r\nimport mileage from '@/api/mileage.json'\r\nexport default {\r\n  props: {\r\n    serverMapLayers: {\r\n      type: Array\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showSwitchMark: false,\r\n      showSwitchLayer: false,\r\n      layers: [],\r\n      diyLayers: [\r\n        {\r\n          name: '红线',\r\n          visible: true\r\n        },\r\n        {\r\n          name: '里程',\r\n          visible: false\r\n        },\r\n        {\r\n          name: '百米里程',\r\n          visible: false\r\n        }\r\n      ],\r\n      earthHelper: null,\r\n      viewer: null,\r\n      cesiumLoadSuccess: false,\r\n      projectLocations: [\r\n        {\r\n          lon: 120.16026544960445,\r\n          lat: 29.887495236979884,\r\n          name: '次坞大桥',\r\n          count: 84,\r\n          status: '正在进行桩基施工',\r\n          finish: '35'\r\n        },\r\n        {\r\n          lon: 120.10271863327932,\r\n          lat: 29.808129690315493,\r\n          name: '灵山坞1号大桥',\r\n          count: 75,\r\n          status: '正在进行桩基施工',\r\n          finish: '35'\r\n        },\r\n        {\r\n          lon: 120.10769547987013,\r\n          lat: 29.822609032800724,\r\n          name: '应店街互通主线桥',\r\n          count: 36,\r\n          status: '正在进行桩基施工',\r\n          finish: '18'\r\n        },\r\n        {\r\n          lon: 120.15349518260355,\r\n          lat: 29.883855111302335,\r\n          name: '进水村大桥',\r\n          count: 87,\r\n          status: '正在进行桩基施工',\r\n          finish: '33'\r\n        },\r\n        {\r\n          lon: 120.10447654289393,\r\n          lat: 29.702156564959076,\r\n          name: '草塔互通主线1号桥',\r\n          count: 175,\r\n          status: '正在进行桩基施工',\r\n          finish: '96'\r\n        },\r\n        {\r\n          lon: 120.10340488132115,\r\n          lat: 29.69620211542673,\r\n          name: '草塔互通主线2号桥',\r\n          count: 100,\r\n          status: '正在进行桩基施工',\r\n          finish: '12'\r\n        },\r\n\r\n        {\r\n          lon: 120.10447016357617,\r\n          lat: 29.66753287851887,\r\n          name: '草塔南互通主线桥',\r\n          count: 202,\r\n          status: '正在进行桩基施工',\r\n          finish: '80'\r\n        },\r\n        {\r\n          lon: 120.10503756128541,\r\n          lat: 29.605524316141658,\r\n          name: '溪口大桥',\r\n          count: 54,\r\n          status: '正在进行桩基施工',\r\n          finish: '31'\r\n        },\r\n        {\r\n          lon: 120.1168826850927,\r\n          lat: 29.58013549644847,\r\n          name: '杭金衢分离大桥',\r\n          count: 116,\r\n          status: '正在进行桩基施工',\r\n          finish: '20'\r\n        }\r\n      ],\r\n      treeProps: {\r\n        label: 'name',\r\n        children: 'children'\r\n      },\r\n      treeData: [],\r\n      treeCheckedKeys: []\r\n    }\r\n  },\r\n  mounted() {\r\n    earthConfig.layers = this.serverMapLayers\r\n    try {\r\n      this.initEarth()\r\n    } catch (e) {\r\n      // alert(e.message)\r\n    }\r\n  },\r\n  methods: {\r\n    openLayerTree() {\r\n      this.initLayerTree(this.earthHelper.layers.getLayerTree())\r\n      this.showSwitchLayer = !this.showSwitchLayer\r\n    },\r\n    initLayerTree(value) {\r\n      this.treeCheckedKeys = []\r\n      this.treeData = this.getTreeData(value)\r\n    },\r\n    getTreeData(nodes) {\r\n      if (!nodes) {\r\n        return []\r\n      }\r\n      const na = []\r\n      for (let ni of nodes) {\r\n        const { id, name, checked, children, layerId } = ni\r\n        const n = { id, name, checked, layerId }\r\n        if (children) {\r\n          n.children = this.getTreeData(children)\r\n        } else {\r\n          if (checked) this.treeCheckedKeys.push(id)\r\n          n.children = []\r\n        }\r\n        na.push(n)\r\n      }\r\n      return na\r\n    },\r\n    nodeClick(row) {\r\n      row.layerId && this.earthHelper.earth.getDefaultLayerManager().viewLayerById(row.layerId)\r\n    },\r\n    nodeCheck(node, select) {\r\n      node.layerId && this.earthHelper.earth.getDefaultLayerManager().setLayerVisibleById(node.layerId, select)\r\n    },\r\n    getDataSourceByName(viewer, name) {\r\n      let dataSource\r\n      for (let index = 0; index < viewer.dataSources.length; index++) {\r\n        dataSource = viewer.dataSources.get(index)\r\n        if (dataSource.name === name) {\r\n          return dataSource\r\n        }\r\n      }\r\n      dataSource = new Cesium.CustomDataSource(name)\r\n      viewer.dataSources.add(dataSource)\r\n      return dataSource\r\n    },\r\n    mercator2lonlat(mercator) {\r\n      var lonlat = { x: 0, y: 0 }\r\n      var x = (mercator.x / 20037508.34) * 180\r\n      var y = (mercator.y / 20037508.34) * 180\r\n      y = (180 / Math.PI) * (2 * Math.atan(Math.exp((y * Math.PI) / 180)) - Math.PI / 2)\r\n      lonlat.x = x\r\n      lonlat.y = y\r\n      return lonlat\r\n    },\r\n    initEarth() {\r\n      let earthHelper = new ZlskEarthHelper('map', earthConfig)\r\n      this.earthHelper = earthHelper\r\n      let viewer = earthHelper.viewer\r\n      this.viewer = viewer\r\n      viewer.scene.globe.showSkirts = true\r\n      viewer.scene.globe.depthTestAgainstTerrain = false\r\n      viewer.scene.screenSpaceCameraController.minimumZoomDistance = -4\r\n      viewer.scene.screenSpaceCameraController.maximumZoomDistance = 40000 * 1000\r\n      viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)\r\n\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n\r\n      viewer.scene.skyBox.show = false //隐藏天空盒\r\n      viewer.scene.backgroundColor = new Cesium.Color(0.0, 0.0, 0.0, 0.0) //设置背景透明\r\n      viewer.scene.skyAtmosphere.show = false //隐藏大气圈\r\n      viewer.scene.sun.show = false //隐藏太阳\r\n      viewer.scene.moon.show = false //隐藏月亮\r\n\r\n      let that = this\r\n      //加载红线\r\n      let readLineLayer = this.getDataSourceByName(viewer, '红线')\r\n      redline_line.features.forEach(item => {\r\n        if (item.geometry.type === 'LineString' && item.geometry.coordinates.length > 0) {\r\n          item.Cartesian3 = item.geometry.coordinates.map(result => {\r\n            return Cesium.Cartesian3.fromDegrees(result[0], result[1], 80)\r\n          })\r\n\r\n          readLineLayer.entities.add({\r\n            polyline: {\r\n              positions: item.Cartesian3,\r\n              width: 2,\r\n              clampToGround: true,\r\n              material: Cesium.Color.CRIMSON\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      // //加载工程位置\r\n      // let projectLocationLayer = this.getDataSourceByName(viewer, '工程位置')\r\n      // let carPositions = []\r\n      // this.projectLocations.forEach(item => {\r\n      //   carPositions.push(Cesium.Cartographic.fromDegrees(item.lon, item.lat))\r\n      // })\r\n      // setTimeout(() => {\r\n      //   this.getHeightFromTerrain(viewer, carPositions).then(data => {\r\n      //     this.projectLocations.forEach((item, index) => {\r\n      //       projectLocationLayer.entities.add({\r\n      //         position: Cesium.Cartographic.toCartesian(data[index]),\r\n      //         billboard: {\r\n      //           image: require('@/assets/image/construction.png'),\r\n      //           height: 40,\r\n      //           width: 30,\r\n      //           distanceDisplayCondition: new Cesium.DistanceDisplayCondition(0, 8000)\r\n      //         },\r\n      //         label: {\r\n      //           text: item.name,\r\n      //           font: '20px sans-serif',\r\n      //           style: Cesium.LabelStyle.FILL_AND_OUTLINE,\r\n      //           outlineColor: Cesium.Color.WHITE,\r\n      //           outlineWidth: 5,\r\n      //           fillColor: Cesium.Color.fromCssColorString('#000000'),\r\n      //           pixelOffset: new Cesium.Cartesian2(0, -40),\r\n      //           scaleByDistance: new Cesium.NearFarScalar(1.5e2, 0.8, 1.5e7, 0.2),\r\n      //           distanceDisplayCondition: new Cesium.DistanceDisplayCondition(0, 8000.0)\r\n      //         }\r\n      //       })\r\n      //     })\r\n      //   })\r\n      // }, 2000)\r\n\r\n      //加载stake_mark\r\n      let mileageDataLayer = this.getDataSourceByName(viewer, '里程')\r\n      mileageDataLayer.show = false\r\n      stake_mark.features.forEach(item => {\r\n        if (item.properties.LB == '1') {\r\n          item.Cartesian3 = Cesium.Cartesian3.fromDegrees(\r\n            item.geometry.coordinates[0],\r\n            item.geometry.coordinates[1],\r\n            85\r\n          )\r\n          mileageDataLayer.entities.add({\r\n            position: item.Cartesian3,\r\n            label: {\r\n              text: `${item.properties.name}`,\r\n              font: '28pt Source Han Sans CN', //字体样式\r\n              fillColor: Cesium.Color.GOLD, //字体颜色\r\n              backgroundColor: Cesium.Color.AQUA, //背景颜色\r\n              showBackground: false, //是否显示背景颜色\r\n              style: Cesium.LabelStyle.FILL, //label样式\r\n              outlineWidth: 2,\r\n              scale: 0.5,\r\n              verticalOrigin: Cesium.VerticalOrigin.CENTER, //垂直位置\r\n              horizontalOrigin: Cesium.HorizontalOrigin.RIGHT //水平位置\r\n              // pixelOffset: new Cesium.Cartesian2(100, -30) //偏移\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      //加载\r\n      let bestMileageLayer = this.getDataSourceByName(viewer, '百米里程')\r\n      bestMileageLayer.show = false\r\n      mileage.data.map(item => {\r\n        let site = this.mercator2lonlat(item)\r\n        let Cartesian3 = Cesium.Cartesian3.fromDegrees(site.x, site.y, 80)\r\n        bestMileageLayer.entities.add({\r\n          position: Cartesian3,\r\n          label: {\r\n            text: `${item.name}`,\r\n            font: '28pt Source Han Sans CN', //字体样式\r\n            fillColor: Cesium.Color.GOLD, //字体颜色\r\n            backgroundColor: Cesium.Color.AQUA, //背景颜色\r\n            showBackground: false, //是否显示背景颜色\r\n            style: Cesium.LabelStyle.FILL, //label样式\r\n            outlineWidth: 2,\r\n            scale: 0.5,\r\n            verticalOrigin: Cesium.VerticalOrigin.CENTER, //垂直位置\r\n            horizontalOrigin: Cesium.HorizontalOrigin.RIGHT //水平位置\r\n            // pixelOffset: new Cesium.Cartesian2(100, -30) //偏移\r\n          }\r\n        })\r\n      })\r\n\r\n      // let markerManager = this.earthHelper.earth.createMarkerManager({ clusterType: 'dilute' })\r\n      // // markerManager.beginCluster()\r\n      // getWorkPoint().then(data => {\r\n      //   if (data && data.length > 0) {\r\n      //     data.forEach(item => {\r\n      //       let { altitude, sum, finish, longlatitude, projectName, type } = item\r\n      //       let site = longlatitude.split(',')\r\n      //       let height = altitude || 20\r\n      //       let rate = Math.floor((finish / sum) * 10000) / 100\r\n      //       rate = isNaN(rate) ? 0 : rate\r\n      //       let imagename = 'image' + type\r\n      //       const image = require(`@/assets/image/${imagename}.png`)\r\n      //       if (site && site.length > 0) {\r\n      //         const id = this.earthHelper.openPopup({\r\n      //           position: [Number(site[0]), Number(site[1]), 0], // 必须 弹窗位置\r\n      //           visibleRange: [600, 45000],\r\n      //           offset: [0, -5], // 可选，弹窗是否偏移\r\n      //           width: 220, // 可选，默认值: 400\r\n      //           height: 100, // 可选，默认值: 240\r\n      //           content: `\r\n      //         <div class=\"overlayer_item\">\r\n      //         <div class=\"overlayer_header\">${projectName}</div>\r\n      //         <div class=\"overlayer_content\">\r\n      //          <div class=\"content_info\">共计数量：${sum}个构件</div>\r\n      //          <div class=\"content_info\">完成数量：${finish}个构件</div>\r\n      //          <div class=\"content_info\">完成比例:<span class=\"process\">${rate}%</span></div>\r\n      //         </div>\r\n      //       </div>`, // 弹框内容 可选，默认值: ''\r\n      //           class: 'popup', // 可选，默认值:\r\n      //           closable: false // 关闭按钮 可选，默认值: true\r\n      //         })\r\n      //         // this.markerId.push(id)\r\n      //         markerManager.add({\r\n      //           position: [Number(site[0]), Number(site[1]), height],\r\n      //           image,\r\n      //           // text: properties.Name,\r\n      //           visibleRange: [600, 1e9],\r\n      //           imageScaleRange: [0, 1, 1e9, 0.5],\r\n      //           textVisibleRange: [600, 45000],\r\n      //           // textColor: textColor,\r\n      //           textOffset: [0, -45],\r\n      //           textBackground: true, // 可选，默认值: true\r\n      //           // textBgColor: textBgColor,\r\n      //           // handleLineColor: [255, 255, 0, 255],\r\n      //           onClick: function(id, b, c) {\r\n      //             // const entity = em.getById(id)\r\n      //             // entity && zeh.viewer.flyTo(entity)\r\n      //           }\r\n      //         })\r\n      //       }\r\n      //     })\r\n      //   }\r\n      // })\r\n      this.cesiumLoadSuccess = true\r\n    },\r\n    switchLayer(item) {\r\n      this.earthHelper.earth.getDefaultLayerManager().setLayerVisibleByName(item.name, item.visible)\r\n    },\r\n    switchDiyLayer(item) {\r\n      let dataSources = this.viewer.dataSources.getByName(item.name)\r\n      dataSources && dataSources.length !== 0 && (dataSources[0].show = item.visible)\r\n    },\r\n    control(type) {\r\n      if (type === 'zoomin') {\r\n        this.zoom(0.5)\r\n      } else if (type === 'zoomout') {\r\n        this.zoom(2)\r\n      } else if (type === 'home') {\r\n        this.flyToHome()\r\n      }\r\n    },\r\n    zoom(scale) {\r\n      let viewer = this.viewer\r\n      let camera = viewer.camera\r\n      if (viewer.scene.mode === Cesium.SceneMode.SCENE2D) {\r\n        camera.zoomIn(camera.positionCartographic.height * (1 - scale))\r\n        return\r\n      } else if (viewer.scene.mode === Cesium.SceneMode.MORPHING) {\r\n        return\r\n      }\r\n      let ray = new Cesium.Ray(camera.positionWC, camera.directionWC)\r\n      let result = viewer.scene.globe.pick(ray, viewer.scene)\r\n      result = camera.worldToCameraCoordinatesPoint(result)\r\n\r\n      let direction = Cesium.Cartesian3.subtract(camera.position, result, new Cesium.Cartesian3())\r\n      let movementVector = Cesium.Cartesian3.multiplyByScalar(direction, scale, direction)\r\n      let endPosition = Cesium.Cartesian3.add(result, movementVector, result)\r\n\r\n      camera.flyTo({\r\n        destination: endPosition,\r\n        orientation: {\r\n          direction: camera.direction,\r\n          up: camera.up\r\n        },\r\n        duration: 0.5,\r\n        convert: false\r\n      })\r\n    },\r\n    flyToHome() {\r\n      let { lon, lat, height, heading, pitch, roll, duration } = earthConfig.init\r\n      this.viewer.camera.flyTo({\r\n        destination: Cesium.Cartesian3.fromDegrees(lon || 114.401058, lat || 30.457356, height || 2000),\r\n        orientation: {\r\n          heading: Cesium.Math.toRadians(heading || 0),\r\n          pitch: Cesium.Math.toRadians(pitch || -90),\r\n          roll: Cesium.Math.toRadians(roll || 0),\r\n          duration: duration || 2\r\n        }\r\n      })\r\n    },\r\n    getHeightFromTerrain(viewer, cartographicArray) {\r\n      if (viewer.terrainProvider._ready) {\r\n        return Cesium.sampleTerrainMostDetailed(viewer.terrainProvider, cartographicArray)\r\n      } else {\r\n        return new Promise(resolve => {\r\n          cartographicArray.forEach(cartographic => {\r\n            cartographic.height = viewer.scene.globe.getHeight(cartographic) || 0\r\n          })\r\n          resolve(cartographicArray)\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.map-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  .map {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url(../../assets/image/world.jpg) no-repeat;\r\n  }\r\n  .operate {\r\n    background-color: white;\r\n    position: absolute;\r\n    right: 5px;\r\n    top: calc(50% - 80px);\r\n    width: 38px;\r\n    text-align: center;\r\n    .divider {\r\n      width: 100%;\r\n      height: 1px;\r\n      background: #eee;\r\n      margin: 2px 0;\r\n    }\r\n    .item {\r\n      .name {\r\n        margin-top: -5px;\r\n      }\r\n    }\r\n    .active {\r\n      color: $hover-color;\r\n    }\r\n  }\r\n  .control {\r\n    bottom: 5px;\r\n    top: initial;\r\n  }\r\n  .switch {\r\n    background-color: white;\r\n    width: 140px;\r\n    position: absolute;\r\n    left: 5px;\r\n    top: 5px;\r\n    .van-cell {\r\n      padding: 5px 8px;\r\n    }\r\n  }\r\n  .layer {\r\n    background-color: white;\r\n    position: absolute;\r\n    left: 5px;\r\n    bottom: 5px;\r\n    padding: 4px 10px;\r\n    max-height: 400px;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n    .layer-tree {\r\n      font-size: 14px;\r\n      .tree-icon {\r\n        margin: 0 2px;\r\n      }\r\n    }\r\n  }\r\n}\r\n.overlayer_item {\r\n  .overlayer_header {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    width: 100%;\r\n    background: linear-gradient(90deg, rgba(59, 255, 237, 0.4) 0%, rgba(75, 182, 252, 0.05) 100%);\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n  .overlayer_content {\r\n    margin-left: 10px;\r\n    .content_info {\r\n      margin: 5px 0;\r\n      .process {\r\n        color: aqua;\r\n        display: inline-block;\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}